swagger: '2.0'
schemes:
  - https
host: api.openrouteservice.org
info:
  contact:
    email: enquiry@openrouteservice.heigit.org
  description: 'This is the openrouteservice API V2 documentation for ORS Core-Version `6.8.1`. Documentations for [older Core-Versions](https://github.com/GIScience/openrouteservice-docs/releases) can be rendered with the [Swagger-Editor](https://editor.swagger.io/).'
  license:
    name: MIT
    url: 'https://github.com/swagger-api/swagger-ui/blob/master/LICENSE'
  title: Openrouteservice
  version: 6.8.1
  x-apisguru-categories:
    - location
  x-logo:
    backgroundColor: '#FFFFFF'
    url: 'https://openrouteservice.org/dev/static/img/logo@2x.1368651.png'
  x-origin:
    - format: swagger
      url: 'https://openrouteservice.org/wp-json/ors-api/v1/api-doc/source/V2'
      version: '2.0'
  x-providerName: openrouteservice.org
tags:
  - description: Get node centrality for different modes of transport
    name: Centrality
  - description: Get directions for different modes of transport
    name: Directions
  - description: Obtain areas of reachability from given locations
    name: Isochrones
  - description: 'Obtain one-to-many, many-to-one and many-to-many matrices for time and distance'
    name: Matrix
  - description: Health API
    name: health-api
  - description: Status API
    name: status-api
  - description: Resolve input coordinates to addresses and vice versa
    name: Geocode
  - description: Obtain POIs of an area
    name: Pois
  - description: |
      Returns elevation for point or line geometries by building 3D geometries from freely available data sources.
    name: Elevation
  - description: ''
    name: Optimization
paths:
  /elevation/line:
    post:
      description: |
        This endpoint can take planar 2D line objects and enrich them with elevation from a variety of datasets.

        The input and output formats are:
          * GeoJSON
          * Polyline
          * <a href="https://developers.google.com/maps/documentation/utilities/polylinealgorithm">Google's Encoded polyline</a> with coordinate precision 5 or 6

        Example:
        ```
          # POST LineString as polyline
          curl -XPOST https://api.openrouteservice.org/elevation/line
            -H 'Content-Type: application/json' \
            -H 'Authorization: INSERT_YOUR_KEY
            -d '{
              "format_in": "polyline",
              "format_out": "encodedpolyline5",
              "geometry": [[13.349762, 38.112952],
                           [12.638397, 37.645772]]
                }'
        ```
      parameters:
        - default: your-api-key
          description: |
            Insert your API Key here.
          in: header
          name: Authorization
          required: true
          type: string
        - description: Query the elevation of a line in various formats.
          example: '{"format_in":"polyline","format_out":"encodedpolyline5","geometry":[[13.349762,38.112952],[12.638397,37.645772]]}'
          in: body
          name: body
          props:
            dataset:
              apiDefault: srtm
              description: The elevation dataset to be used.
              enum:
                - srtm
              type: string
            format_in:
              description: The input format the API has to expect.
              enum:
                - geojson
                - polyline
                - encodedpolyline5
                - encodedpolyline6
              example: encodedpolyline5
              required: true
              type: string
            format_out:
              apiDefault: geojson
              description: The output format to be returned.
              enum:
                - geojson
                - polyline
                - encodedpolyline5
                - encodedpolyline6
              type: string
            geometry:
              description: |
                * geojson: A geometry object of a LineString GeoJSON, e.g.
                         {"type": "LineString",
                          "coordinates": [[13.331302, 38.108433],[13.331273, 38.10849]]
                         }
                * polyline: A list of coordinate lists, e.g.
                         [[13.331302, 38.108433], [13.331273, 38.10849]]

                * encodedpolyline5: A <a href="https://developers.google.com/maps/documentation/utilities/polylinealgorithm">Google encoded polyline</a> with a coordinate precision of 5, e.g.
                         u`rgFswjpAKD

                * encodedpolyline6: A <a href="https://developers.google.com/maps/documentation/utilities/polylinealgorithm">Google encoded polyline</a> with a coordinate precision of 6, e.g.
                         ap}tgAkutlXqBx@
              example: u`rgFswjpAKD
              required: true
              type: object
          required: true
          type: object
      responses:
        '200':
          description: Standard response for successfully processed requests.
          schema:
            properties:
              attribution:
                type: string
              geometry:
                properties:
                  coordinates:
                    items:
                      items:
                        type: float
                      maxItems: 2
                      minItems: 2
                      type: array
                    type: array
                  type:
                    type: string
                type: object
              timestamp:
                type: integer
              version:
                type: string
            type: object
        '401':
          description: Authorization field missing.
        '403':
          description: Key not authorised.
        '500':
          description: |
            An unexpected error was encountered and more detailed internal
            errorcode is provided.
            | Internal Code | Description                                        |
            |:-------------:|----------------------------------------------------|
            | 4001 |  ValueError in parameters |
            | 4002 |  Wrong HTTP headers |
            | 4003 |  Problems with the provided geometry |
            | 4004 |  Exceeded the number of allowed vertices |
      summary: Elevation Line Service
      tags:
        - Elevation
  /elevation/point:
    get:
      description: |
        This endpoint can take a 2D point and enrich it with elevation from a variety of datasets.

        The output formats are:
          * GeoJSON
          * Point

        Example:
        ```
          # GET point
          curl -XGET https://localhost:5000/elevation/point?geometry=13.349762,38.11295
        ```
      parameters:
        - description: |
            Insert your API Key here.
          example: your-api-key
          in: query
          name: api_key
          required: true
          type: string
        - description: 'The point to be queried, in comma-separated lon,lat values, e.g. [13.349762, 38.11295]'
          example: '13.349762,38.11295'
          in: query
          items:
            type: double
          name: geometry
          required: true
          type: array
        - apiDefault: geojson
          description: The output format to be returned.
          enum:
            - geojson
            - point
          in: query
          name: format_out
          type: string
        - apiDefault: srtm
          description: The elevation dataset to be used.
          enum:
            - srtm
          in: query
          name: dataset
          type: string
      responses:
        '200':
          description: Standard response for successfully processed requests.
          schema:
            properties:
              attribution:
                type: string
              geometry:
                properties:
                  coordinates:
                    items:
                      items:
                        type: float
                      maxItems: 2
                      minItems: 2
                      type: array
                    type: array
                  type:
                    type: string
                type: object
              timestamp:
                type: integer
              version:
                type: string
            type: object
        '401':
          description: Authorization field missing.
        '403':
          description: Key not authorised.
        '500':
          description: |
            An unexpected error was encountered and more detailed internal
            errorcode is provided.
            | Internal Code | Description                                        |
            |:-------------:|----------------------------------------------------|
            | 4001 |  ValueError in parameters |
            | 4002 |  Wrong HTTP headers |
            | 4003 |  Problems with the provided geometry |
            | 4004 |  Exceeded the number of allowed vertices |
      summary: Elevation Point Service
      tags:
        - Elevation
    post:
      description: |
        This endpoint can take a 2D point and enrich it with elevation from a variety of datasets.

        The input and output formats are:
          * GeoJSON
          * Point

        Example:
        ```
          # POST point as GeoJSON
          # https://api.openrouteservice.org/elevation/point?api_key=YOUR-KEY
          {
            "format_in": "geojson",
            "format_out": "geojson",
            "geometry": {
              "coordinates": [13.349762, 38.11295],
              "type": "Point"
            }
          }
        ```
      parameters:
        - default: your-api-key
          description: |
            Insert your API Key here.
          in: header
          name: Authorization
          required: true
          type: string
        - description: Query the elevation of a point in various formats.
          example: '{"format_in":"geojson","format_out":"geojson","geometry":{"coordinates":[13.349762,38.11295],"type":"Point"}}'
          in: body
          name: body
          properties:
            dataset:
              apiDefault: srtm
              description: The elevation dataset to be used.
              enum:
                - srtm
              type: string
            format_in:
              description: The input format the API has to expect.
              enum:
                - geojson
                - point
              example: point
              required: true
              type: string
            format_out:
              apiDefault: geojson
              description: The output format to be returned.
              enum:
                - geojson
                - point
              type: string
            geometry:
              description: |
                * geojson: A geometry object of a Point GeoJSON, e.g.
                         {"type": "Point",
                          "coordinates": [13.331273, 38.10849]
                         }
                * point: A coordinate list, e.g.
                         [13.331273, 38.10849]
              example:
                - 13.331273
                - 38.10849
              required: true
              type: object
          required: true
          type: object
      responses:
        '200':
          description: Standard response for successfully processed requests.
          schema:
            properties:
              attribution:
                type: string
              geometry:
                properties:
                  coordinates:
                    items:
                      items:
                        type: float
                      maxItems: 2
                      minItems: 2
                      type: array
                    type: array
                  type:
                    type: string
                type: object
              timestamp:
                type: integer
              version:
                type: string
            type: object
        '401':
          description: Authorization field missing.
        '403':
          description: Key not authorised.
        '500':
          description: |
            An unexpected error was encountered and more detailed internal
            errorcode is provided.
            | Internal Code | Description                                        |
            |:-------------:|----------------------------------------------------|
            | 4001 |  ValueError in parameters |
            | 4002 |  Wrong HTTP headers |
            | 4003 |  Problems with the provided geometry |
            | 4004 |  Exceeded the number of allowed vertices |
      summary: Elevation Point Service
      tags:
        - Elevation
  /geocode/autocomplete:
    get:
      description: |
        **Requests should be throttled when using this endpoint!**
        *Be aware that Responses are asynchronous.*
        Returns a JSON formatted list of objects corresponding to the search input. `boundary.*`-parameters can be combined if they are overlapping. **The interactivity for this enpoint is experimental!** [Please refer to this external Documentation](https://github.com/pelias/documentation/blob/master/autocomplete.md)
      parameters:
        - default: your-api-key
          description: |
            Insert your API Key here.
          in: query
          name: api_key
          required: true
          type: string
        - default: Toky
          description: |
            Name of location, street address or postal code.
          example: Toky
          in: query
          name: text
          required: true
          type: string
        - description: |
            Longitude of the `focus.point`. Specify the focus point to order results by linear distance to this point. Works for up to 100 kilometers distance.  Use with `focus.point.lat`.
          example: 8.673964
          format: float
          in: query
          name: focus.point.lon
          type: number
        - description: |
            Latitude of the `focus.point`. Specify the focus point to order results by linear distance to this point. Works for up to 100 kilometers distance. Use with `focus.point.lon`.
          example: 49.436431
          format: float
          in: query
          name: focus.point.lat
          type: number
          validWhen:
            - ref: focus.point.lon
              skipRootPathLookup: true
        - description: |
            Left border of rectangular boundary to narrow results.
          example: 8.557663
          format: float
          in: query
          name: boundary.rect.min_lon
          type: number
        - description: |
            Bottom border of rectangular boundary to narrow results.
          example: 49.331387
          format: float
          in: query
          name: boundary.rect.min_lat
          type: number
          validWhen:
            - ref: boundary.rect.min_lon
              skipRootPathLookup: true
        - description: |
            Right border of rectangular boundary to narrow results.
          example: 8.972054
          format: float
          in: query
          name: boundary.rect.max_lon
          type: number
          validWhen:
            - ref: boundary.rect.min_lon
              skipRootPathLookup: true
            - ref: boundary.rect.min_lat
              skipRootPathLookup: true
        - description: |
            Top border of rectangular boundary to narrow results.
          example: 49.525654
          format: float
          in: query
          name: boundary.rect.max_lat
          type: number
          validWhen:
            - ref: boundary.rect.min_lon
              skipRootPathLookup: true
            - ref: boundary.rect.min_lat
              skipRootPathLookup: true
            - ref: boundary.rect.max_lon
              skipRootPathLookup: true
        - description: |
            Restrict results to single country. Possible values are [alpha-2 and alpha-3 country codes](https://en.wikipedia.org/wiki/ISO_3166-1). Example: `DEU` or `DE` for Germany.
          example: DE
          in: query
          name: boundary.country
          type: string
        - apiDefault: 'osm,oa,gn,wof'
          description: |
            Restrict your search to specific sources. Searches all sources by default. You can either use the normal or short name. Sources are [`openstreetmap(osm)`](http://www.openstreetmap.org/), [`openaddresses(oa)`](http://openaddresses.io/), [`whosonfirst(wof)`](https://whosonfirst.org/), [`geonames(gn)`](http://www.geonames.org/).
          enum:
            - openstreetmap
            - openaddresses
            - whosonfirst
            - geonames
          in: query
          multiSelect: true
          name: sources
          type: array
          uniqueItems: true
        - description: |
            Restrict search to layers (place type). By default all layers are searched.

              layer|description|
              ----|----|
              `venue`|points of interest, businesses, things with walls|
              `address`|places with a street address|
              `street`|streets,roads,highways|
              `neighbourhood`|social communities, neighbourhoods|
              `borough`|a local administrative boundary, currently only used for New York City|
              `localadmin`|local administrative boundaries|
              `locality`|towns, hamlets, cities|
              `county`|official governmental area; usually bigger than a locality, almost always smaller than a region|
              `macrocounty`|a related group of counties. Mostly in Europe.|
              `region`|states and provinces|
              `macroregion`|a related group of regions. Mostly in Europe|
              `country`|places that issue passports, nations, nation-states|
              `coarse`|alias for simultaneously using all administrative layers (everything except `venue` and `address`)|
          enum:
            - address
            - venue
            - neighbourhood
            - locality
            - borough
            - localadmin
            - county
            - macrocounty
            - region
            - macroregion
            - country
            - coarse
          example: 'region,county'
          in: query
          multiSelect: true
          name: layers
          type: array
          uniqueItems: true
      responses:
        '200':
          description: 'Please refer to [this external documentation](https://github.com/pelias/documentation/blob/master/autocomplete.md) for this endpoint'
      summary: Geocode Autocomplete Service
      tags:
        - Geocode
  /geocode/reverse:
    get:
      description: |
        Returns the next enclosing object with an address tag which surrounds the given coordinate. **The interactivity for this enpoint is experimental!** [Please refer to this external Documentation](https://github.com/pelias/documentation/blob/master/reverse.md#reverse-geocoding)
      parameters:
        - default: your-api-key
          description: |
            Insert your API Key here.
          in: query
          name: api_key
          required: true
          type: string
        - default: 2.294471
          description: |
            Longitude of the coordinate to query.
          example: 2.294471
          format: float
          in: query
          name: point.lon
          required: true
          type: number
        - default: 48.858268
          description: |
            Latitude of the coordinate to query.
          example: 48.858268
          format: float
          in: query
          name: point.lat
          required: true
          type: number
        - apiDefault: 1
          description: |
            Restrict search to circular region around `point.lat/point.lon`. Value in kilometers.
          example: 35
          in: query
          name: boundary.circle.radius
          type: number
        - apiDefault: 10
          description: |
            Set the number of returned results.
          format: int64
          in: query
          name: size
          type: integer
        - description: |
            Restrict search to layers (place type). By default all layers are searched.

              layer|description|
              ----|----|
              `venue`|points of interest, businesses, things with walls|
              `address`|places with a street address|
              `street`|streets,roads,highways|
              `neighbourhood`|social communities, neighbourhoods|
              `locality`|towns, hamlets, cities|
              `borough`|a local administrative boundary, currently only used for New York City|
              `localadmin`|local administrative boundaries|
              `county`|official governmental area; usually bigger than a locality, almost always smaller than a region|
              `macrocounty`|a related group of counties. Mostly in Europe.|
              `region`|states and provinces|
              `macroregion`|a related group of regions. Mostly in Europe|
              `country`|places that issue passports, nations, nation-states|
              `coarse`|alias for simultaneously using all administrative layers (everything except `venue` and `address`)|
          enum:
            - venue
            - address
            - street
            - neighbourhood
            - locality
            - borough
            - localadmin
            - county
            - macrocounty
            - region
            - macroregion
            - country
            - coarse
          example: 'address,venue'
          in: query
          multiSelect: true
          name: layers
          type: array
          uniqueItems: true
        - apiDefault: 'osm,oa,gn,wof'
          description: |
            Restrict your search to specific sources. Searches all sources by default. You can either use the normal or short name. Sources are [`openstreetmap(osm)`](http://www.openstreetmap.org/), [`openaddresses(oa)`](http://openaddresses.io/), [`whosonfirst(wof)`](https://whosonfirst.org/), [`geonames(gn)`](http://www.geonames.org/).
          enum:
            - openstreetmap
            - openaddresses
            - whosonfirst
            - geonames
          in: query
          multiSelect: true
          name: sources
          type: array
          uniqueItems: true
        - description: |
            Restrict search to country by [alpha 2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) or [alpha 3](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3) codes.
          example: FR
          in: query
          name: boundary.country
          type: string
      responses:
        '200':
          description: 'Please refer to [this external documentation](https://github.com/pelias/documentation/blob/master/reverse.md#reverse-geocoding) for this endpoint'
      summary: Reverse Geocode Service
      tags:
        - Geocode
  /geocode/search:
    get:
      description: |
        Returns a JSON formatted list of objects corresponding to the search input. `boundary.*`-parameters can be combined if they are overlapping. **The interactivity for this enpoint is experimental!** [Please refer to this external Documentation](https://github.com/pelias/documentation/blob/master/search.md#search-the-world)
      parameters:
        - default: your-api-key
          description: |
            Insert your API Key here.
          in: query
          name: api_key
          required: true
          type: string
        - default: Namibian Brewery
          description: |
            Name of location, street address or postal code.
          example: Namibian Brewery
          in: query
          name: text
          required: true
          type: string
        - description: |
            Longitude of the `focus.point`. Specify the focus point to order results by linear distance to this point. Works for up to 100 kilometers distance.  Use with `focus.point.lat`.
          example: 8.673964
          format: float
          in: query
          name: focus.point.lon
          type: number
        - description: |
            Latitude of the `focus.point`. Specify the focus point to order results by linear distance to this point. Works for up to 100 kilometers distance. Use with `focus.point.lon`.
          example: 49.436431
          format: float
          in: query
          name: focus.point.lat
          type: number
          validWhen:
            - ref: focus.point.lon
              skipRootPathLookup: true
        - description: |
            Left border of rectangular boundary to narrow results.
          example: 8.557663
          format: float
          in: query
          name: boundary.rect.min_lon
          type: number
        - description: |
            Bottom border of rectangular boundary to narrow results.
          example: 49.331387
          format: float
          in: query
          name: boundary.rect.min_lat
          type: number
          validWhen:
            - ref: boundary.rect.min_lon
              skipRootPathLookup: true
        - description: |
            Right border of rectangular boundary to narrow results.
          example: 8.972054
          format: float
          in: query
          name: boundary.rect.max_lon
          type: number
          validWhen:
            - ref: boundary.rect.min_lon
              skipRootPathLookup: true
            - ref: boundary.rect.min_lat
              skipRootPathLookup: true
        - description: |
            Top border of rectangular boundary to narrow results.
          example: 49.525654
          format: float
          in: query
          name: boundary.rect.max_lat
          type: number
          validWhen:
            - ref: boundary.rect.min_lon
              skipRootPathLookup: true
            - ref: boundary.rect.min_lat
              skipRootPathLookup: true
            - ref: boundary.rect.max_lon
              skipRootPathLookup: true
        - description: |
            Center Longitude of circular boundary to narrow results. Use with `boundary.circle.lat` & `boundary.circle.radius`.
          example: 8.673964
          format: float
          in: query
          name: boundary.circle.lon
          type: number
        - description: |
            Center Latitude of circular boundary to narrow results. Use with `boundary.circle.lon` & `boundary.circle.radius`.
          example: 49.436431
          format: float
          in: query
          name: boundary.circle.lat
          type: number
          validWhen:
            - ref: boundary.circle.lon
              skipRootPathLookup: true
        - apiDefault: 50
          description: |
            Radius of circular boundary around the center coordinate in kilometers. Use with `boundary.circle.lon` & `boundary.circle.lat`.
          format: float
          in: query
          name: boundary.circle.radius
          type: number
          validWhen:
            - ref: boundary.circle.lon
              skipRootPathLookup: true
            - ref: boundary.circle.lat
              skipRootPathLookup: true
        - description: |
            Restrict results to administrative boundary using a Pelias global id [`gid`](https://github.com/pelias/documentation/blob/f1f475aa4f8c18426fb80baea636990502c08ed3/search.md#search-within-a-parent-administrative-area).
            `gid`s for records can be found using either the [Who's on First Spelunker](http://spelunker.whosonfirst.org/),
            a tool for searching Who's on First data, or from the responses of other Pelias queries.
            In this case a [search for Oklahoma](http://pelias.github.io/compare/#/v1/search%3Ftext=oklahoma)
            will return the proper `gid`.
          example: 'whosonfirst:region:85688585'
          in: query
          name: boundary.gid
          type: string
        - description: |
            Restrict results to single country. Possible values are [alpha-2 and alpha-3 country codes](https://en.wikipedia.org/wiki/ISO_3166-1). Example: `DEU` or `DE` for Germany.
          example: DE
          in: query
          name: boundary.country
          type: string
        - apiDefault: 'osm,oa,gn,wof'
          description: |
            Restrict your search to specific sources. Searches all sources by default. You can either use the normal or short name.
            Sources are [`openstreetmap(osm)`](http://www.openstreetmap.org/), [`openaddresses(oa)`](http://openaddresses.io/), [`whosonfirst(wof)`](https://whosonfirst.org/), [`geonames(gn)`](http://www.geonames.org/).
          enum:
            - openstreetmap
            - openaddresses
            - whosonfirst
            - geonames
          in: query
          multiSelect: true
          name: sources
          type: array
          uniqueItems: true
        - description: |
            Restrict search to layers (place type). By default all layers are searched.

              layer|description|
              ----|----|
              `venue`|points of interest, businesses, things with walls|
              `address`|places with a street address|
              `street`|streets,roads,highways|
              `neighbourhood`|social communities, neighbourhoods|
              `borough`|a local administrative boundary, currently only used for New York City|
              `localadmin`|local administrative boundaries|
              `locality`|towns, hamlets, cities|
              `county`|official governmental area; usually bigger than a locality, almost always smaller than a region|
              `macrocounty`|a related group of counties. Mostly in Europe.|
              `region`|states and provinces|
              `macroregion`|a related group of regions. Mostly in Europe|
              `country`|places that issue passports, nations, nation-states|
              `coarse`|alias for simultaneously using all administrative layers (everything except `venue` and `address`)|
          enum:
            - address
            - venue
            - neighbourhood
            - locality
            - borough
            - localadmin
            - county
            - macrocounty
            - region
            - macroregion
            - country
            - coarse
          example: 'region,county'
          in: query
          multiSelect: true
          name: layers
          type: array
          uniqueItems: true
        - apiDefault: 10
          description: |
            Set the number of returned results.
          format: int64
          in: query
          name: size
          type: integer
      responses:
        '200':
          description: 'Please refer to [this external documentation](https://github.com/pelias/documentation/blob/master/search.md#search-the-world) for this endpoint'
      summary: Forward Geocode Service
      tags:
        - Geocode
  /geocode/search/structured:
    get:
      description: |
        Returns a JSON formatted list of objects corresponding to the search input. **The interactivity for this enpoint is experimental!** [Please refer to this external Documentation](https://github.com/pelias/documentation/blob/master/structured-geocoding.md#structured-geocoding)
      parameters:
        - default: your-api-key
          description: |
            Insert your API Key here.
          in: query
          name: api_key
          required: true
          type: string
        - description: |
            Search for full address with house number or only a street name.
          example: none
          in: query
          name: address
          type: string
        - description: |
            Search for neighbourhoods. Neighbourhoods are vernacular geographic entities that may not necessarily be official administrative divisions but are important nonetheless. Example: `Notting Hill`.
          example: none
          in: query
          name: neighbourhood
          type: string
        - description: |
            Search for full country name, [alpha 2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) or [alpha 3](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3) codes.
          example: none
          in: query
          name: country
          type: string
        - description: |
            Search for postal codes. Postal codes are unique within a country so they are useful in geocoding as a shorthand for a fairly granular geographical location.
          example: none
          in: query
          name: postalcode
          type: string
        - description: |
            Search for regions. Regions are normally the first-level administrative divisions within countries. For US-regions [common abbreviations](https://en.wikipedia.org/wiki/List_of_U.S._state_abbreviations) can be used.
          example: none
          in: query
          name: region
          type: string
        - description: |
            Search for counties. Counties are administrative divisions between localities and regions. Can be useful when attempting to disambiguate between localities.
          example: none
          in: query
          name: county
          type: string
        - default: Tokyo
          description: |
            Search for localities. Localities are equivalent to what are commonly referred to as *cities*.
          example: Tokyo
          in: query
          name: locality
          type: string
        - description: |
            Search for boroughs. Boroughs are mostly known in the context of New York City, even though they may exist in other cities, such as Mexico City. Example: `Manhatten`.
          example: none
          in: query
          name: borough
          type: string
        - description: |
            Longitude of the `focus.point`. Specify the focus point to order results by linear distance to this point. Works for up to 100 kilometers distance.  Use with `focus.point.lat`.
          example: 8.673964
          format: float
          in: query
          name: focus.point.lon
          type: number
        - description: |
            Latitude of the `focus.point`. Specify the focus point to order results by linear distance to this point. Works for up to 100 kilometers distance. Use with `focus.point.lon`.
          example: 49.436431
          format: float
          in: query
          name: focus.point.lat
          type: number
          validWhen:
            - ref: focus.point.lon
              skipRootPathLookup: true
        - description: |
            Left border of rectangular boundary to narrow results.
          example: 8.557663
          format: float
          in: query
          name: boundary.rect.min_lon
          type: number
        - description: |
            Bottom border of rectangular boundary to narrow results.
          example: 49.331387
          format: float
          in: query
          name: boundary.rect.min_lat
          type: number
          validWhen:
            - ref: boundary.rect.min_lon
              skipRootPathLookup: true
        - description: |
            Right border of rectangular boundary to narrow results.
          example: 8.972054
          format: float
          in: query
          name: boundary.rect.max_lon
          type: number
          validWhen:
            - ref: boundary.rect.min_lon
              skipRootPathLookup: true
            - ref: boundary.rect.min_lat
              skipRootPathLookup: true
        - description: |
            Top border of rectangular boundary to narrow results.
          example: 49.525654
          format: float
          in: query
          name: boundary.rect.max_lat
          type: number
          validWhen:
            - ref: boundary.rect.min_lon
              skipRootPathLookup: true
            - ref: boundary.rect.min_lat
              skipRootPathLookup: true
            - ref: boundary.rect.max_lon
              skipRootPathLookup: true
        - description: |
            Center Longitude of circular boundary to narrow results. Use with `boundary.circle.lat` & `boundary.circle.radius`.
          example: 8.673964
          format: float
          in: query
          name: boundary.circle.lon
          type: number
        - description: |
            Center Latitude of circular boundary to narrow results. Use with `boundary.circle.lon` & `boundary.circle.radius`.
          example: 49.436431
          format: float
          in: query
          name: boundary.circle.lat
          type: number
          validWhen:
            - ref: boundary.circle.lon
              skipRootPathLookup: true
        - apiDefault: 50
          description: |
            Radius of circular boundary around the center coordinate in kilometers. Use with `boundary.circle.lon` & `boundary.circle.lat`.
          format: float
          in: query
          name: boundary.circle.radius
          type: number
          validWhen:
            - ref: boundary.circle.lon
              skipRootPathLookup: true
            - ref: boundary.circle.lat
              skipRootPathLookup: true
        - description: |
            Restrict results to single country. Possible values are [alpha-2 and alpha-3 country codes](https://en.wikipedia.org/wiki/ISO_3166-1). Example: `DEU` or `DE` for Germany.
          example: DE
          in: query
          name: boundary.country
          type: string
        - description: |
            Restrict search to layers (place type). By default all layers are searched.

              layer|description|
              ----|----|
              `venue`|points of interest, businesses, things with walls|
              `address`|places with a street address|
              `street`|streets,roads,highways|
              `neighbourhood`|social communities, neighbourhoods|
              `borough`|a local administrative boundary, currently only used for New York City|
              `localadmin`|local administrative boundaries|
              `locality`|towns, hamlets, cities|
              `county`|official governmental area; usually bigger than a locality, almost always smaller than a region|
              `macrocounty`|a related group of counties. Mostly in Europe.|
              `region`|states and provinces|
              `macroregion`|a related group of regions. Mostly in Europe|
              `country`|places that issue passports, nations, nation-states|
              `coarse`|alias for simultaneously using all administrative layers (everything except `venue` and `address`)|
          enum:
            - address
            - venue
            - neighbourhood
            - locality
            - borough
            - localadmin
            - county
            - macrocounty
            - region
            - macroregion
            - country
            - coarse
          example: 'address,venue'
          in: query
          multiSelect: true
          name: layers
          type: array
          uniqueItems: true
        - apiDefault: 'osm,oa,gn,wof'
          description: |
            Restrict your search to specific sources. Searches all sources by default. You can either use the normal or short name. Sources are [`openstreetmap(osm)`](http://www.openstreetmap.org/), [`openaddresses(oa)`](http://openaddresses.io/), [`whosonfirst(wof)`](https://whosonfirst.org/), [`geonames(gn)`](http://www.geonames.org/).
          enum:
            - openstreetmap
            - openaddresses
            - whosonfirst
            - geonames
          in: query
          multiSelect: true
          name: sources
          type: array
          uniqueItems: true
        - apiDefault: 10
          description: |
            Set the number of returned results.
          format: int64
          in: query
          name: size
          type: integer
      responses:
        '200':
          description: 'Please refer to [this external documentation](https://github.com/pelias/documentation/blob/master/structured-geocoding.md#structured-geocoding) for this endpoint'
      summary: Structured Forward Geocode Service (beta)
      tags:
        - Geocode
  /optimization:
    post:
      description: |
        The optimization endpoint solves [Vehicle Routing Problems](https://en.wikipedia.org/wiki/Vehicle_routing_problem) and can be used to schedule multiple vehicles and jobs, respecting time windows, capacities and required skills.

        This service is based on the excellent [Vroom project](https://github.com/VROOM-Project/vroom). Please also consult its [API documentation](https://github.com/VROOM-Project/vroom/blob/master/docs/API.md).

        General Info:
        - The expected order for all coordinates arrays is `[lon, lat]`
        - All timings are in seconds
        - All distances are in meters
        - A `time_window` object is a pair of timestamps in the form `[start, end]`
      parameters:
        - default: your-api-key
          description: |
            Insert your API Key here.
          in: header
          name: Authorization
          required: true
          type: string
        - description: Query the elevation of a line in various formats.
          example: '{"format_in":"polyline","format_out":"encodedpolyline","geometry":[[13.349762,38.11295],[12.638397,37.645772]]}'
          in: body
          name: body
          properties:
            jobs:
              description: 'Array of `job` objects describing the places to visit. For a detailed object description visit the [VROOM api description](https://github.com/VROOM-Project/vroom/blob/master/docs/API.md#jobs)'
              example:
                - amount:
                    - 1
                  id: 1
                  location:
                    - 1.98465
                    - 48.70329
                  service: 300
                  skills:
                    - 1
                  time_windows:
                    - - 32400
                      - 36000
                - amount:
                    - 1
                  id: 2
                  location:
                    - 2.03655
                    - 48.61128
                  service: 300
                  skills:
                    - 1
                - amount:
                    - 1
                  id: 3
                  location:
                    - 2.39719
                    - 49.07611
                  service: 300
                  skills:
                    - 2
                - amount:
                    - 1
                  id: 4
                  location:
                    - 2.41808
                    - 49.22619
                  service: 300
                  skills:
                    - 2
                - amount:
                    - 1
                  id: 5
                  location:
                    - 2.28325
                    - 48.5958
                  service: 300
                  skills:
                    - 14
                - amount:
                    - 1
                  id: 6
                  location:
                    - 2.89357
                    - 48.90736
                  service: 300
                  skills:
                    - 14
              items:
                description: |
                  If a custom matrix is provided:
                  - `location_index` is mandatory
                  - `location` is optional but can be set to retrieve coordinates in the response

                  If no custom matrix is provided:
                  - a `matrix` query will be sent to ORS
                  - `location` is mandatory
                  - `location_index` is irrelevant
                properties:
                  amount:
                    description: |
                      Array describing multidimensional quantities
                    items:
                      format: int32
                      type: integer
                    type: array
                  id:
                    description: |
                      an integer used as unique identifier
                    format: int32
                    required: true
                    type: integer
                  location:
                    description: |
                      coordinates array in `[lon, lat]`
                    items:
                      items:
                        format: float
                        type: number
                      maxItems: 2
                      minItems: 2
                      type: array
                    type: array
                  location_index:
                    description: |
                      index of relevant row and column in custom matrix
                  service:
                    description: |
                      job service duration (defaults to 0), in seconds
                  skills:
                    description: |
                      Array of integers defining mandatory skills for this job
                    items:
                      format: int32
                      type: integer
                    type: array
                  time_windows:
                    description: |
                      Array of `time_window` arrays describing valid slots for job service start and end,
                      in week seconds, i.e. 28800 = Mon, 8 AM.
                    example:
                      - - 28800
                        - 32400
                      - - 61200
                        - 68400
                    items:
                      items:
                        format: int32
                        type: integer
                      type: array
                    type: array
                type: object
              required: true
              type: array
            matrix:
              description: Optional two-dimensional array describing a custom matrix
              items:
                type: array
              type: array
            options:
              description: Addtional options passed to the optimization engine.
              properties:
                g:
                  description: Calculate geometries for the optimized routes.
                  type: boolean
              type: object
            vehicles:
              description: 'Array of `vehicle` objects describing the available vehicles. For a detailed object description visit the [VROOM API description](https://github.com/VROOM-Project/vroom/blob/master/docs/API.md#vehicles)'
              example:
                - capacity:
                    - 4
                  end:
                    - 2.35044
                    - 48.71764
                  id: 1
                  profile: driving-car
                  skills:
                    - 1
                    - 14
                  start:
                    - 2.35044
                    - 48.71764
                  time_window:
                    - 28800
                    - 43200
                - capacity:
                    - 4
                  end:
                    - 2.35044
                    - 48.71764
                  id: 2
                  profile: driving-car
                  skills:
                    - 2
                    - 14
                  start:
                    - 2.35044
                    - 48.71764
                  time_window:
                    - 28800
                    - 43200
              items:
                description: |
                  A vehicle object with capacity, time windows and skills.
                properties:
                  capacity:
                    description: |
                      Array of integers describing multidimensional quantities.
                    items:
                      format: int32
                      type: integer
                    type: array
                  end:
                    description: |
                      End coordinates array in `[lon, lat]` format. If left blank, the optimization
                      engine will identify the optimal end point.
                    items:
                      format: float
                      type: number
                    maxItems: 2
                    minItems: 2
                    type: array
                  end_index:
                    description: |
                      Index of relevant row and column in custom matrix.
                  id:
                    description: |
                      Integer used as unique identifier
                    format: int32
                    required: true
                    type: integer
                  profile:
                    description: |
                      The ORS routing profile for the vehicle.
                    enum:
                      - driving-car
                      - driving-hgv
                      - cycling-regular
                      - cycling-mountain
                      - cycling-electric
                      - cycling-road
                      - foot-walking
                      - foot-hiking
                      - wheelchair
                    example: driving-car
                    required: true
                    type: string
                  skills:
                    description: |
                      Array of integers defining skills for this vehicle
                    items:
                      format: int32
                      type: integer
                    type: array
                  start:
                    description: |
                      Start coordinates array in `[lon, lat]` format. If left blank, the optimization
                      engine will identify the optimal start point.
                    items:
                      format: float
                      type: number
                    maxItems: 2
                    minItems: 2
                    type: array
                  start_index:
                    description: |
                      Index of relevant row and column in custom matrix.
                  time_window:
                    description: |
                      A `time_window` array describing working hours for this vehicle,
                      in week seconds, i.e. 28800 = Mon, 8 AM.
                    example:
                      - 28800
                      - 32400
                    items:
                      format: int32
                      type: integer
                    type: array
                type: object
              required: true
              type: array
          required: true
          type: object
      responses:
        '200':
          description: Valid response if code contains `0`
          schema:
            properties:
              code:
                description: |
                  status code. Possible values:

                   Value         | Status |
                   :-----------: | :-----------: |
                   `0` | no error raised |
                   `1` | internal error |
                   `2` | input error |
                   `3` | routing error |
                format: int32
                type: integer
              error:
                description: |
                  error message (present if `code` is different from `0`)
                type: string
              routes:
                description: |
                  array of `route` objects
                items:
                  properties:
                    amount:
                      description: total amount for jobs in this route
                      items:
                        format: int32
                        type: integer
                      type: array
                    cost:
                      description: cost for this route
                      format: float
                      type: number
                    distance:
                      description: total route distance. Only provided when using the `-g` flag
                      format: float
                      type: number
                    duration:
                      description: total travel time for this route
                      format: float
                      type: number
                    geometry:
                      description: polyline encoded route geometry. Only provided when using the `-g` flag
                      type: string
                    service:
                      description: total service time for this route
                      format: float
                      type: number
                    steps:
                      description: array of `step` objects
                      items:
                        properties:
                          arrival:
                            description: estimated time of arrival at this step in seconds
                            format: float
                            type: number
                          distance:
                            description: traveled distance upon arrival at this step. Only provided when using the `-g` flag with `OSRM`
                            format: float
                            type: number
                          duration:
                            description: cumulated travel time upon arrival at this step in seconds
                            format: float
                            type: number
                          job:
                            description: 'id of the job performed at this step, only provided if `type` value is `job`'
                            format: int32
                            type: integer
                          location:
                            description: coordinates array for this step (if provided in input)
                            items:
                              format: float
                              type: number
                            maxItems: 2
                            minItems: 2
                            type: array
                          service:
                            description: 'service time at this step, only provided if `type` value is `job`'
                            format: float
                            type: number
                          type:
                            description: 'string that is either `start`, `job` or `end`'
                            type: string
                          waiting_time:
                            description: 'waiting time upon arrival at this step, only provided if `type` value is `job`'
                            format: float
                            type: number
                        type: object
                      type: array
                    vehicle:
                      description: id of the vehicle assigned to this route
                      format: int32
                      type: integer
                    waiting_time:
                      description: total waiting time for this route
                      format: float
                      type: number
                  type: object
                type: array
              summary:
                description: |
                  object summarizing solution indicators
                properties:
                  amount:
                    description: total amount for all routes
                    items:
                      format: int32
                      type: integer
                    type: array
                  cost:
                    description: total cost for all routes
                    type: number
                  distance:
                    description: total distance for all routes. Only provided when using the `-g` flag with `OSRM`
                    format: float
                    type: number
                  duration:
                    description: total travel time for all routes
                    format: float
                    type: number
                  service:
                    description: total service time for all routes
                    format: float
                    type: number
                  unassigned:
                    description: number of jobs that could not be served
                    format: int32
                    type: integer
                  waiting_time:
                    description: total waiting time for all routes
                    format: float
                    type: number
                type: object
              unassigned:
                description: |
                  array of objects describing unassigned jobs with their `id` and `location` (if provided)
                items:
                  description: Unassigned Job with `id` and `location` (if provided)
                  properties:
                    id:
                      description: The `id` of the unassigned job"
                      format: int32
                      type: integer
                    location:
                      description: The `location` of the unassigned job
                      items:
                        format: float
                        type: number
                      maxItems: 2
                      minItems: 2
                      type: array
                  type: object
                type: array
            type: object
        '401':
          description: Authorization field missing.
        '403':
          description: Key not authorised.
        '500':
          description: |
            An unexpected error was encountered and more detailed internal
            errorcode is provided.
            | Internal Code | Description  |
            |:-:|--------------------------|
            | 1 |  Internal Vroom error    |
            | 2 |  Error in input          |
            | 3 |  Routing error in ORS    |
            | 4 |  Request too large       |
      summary: Optimization Service
      tags:
        - Optimization
  /pois:
    post:
      description: |
        Returns points of interest in the area surrounding a geometry which can either be a bounding box, polygon or buffered linestring or point.
        Find more examples on [github](https://github.com/GIScience/openpoiservice).
      parameters:
        - default: your-api-key
          description: |
            Insert your API Key here.
          in: header
          name: Authorization
          required: true
          type: string
        - default: '{"request":"pois","geometry":{"bbox":[[8.8034,53.0756],[8.7834,53.0456]],"geojson":{"type":"Point","coordinates":[8.8034,53.0756]},"buffer":250}}'
          description: body for a post request
          example: '{"request":"pois","geometry":{"bbox":[[8.8034,53.0756],[8.7834,53.0456]],"geojson":{"type":"Point","coordinates":[8.8034,53.0756]},"buffer":250}}'
          in: body
          name: body
          props:
            filters:
              description: Filters in terms of osm_tags which should be applied to the query.
              example: '{"fee":"no"}'
              properties:
                category_group_ids:
                  example:
                    - 420
                  items:
                    format: int64
                    type: integer
                  type: array
                category_ids:
                  example:
                    - 601
                    - 280
                  items:
                    format: int64
                    type: integer
                  type: array
                fee:
                  description: Filter example.
                  example:
                    - 'yes'
                    - 'no'
                  type: array
                name:
                  description: Filter by name of the poi object.
                  example:
                    - Gas station
                    - ...
                  type: array
                smoking:
                  description: Filter example.
                  example:
                    - dedicated
                    - 'yes'
                    - 'no'
                    - separated
                    - isolated
                    - outside
                  type: array
                wheelchair:
                  description: Filter example.
                  example:
                    - 'yes'
                    - 'no'
                    - limited
                    - designated
                  type: array
              type: object
              validWhen:
                - ref: body.props.request
                  value: pois
            geometry:
              default: '{"bbox":[[8.8034,53.0756],[8.7834,53.0456]],"geojson":{"type":"Point","coordinates":[8.8034,53.0756]},"buffer":200}'
              description: 'The geometry object which is a geojson or a bounding box object, optionally buffered.'
              properties:
                bbox:
                  description: 'The pattern for this bbox string is minlon,minlat,maxlon,maxlat'
                  example:
                    - - 53.075051
                      - 8.798952
                    - - 53.080785
                      - 8.90716
                  maxItems: 2
                  minItems: 2
                  type: array
                buffer:
                  example: 500
                  format: int64
                  type: integer
                geojson:
                  description: 'This is a GeoJSON object. Is either Point, Polygon or LineString.'
                  type: object
              type: object
              validWhen:
                - ref: body.props.request
                  valueNot: list
            limit:
              description: The limit of objects to be returned in the response.
              example: 1000
              format: int64
              type: integer
              validWhen:
                - ref: body.props.request
                  value: pois
            request:
              description: |
                Examples:
                ```
                #### JSON bodies for POST requests
                ##### Pois around a buffered point
                {
                  "request": "pois",
                  "geometry": {
                    "bbox": [
                      [8.8034, 53.0756],
                      [8.7834, 53.0456]
                    ],
                    "geojson": {
                      "type": "Point",
                      "coordinates": [8.8034, 53.0756]
                    },
                    "buffer": 250
                  }
                }

                ##### Pois given categories
                {
                  "request": "pois",
                  "geometry": {
                    "bbox": [
                      [8.8034, 53.0756],
                      [8.7834, 53.0456]
                    ],
                    "geojson": {
                      "type": "Point",
                      "coordinates": [8.8034, 53.0756]
                    },
                    "buffer": 100
                  },
                  "limit": 200,
                  "filters": {
                    "category_ids": [180, 245]
                  }
                }

                ##### Pois given category groups
                {
                  "request": "pois",
                  "geometry": {
                    "bbox": [
                      [8.8034, 53.0756],
                      [8.7834, 53.0456]
                    ],
                    "geojson": {
                      "type": "Point",
                      "coordinates": [8.8034, 53.0756]
                    },
                    "buffer": 100
                  },
                  "limit": 200,
                  "filters": {
                    "category_group_ids": [160]
                  }
                }

                ##### Pois statistics
                {
                  "request": "stats",
                  "geometry": {
                    "bbox": [
                      [8.8034, 53.0756],
                      [8.7834, 53.0456]
                    ],
                    "geojson": {
                      "type": "Point",
                      "coordinates": [8.8034, 53.0756]
                    },
                    "buffer": 100
                  }
                }

                ##### Pois categories as a list
                {
                    "request": "list"
                }
                ```
              enum:
                - pois
                - stats
                - list
              example: pois
              required: true
              type: string
            sortby:
              description: Either you can sort by category or the distance to the geometry object provided in the request.
              enum:
                - category
                - distance
              example: category
              type: string
              validWhen:
                - ref: body.props.request
                  value: pois
            title: Openpoiservice poi request
          required: true
          type: object
      responses:
        '200':
          description: Standard response for successfully processed requests.
          schema:
            description: The POI response GeoJSON FeatureCollection
            properties:
              features:
                items:
                  properties:
                    feature_properties:
                      properties:
                        category_ids:
                          properties:
                            category_id:
                              properties:
                                category_group:
                                  type: number
                                category_name:
                                  type: string
                              type: object
                          type: object
                        distance:
                          type: number
                        osm_id:
                          type: number
                        osm_tags:
                          properties:
                            address:
                              type: string
                            distance:
                              type: string
                            fee:
                              type: string
                            name:
                              type: string
                            opening_hours:
                              type: string
                            website:
                              type: string
                            wheelchair:
                              type: string
                          type: object
                        osm_type:
                          type: number
                      title: GeoJSON properties object
                      type: object
                    geometry:
                      properties:
                        coordinates:
                          items:
                            format: double
                            type: number
                          maxItems: 2
                          minItems: 2
                          type: array
                        type:
                          default: Point
                          type: string
                      title: GeoJSON geometry object
                      type: object
                    type:
                      default: Feature
                      type: string
                  title: GeoJSON features object
                  type: object
                type: array
              type:
                default: FeatureCollection
                type: string
            title: Openpoiservice poi response
            type: object
        '400':
          description: |
            The request was invalid, and more detailed internal errorcode is provided.
            | Internal Code | Description                                        |
            |:-------------:|----------------------------------------------------|
            | 4000 |  Invalid JSON object in request |
            | 4001 |  Category or category group ids missing |
            | 4002 |  Geometry is missing |
            | 4003 |  Bounding box and or geojson not present in request |
            | 4004 |  Buffer is missing |
            | 4005 |  Geometry length does not meet the restrictions |
            | 4006 |  Unsupported HTTP method |
            | 4007 |  GeoJSON parsing error |
            | 4008 |  Geometry size does not meet the restrictions |
            | 4009 |  Unsupported Content-Type |
        '401':
          description: Authorization field missing.
        '403':
          description: Key not authorised.
        '500':
          description: Unknown internal error
      summary: Pois Service
      tags:
        - Pois
  '/v2/centrality/{profile}':
    post:
      consumes:
        - application/json
      description: Returns an ordered list of points and centrality values within a given bounding box for a selected profile and its settings as JSON
      operationId: getDefaultUsingPOST
      parameters:
        - description: Specifies the route profile.
          enum:
            - cycling-electric
            - cycling-mountain
            - cycling-regular
            - cycling-road
            - driving-car
            - driving-hgv
            - foot-hiking
            - foot-walking
            - wheelchair
          in: path
          name: profile
          required: true
          type: string
          x-example: driving-car
        - description: The request payload
          in: body
          name: request
          required: true
          schema:
            description: The JSON body request sent to the centrality service which defines options and parameters regarding the centrality measure to calculate.
            properties:
              bbox:
                description: 'The bounding box to use for the request as an array of `longitude/latitude` pairs in WGS 84 (EPSG:4326)'
                example:
                  - 8.681495
                  - 49.41461
                  - 8.686507
                  - 49.41943
                items:
                  items:
                    format: double
                    type: number
                  type: array
                type: array
              excludeNodes:
                description: List of node Ids to exclude when calculating centrality
                example:
                  - 1661
                  - 1662
                  - 1663
                items:
                  format: int32
                  type: integer
                type: array
              id:
                description: Arbitrary identification string of the request reflected in the meta information.
                example: centrality_request
                type: string
              mode:
                description: 'Specifies the centrality calculation mode. Currently, node-based and edge-based centrality calculation is supported.'
                enum:
                  - edges
                  - nodes
                example: nodes
                type: string
            required:
              - bbox
            title: Centrality Service
            type: object
      produces:
        - '*/*'
        - application/json
      responses:
        '200':
          description: Standard response for successfully processed requests. Returns JSON.
          schema:
            description: The Centrality Response contains centrality values for nodes or edges in the requested BBox
            properties:
              edgeScores:
                items:
                  properties:
                    fromId:
                      description: Id of the start point of the edge
                      example: 1
                      format: int32
                      type: integer
                    score:
                      description: Centrality Score of the corresponding edge in the given bounding box
                      example: 123.45
                      format: double
                      type: number
                    toId:
                      description: Id of the end point of the edge
                      example: 2
                      format: int32
                      type: integer
                  title: JsonEdgeScore
                  type: object
                type: array
              locations:
                items:
                  properties:
                    coord:
                      description: '{longitude},{latitude} coordinates of the closest accessible point on the routing graph'
                      example:
                        - 8.678962
                        - 49.40783
                      items:
                        format: double
                        type: number
                      type: array
                    nodeId:
                      description: Id of the corresponding node in the graph
                      example: 1
                      format: int32
                      type: integer
                  title: JsonCentralityLocation
                  type: object
                type: array
              nodeScores:
                items:
                  properties:
                    nodeId:
                      description: Id of the corresponding node in the graph
                      example: 1
                      format: int32
                      type: integer
                    score:
                      description: Centrality Score of the corresponding node in the given bounding box
                      example: 123.45
                      format: double
                      type: number
                  title: JsonNodeScore
                  type: object
                type: array
              warning:
                description: Informs about possible difficulties like access restrictions on the generated route. Generates a corresponding `extras` object with the affected segments.
                properties:
                  code:
                    description: Identification code for the warning
                    example: 1
                    format: int32
                    type: integer
                  message:
                    description: The message associated with the warning
                    example: This route may go over restricted roads
                    type: string
                title: JSONWarning
                type: object
            title: JsonCentralityResponse
            type: object
        '201':
          description: Created
        '400':
          description: The request is incorrect and therefore can not be processed.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: 'An element could not be found. If possible, a more detailed error code is provided.'
        '405':
          description: 'The specified HTTP method is not supported. For more details, refer to the EndPoint documentation.'
        '413':
          description: 'The request is larger than the server is able to process, the data provided in the request exceeds the capacity limit.'
        '500':
          description: An unexpected error was encountered and a more detailed error code is provided.
        '501':
          description: Indicates that the server does not support the functionality needed to fulfill the request.
        '503':
          description: The server is currently unavailable due to overload or maintenance.
      summary: Centrality Service (POST)
      tags:
        - Centrality
  '/v2/centrality/{profile}/json':
    post:
      consumes:
        - application/json
      description: Returns an ordered list of points and centrality values within a given bounding box for a selected profile and its settings as JSON
      operationId: getJsonCentralityUsingPOST
      parameters:
        - description: Specifies the profile.
          enum:
            - cycling-electric
            - cycling-mountain
            - cycling-regular
            - cycling-road
            - driving-car
            - driving-hgv
            - foot-hiking
            - foot-walking
            - wheelchair
          in: path
          name: profile
          required: true
          type: string
          x-example: driving-car
        - description: The request payload
          in: body
          name: request
          required: true
          schema:
            description: The JSON body request sent to the centrality service which defines options and parameters regarding the centrality measure to calculate.
            properties:
              bbox:
                description: 'The bounding box to use for the request as an array of `longitude/latitude` pairs in WGS 84 (EPSG:4326)'
                example:
                  - 8.681495
                  - 49.41461
                  - 8.686507
                  - 49.41943
                items:
                  items:
                    format: double
                    type: number
                  type: array
                type: array
              excludeNodes:
                description: List of node Ids to exclude when calculating centrality
                example:
                  - 1661
                  - 1662
                  - 1663
                items:
                  format: int32
                  type: integer
                type: array
              id:
                description: Arbitrary identification string of the request reflected in the meta information.
                example: centrality_request
                type: string
              mode:
                description: 'Specifies the centrality calculation mode. Currently, node-based and edge-based centrality calculation is supported.'
                enum:
                  - edges
                  - nodes
                example: nodes
                type: string
            required:
              - bbox
            title: Centrality Service
            type: object
      produces:
        - application/json
        - application/json;charset=UTF-8
      responses:
        '200':
          description: JSON Response
          schema:
            description: The Centrality Response contains centrality values for nodes or edges in the requested BBox
            properties:
              edgeScores:
                items:
                  properties:
                    fromId:
                      description: Id of the start point of the edge
                      example: 1
                      format: int32
                      type: integer
                    score:
                      description: Centrality Score of the corresponding edge in the given bounding box
                      example: 123.45
                      format: double
                      type: number
                    toId:
                      description: Id of the end point of the edge
                      example: 2
                      format: int32
                      type: integer
                  title: JsonEdgeScore
                  type: object
                type: array
              locations:
                items:
                  properties:
                    coord:
                      description: '{longitude},{latitude} coordinates of the closest accessible point on the routing graph'
                      example:
                        - 8.678962
                        - 49.40783
                      items:
                        format: double
                        type: number
                      type: array
                    nodeId:
                      description: Id of the corresponding node in the graph
                      example: 1
                      format: int32
                      type: integer
                  title: JsonCentralityLocation
                  type: object
                type: array
              nodeScores:
                items:
                  properties:
                    nodeId:
                      description: Id of the corresponding node in the graph
                      example: 1
                      format: int32
                      type: integer
                    score:
                      description: Centrality Score of the corresponding node in the given bounding box
                      example: 123.45
                      format: double
                      type: number
                  title: JsonNodeScore
                  type: object
                type: array
              warning:
                description: Informs about possible difficulties like access restrictions on the generated route. Generates a corresponding `extras` object with the affected segments.
                properties:
                  code:
                    description: Identification code for the warning
                    example: 1
                    format: int32
                    type: integer
                  message:
                    description: The message associated with the warning
                    example: This route may go over restricted roads
                    type: string
                title: JSONWarning
                type: object
            title: JsonCentralityResponse
            type: object
        '201':
          description: Created
        '400':
          description: The request is incorrect and therefore can not be processed.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: 'An element could not be found. If possible, a more detailed error code is provided.'
        '405':
          description: 'The specified HTTP method is not supported. For more details, refer to the EndPoint documentation.'
        '413':
          description: 'The request is larger than the server is able to process, the data provided in the request exceeds the capacity limit.'
        '500':
          description: An unexpected error was encountered and a more detailed error code is provided.
        '501':
          description: Indicates that the server does not support the functionality needed to fulfill the request.
        '503':
          description: The server is currently unavailable due to overload or maintenance.
      summary: Centrality Service JSON (POST)
      tags:
        - Centrality
  '/v2/directions/{profile}':
    get:
      description: 'Get a basic route between two points with the profile provided. Returned response is in GeoJSON format. This method does not accept any request body or parameters other than profile, start coordinate, and end coordinate.'
      operationId: getSimpleGeoJsonRouteUsingGET
      parameters:
        - description: 'Destination coordinate of the route in `longitude,latitude` format.'
          in: query
          name: end
          required: true
          type: string
          x-example: '8.687872,49.420318'
        - description: Specifies the route profile.
          enum:
            - cycling-electric
            - cycling-mountain
            - cycling-regular
            - cycling-road
            - driving-car
            - driving-hgv
            - foot-hiking
            - foot-walking
            - wheelchair
          in: path
          name: profile
          required: true
          type: string
          x-example: driving-car
        - description: 'Start coordinate of the route in `longitude,latitude` format.'
          in: query
          name: start
          required: true
          type: string
          x-example: '8.681495,49.41461'
      produces:
        - application/geo+json;charset=UTF-8
      responses:
        '200':
          description: 'Standard response for successfully processed requests. Returns GeoJSON. The decoded values of the extra information can be found [here](https://GIScience.github.io/openrouteservice/documentation/extra-info/Extra-Info.html).'
          schema:
            properties:
              bbox:
                description: Bounding box that covers all returned routes
                example:
                  - 49.414057
                  - 8.680894
                  - 49.420514
                  - 8.690123
                items:
                  format: double
                  type: number
                type: array
              features:
                items:
                  type: object
                type: array
              metadata:
                description: Information about the request
                properties:
                  attribution:
                    description: Copyright and attribution information
                    example: openrouteservice.org | OpenStreetMap contributors
                    type: string
                  engine:
                    description: Information about the routing service
                    properties:
                      build_date:
                        description: The date that the service was last updated
                        example: '2019-02-07T14:28:11Z'
                        type: string
                      graph_date:
                        description: The date that the graph data was last updated
                        example: '2019-02-07T14:28:11Z'
                        type: string
                      version:
                        description: The backend version of the openrouteservice that was queried
                        example: 5
                        type: string
                    title: EngineInfo
                    type: object
                  id:
                    description: ID of the request (as passed in by the query)
                    example: request123
                    type: string
                  osm_file_md5_hash:
                    description: The MD5 hash of the OSM planet file that was used for generating graphs
                    example: c0327ba6
                    type: string
                  query:
                    allOf:
                      - description: Advanced options for routing
                        properties:
                          avoid_borders:
                            description: '`all` for no border crossing. `controlled` to cross open borders but avoid controlled ones. Only for `driving-*` profiles. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-*'']}}'
                            enum:
                              - all
                              - controlled
                              - none
                            example: controlled
                            type: string
                          avoid_countries:
                            description: 'List of countries to exclude from matrix with `driving-*` profiles. Can be used together with `''avoid_borders'': ''controlled''`. `[ 11, 193 ]` would exclude Austria and Switzerland. List of countries and application examples can be found [here](https://GIScience.github.io/openrouteservice/documentation/routing-options/Country-List.html). Also, ISO standard country codes cna be used in place of the numerical ids, for example, DE or DEU for Germany. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-*'']}}'
                            example:
                              - 11
                              - 193
                            items:
                              type: string
                            type: array
                          avoid_features:
                            description: 'List of features to avoid. CUSTOM_KEYS:{''itemRestrictions'':{''ref'':''profile'', ''itemsWhen'':{''driving-*'':[''highways'',''tollways'',''ferries''],''cycling-*'':[''ferries'',''steps'',''fords''],''foot-*'':[''ferries'',''fords'',''steps''],''wheelchair'':[''ferries'',''steps'']}}}'
                            example:
                              - highways
                            items:
                              enum:
                                - ferries
                                - fords
                                - highways
                                - steps
                                - tollways
                              type: string
                            type: array
                          avoid_polygons:
                            additionalProperties:
                              type: object
                            description: Comprises areas to be avoided for the route. Formatted in GeoJSON as either a Polygon or Multipolygon object.
                            type: object
                          profile_params:
                            description: ' Specifies additional matrix parameters.CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''valueNot'':[''driving-car'']}}'
                            properties:
                              allow_unsuitable:
                                description: 'Specifies if ways that might not be suitable (e.g. unknown pedestrian usage) should be included in finding routes - default falseCUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                example: true
                                type: boolean
                              restrictions:
                                description: Describe restrictions to be applied to edges on the routing. any edges that do not match these restrictions are not traversed.
                                properties:
                                  axleload:
                                    description: 'Axleload restriction in tons. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                                    example: 50
                                    format: float
                                    type: number
                                  hazmat:
                                    description: 'Specifies whether to use appropriate routing for delivering hazardous goods and avoiding water protected areas. Default is `false`. CUSTOM_KEYS:{''apiDefault'':false,''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                                    type: boolean
                                  height:
                                    description: 'Height restriction in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                                    example: 4.2
                                    format: float
                                    type: number
                                  length:
                                    description: 'Length restriction in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                                    example: 8.4
                                    format: float
                                    type: number
                                  maximum_incline:
                                    description: 'Specifies the maximum incline as a percentage. `3`, `6` (default), `10`, `15.CUSTOM_KEYS:{''apiDefault'':6,''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                    example: 3
                                    format: int32
                                    type: integer
                                  maximum_sloped_kerb:
                                    description: 'Specifies the maximum height of the sloped curb in metres. Values are `0.03`, `0.06` (default), `0.1`.CUSTOM_KEYS:{''apiDefault'':0.6,''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                    example: 0.03
                                    format: float
                                    type: number
                                  minimum_width:
                                    description: 'Specifies the minimum width of the footway in metres.CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                    example: 2.5
                                    format: float
                                    type: number
                                  smoothness_type:
                                    description: 'Specifies the minimum smoothness of the route. Default is `good`.CUSTOM_KEYS:{''apiDefault'':''good'',''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                    enum:
                                      - bad
                                      - excellent
                                      - good
                                      - horrible
                                      - impassable
                                      - intermediate
                                      - very_bad
                                      - very_horrible
                                    example: best
                                    type: string
                                  surface_type:
                                    description: 'Specifies the minimum surface type. Default is `sett`. CUSTOM_KEYS:{''apiDefault'':''sett'',''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                    example: asphalt
                                    type: string
                                  track_type:
                                    description: 'Specifies the minimum grade of the route. Default is `grade1`. CUSTOM_KEYS:{''apiDefault'':''grade1'',''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                    example: grade2
                                    type: string
                                  weight:
                                    description: 'Weight restriction in tons. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                                    example: 40
                                    format: float
                                    type: number
                                  width:
                                    description: 'Width restriction in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                                    example: 5.6
                                    format: float
                                    type: number
                                title: Restrictions
                                type: object
                              surface_quality_known:
                                description: 'Specifies whether to enforce that only ways with known information on surface quality be taken into account - default falseCUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                example: true
                                type: boolean
                              weightings:
                                description: Describe additional weightings to be applied to edges on the routing.
                                properties:
                                  csvColumn:
                                    type: string
                                  csv_column:
                                    description: Specifies the csv column name
                                    type: string
                                  csv_factor:
                                    description: Specifies the factor of csv-column (range 0 to 1)
                                    format: float
                                    type: number
                                  green:
                                    description: |-
                                      Specifies the Green factor for `foot-*` profiles.

                                      factor: Multiplication factor range from 0 to 1. 0 is the green routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer ways through green areas over a shorter route. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['foot-*']}}
                                    example: 0.4
                                    format: float
                                    type: number
                                  quiet:
                                    description: |-
                                      Specifies the Quiet factor for foot-* profiles.

                                      factor: Multiplication factor range from 0 to 1. 0 is the quiet routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer quiet ways over a shorter route. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['foot-*']}}
                                    example: 0.8
                                    format: float
                                    type: number
                                  shadow:
                                    description: |-
                                      Specifies the shadow factor for `foot-*` profiles.

                                      factor: Multiplication factor range from 0 to 1. 0 is the shadow routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer ways through shadow areas over a shorter route. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['foot-*']}}
                                    example: 0.4
                                    format: float
                                    type: number
                                  steepness_difficulty:
                                    description: |-
                                      Specifies the fitness level for `cycling-*` profiles.

                                       level: 0 = Novice, 1 = Moderate, 2 = Amateur, 3 = Pro. The prefered gradient increases with level. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['cycling-*']}}
                                    example: 2
                                    format: int32
                                    type: integer
                                title: Profile Weightings
                                type: object
                            title: Profile Parameters
                            type: object
                          round_trip:
                            description: Options to be applied on round trip routes.
                            example:
                              length: 10000
                              points: 5
                            properties:
                              length:
                                description: 'The target length of the route in `m` (note that this is a preferred value, but results may be different).'
                                example: 10000
                                format: float
                                type: number
                              points:
                                description: The number of points to use on the route. Larger values create more circular routes.
                                example: 5
                                format: int32
                                type: integer
                              seed:
                                description: A seed to use for adding randomisation to the overall direction of the generated route
                                example: 1
                                format: int64
                                type: integer
                            title: Round Trip Route Options
                            type: object
                          vehicle_type:
                            description: '(for profile=driving-hgv only): hgv,bus,agricultural,delivery,forestry and goods. It is needed for vehicle restrictions to work. CUSTOM_KEYS:{''apiDefault'':''hgv'',''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                            enum:
                              - agricultural
                              - bus
                              - delivery
                              - forestry
                              - goods
                              - hgv
                              - unknown
                            type: string
                        title: Route Options
                        type: object
                      - description: The JSON body request sent to the routing service which defines options and parameters regarding the route to generate.
                        properties:
                          alternative_routes:
                            description: 'Specifies whether alternative routes are computed, and parameters for the algorithm determining suitable alternatives.'
                            example:
                              target_count: 2
                              weight_factor: 1.6
                            properties:
                              share_factor:
                                description: Maximum fraction of the route that alternatives may share with the optimal route. The default value of 0.6 means alternatives can share up to 60% of path segments with the optimal route.
                                example: 0.6
                                format: double
                                type: number
                              target_count:
                                description: Target number of alternative routes to compute. Service returns up to this number of routes that fulfill the share-factor and weight-factor constraints.
                                example: 2
                                format: int32
                                type: integer
                              weight_factor:
                                description: Maximum factor by which route weight may diverge from the optimal route. The default value of 1.4 means alternatives can be up to 1.4 times longer (costly) than the optimal route.
                                example: 1.4
                                format: double
                                type: number
                            title: Alternative Routes
                            type: object
                          attributes:
                            description: List of route attributes
                            example:
                              - avgspeed
                              - percentage
                            items:
                              enum:
                                - avgspeed
                                - detourfactor
                                - percentage
                              type: string
                            type: array
                          bearings:
                            description: |-
                              Specifies a list of pairs (bearings and deviations) to filter the segments of the road network a waypoint can snap to. For example `bearings=[[45,10],[120,20]]`. 
                              Each pair is a comma-separated list that can consist of one or two float values, where the first value is the bearing and the second one is the allowed deviation from the bearing. The bearing can take values between `0` and `360` clockwise from true north. If the deviation is not set, then the default value of `100` degrees is used. The number of pairs must correspond to the number of waypoints.
                              The number of bearings corresponds to the length of waypoints-1 or waypoints. If the bearing information for the last waypoint is given, then this will control the sector from which the destination waypoint may be reached. You can skip a bearing for a certain waypoint by passing an empty value for an array, e.g. `[30,20],[],[40,20]`. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':'cycling-*'}}
                            example:
                              - - 30
                                - 20
                              - []
                              - - 40
                                - 20
                            items:
                              items:
                                format: double
                                type: number
                              type: array
                            type: array
                          continue_straight:
                            description: 'Forces the route to keep going straight at waypoints restricting uturns there even if it would be faster.CUSTOM_KEYS:{''apiDefault'':''false''}'
                            example: false
                            type: boolean
                          coordinates:
                            description: 'The waypoints to use for the route as an array of `longitude/latitude` pairs in WGS 84 (EPSG:4326)'
                            example:
                              - - 8.681495
                                - 49.41461
                              - - 8.686507
                                - 49.41943
                              - - 8.687872
                                - 49.420318
                            items:
                              items:
                                format: double
                                type: number
                              type: array
                            type: array
                          elevation:
                            description: Specifies whether to return elevation values for points. Please note that elevation also gets encoded for json response encoded polyline.
                            example: false
                            type: boolean
                          extra_info:
                            description: The extra info items to include in the response
                            example:
                              - waytype
                              - surface
                            items:
                              enum:
                                - countryinfo
                                - csv
                                - green
                                - noise
                                - osmid
                                - roadaccessrestrictions
                                - shadow
                                - steepness
                                - suitability
                                - surface
                                - tollways
                                - traildifficulty
                                - waycategory
                                - waytype
                              type: string
                            type: array
                          geometry:
                            description: 'Specifies whether to return geometry. CUSTOM_KEYS:{''apiDefault'':true, ''validWhen'':{''ref'':''format'',''value'':[''json'']}}'
                            example: true
                            type: boolean
                          geometry_simplify:
                            description: 'Specifies whether to simplify the geometry. Simplify geometry cannot be applied to routes with more than **one segment** and when `extra_info` is required.CUSTOM_KEYS:{''apiDefault'':false}'
                            example: false
                            type: boolean
                          id:
                            description: Arbitrary identification string of the request reflected in the meta information.
                            example: centrality_request
                            type: string
                          instructions:
                            description: 'Specifies whether to return instructions. CUSTOM_KEYS:{''apiDefault'':true}'
                            example: true
                            type: boolean
                          instructions_format:
                            description: 'Select html for more verbose instructions. CUSTOM_KEYS:{''apiDefault'':''text''}'
                            enum:
                              - html
                              - text
                            example: text
                            type: string
                          language:
                            description: 'Language for the route instructions. CUSTOM_KEYS:{''apiDefault'':''en''}'
                            enum:
                              - cs
                              - cs-cz
                              - de
                              - de-de
                              - en
                              - en-us
                              - eo
                              - eo-eo
                              - es
                              - es-es
                              - fr
                              - fr-fr
                              - gr
                              - gr-gr
                              - he
                              - he-il
                              - hu
                              - hu-hu
                              - id
                              - id-id
                              - it
                              - it-it
                              - ja
                              - ja-jp
                              - ne
                              - ne-np
                              - nl
                              - nl-nl
                              - pl
                              - pl-pl
                              - pt
                              - pt-pt
                              - ro
                              - ro-ro
                              - ru
                              - ru-ru
                              - tr
                              - tr-tr
                              - zh
                              - zh-cn
                            example: en
                            type: string
                          maneuvers:
                            description: 'Specifies whether the maneuver object is included into the step object or not. CUSTOM_KEYS:{''apiDefault'':false}'
                            example: false
                            type: boolean
                          maximum_speed:
                            description: 'The maximum speed specified by user.CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-*'']}}'
                            example: 90
                            format: double
                            type: number
                          options:
                            description: 'For advanced options formatted as json object. For structure refer to the [these examples](https://GIScience.github.io/openrouteservice/documentation/routing-options/Examples.html).'
                            example:
                              avoid_borders: controlled
                            properties:
                              avoid_borders:
                                description: '`all` for no border crossing. `controlled` to cross open borders but avoid controlled ones. Only for `driving-*` profiles. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-*'']}}'
                                enum:
                                  - all
                                  - controlled
                                  - none
                                example: controlled
                                type: string
                              avoid_countries:
                                description: 'List of countries to exclude from matrix with `driving-*` profiles. Can be used together with `''avoid_borders'': ''controlled''`. `[ 11, 193 ]` would exclude Austria and Switzerland. List of countries and application examples can be found [here](https://GIScience.github.io/openrouteservice/documentation/routing-options/Country-List.html). Also, ISO standard country codes cna be used in place of the numerical ids, for example, DE or DEU for Germany. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-*'']}}'
                                example:
                                  - 11
                                  - 193
                                items:
                                  type: string
                                type: array
                              avoid_features:
                                description: 'List of features to avoid. CUSTOM_KEYS:{''itemRestrictions'':{''ref'':''profile'', ''itemsWhen'':{''driving-*'':[''highways'',''tollways'',''ferries''],''cycling-*'':[''ferries'',''steps'',''fords''],''foot-*'':[''ferries'',''fords'',''steps''],''wheelchair'':[''ferries'',''steps'']}}}'
                                example:
                                  - highways
                                items:
                                  enum:
                                    - ferries
                                    - fords
                                    - highways
                                    - steps
                                    - tollways
                                  type: string
                                type: array
                              avoid_polygons:
                                additionalProperties:
                                  type: object
                                description: Comprises areas to be avoided for the route. Formatted in GeoJSON as either a Polygon or Multipolygon object.
                                type: object
                              profile_params:
                                description: ' Specifies additional matrix parameters.CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''valueNot'':[''driving-car'']}}'
                                properties:
                                  allow_unsuitable:
                                    description: 'Specifies if ways that might not be suitable (e.g. unknown pedestrian usage) should be included in finding routes - default falseCUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                    example: true
                                    type: boolean
                                  restrictions:
                                    description: Describe restrictions to be applied to edges on the routing. any edges that do not match these restrictions are not traversed.
                                    properties:
                                      axleload:
                                        description: 'Axleload restriction in tons. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                                        example: 50
                                        format: float
                                        type: number
                                      hazmat:
                                        description: 'Specifies whether to use appropriate routing for delivering hazardous goods and avoiding water protected areas. Default is `false`. CUSTOM_KEYS:{''apiDefault'':false,''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                                        type: boolean
                                      height:
                                        description: 'Height restriction in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                                        example: 4.2
                                        format: float
                                        type: number
                                      length:
                                        description: 'Length restriction in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                                        example: 8.4
                                        format: float
                                        type: number
                                      maximum_incline:
                                        description: 'Specifies the maximum incline as a percentage. `3`, `6` (default), `10`, `15.CUSTOM_KEYS:{''apiDefault'':6,''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                        example: 3
                                        format: int32
                                        type: integer
                                      maximum_sloped_kerb:
                                        description: 'Specifies the maximum height of the sloped curb in metres. Values are `0.03`, `0.06` (default), `0.1`.CUSTOM_KEYS:{''apiDefault'':0.6,''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                        example: 0.03
                                        format: float
                                        type: number
                                      minimum_width:
                                        description: 'Specifies the minimum width of the footway in metres.CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                        example: 2.5
                                        format: float
                                        type: number
                                      smoothness_type:
                                        description: 'Specifies the minimum smoothness of the route. Default is `good`.CUSTOM_KEYS:{''apiDefault'':''good'',''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                        enum:
                                          - bad
                                          - excellent
                                          - good
                                          - horrible
                                          - impassable
                                          - intermediate
                                          - very_bad
                                          - very_horrible
                                        example: best
                                        type: string
                                      surface_type:
                                        description: 'Specifies the minimum surface type. Default is `sett`. CUSTOM_KEYS:{''apiDefault'':''sett'',''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                        example: asphalt
                                        type: string
                                      track_type:
                                        description: 'Specifies the minimum grade of the route. Default is `grade1`. CUSTOM_KEYS:{''apiDefault'':''grade1'',''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                        example: grade2
                                        type: string
                                      weight:
                                        description: 'Weight restriction in tons. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                                        example: 40
                                        format: float
                                        type: number
                                      width:
                                        description: 'Width restriction in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                                        example: 5.6
                                        format: float
                                        type: number
                                    title: Restrictions
                                    type: object
                                  surface_quality_known:
                                    description: 'Specifies whether to enforce that only ways with known information on surface quality be taken into account - default falseCUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                    example: true
                                    type: boolean
                                  weightings:
                                    description: Describe additional weightings to be applied to edges on the routing.
                                    properties:
                                      csvColumn:
                                        type: string
                                      csv_column:
                                        description: Specifies the csv column name
                                        type: string
                                      csv_factor:
                                        description: Specifies the factor of csv-column (range 0 to 1)
                                        format: float
                                        type: number
                                      green:
                                        description: |-
                                          Specifies the Green factor for `foot-*` profiles.

                                          factor: Multiplication factor range from 0 to 1. 0 is the green routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer ways through green areas over a shorter route. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['foot-*']}}
                                        example: 0.4
                                        format: float
                                        type: number
                                      quiet:
                                        description: |-
                                          Specifies the Quiet factor for foot-* profiles.

                                          factor: Multiplication factor range from 0 to 1. 0 is the quiet routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer quiet ways over a shorter route. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['foot-*']}}
                                        example: 0.8
                                        format: float
                                        type: number
                                      shadow:
                                        description: |-
                                          Specifies the shadow factor for `foot-*` profiles.

                                          factor: Multiplication factor range from 0 to 1. 0 is the shadow routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer ways through shadow areas over a shorter route. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['foot-*']}}
                                        example: 0.4
                                        format: float
                                        type: number
                                      steepness_difficulty:
                                        description: |-
                                          Specifies the fitness level for `cycling-*` profiles.

                                           level: 0 = Novice, 1 = Moderate, 2 = Amateur, 3 = Pro. The prefered gradient increases with level. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['cycling-*']}}
                                        example: 2
                                        format: int32
                                        type: integer
                                    title: Profile Weightings
                                    type: object
                                title: Profile Parameters
                                type: object
                              round_trip:
                                description: Options to be applied on round trip routes.
                                example:
                                  length: 10000
                                  points: 5
                                properties:
                                  length:
                                    description: 'The target length of the route in `m` (note that this is a preferred value, but results may be different).'
                                    example: 10000
                                    format: float
                                    type: number
                                  points:
                                    description: The number of points to use on the route. Larger values create more circular routes.
                                    example: 5
                                    format: int32
                                    type: integer
                                  seed:
                                    description: A seed to use for adding randomisation to the overall direction of the generated route
                                    example: 1
                                    format: int64
                                    type: integer
                                title: Round Trip Route Options
                                type: object
                              vehicle_type:
                                description: '(for profile=driving-hgv only): hgv,bus,agricultural,delivery,forestry and goods. It is needed for vehicle restrictions to work. CUSTOM_KEYS:{''apiDefault'':''hgv'',''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                                enum:
                                  - agricultural
                                  - bus
                                  - delivery
                                  - forestry
                                  - goods
                                  - hgv
                                  - unknown
                                type: string
                            title: Route Options
                            type: object
                          preference:
                            description: 'Specifies the route preference. CUSTOM_KEYS:{''apiDefault'':''recommended''}'
                            enum:
                              - fastest
                              - recommended
                              - shortest
                            example: recommended
                            type: string
                          radiuses:
                            description: 'A list of maximum distances (measured in metres) that limit the search of nearby road segments to every given waypoint. The values must be greater than 0, the value of -1 specifies using the maximum possible search radius. The number of radiuses correspond to the number of waypoints. If only a single value is given, it will be applied to all waypoints.'
                            example:
                              - 200
                              - -1
                              - 30
                            items:
                              format: double
                              type: number
                            type: array
                          roundabout_exits:
                            description: 'Provides bearings of the entrance and all passed roundabout exits. Adds the `exit_bearings` array to the step object in the response. CUSTOM_KEYS:{''apiDefault'':false}'
                            example: false
                            type: boolean
                          skip_segments:
                            description: Specifies the segments that should be skipped in the route calculation. A segment is the connection between two given coordinates and the counting starts with 1 for the connection between the first and second coordinate.
                            example:
                              - 2
                              - 4
                            items:
                              format: int32
                              type: integer
                            type: array
                          suppress_warnings:
                            description: Suppress warning messages in the response
                            example: false
                            type: boolean
                          units:
                            description: 'Specifies the distance unit. CUSTOM_KEYS:{''apiDefault'':''m''}'
                            enum:
                              - km
                              - m
                              - mi
                            example: m
                            type: string
                        required:
                          - coordinates
                        title: Directions Service
                        type: object
                    description: The information that was used for generating the route
                    title: Directions Service
                  service:
                    description: The service that was requested
                    example: routing
                    type: string
                  system_message:
                    description: System message
                    example: A message string configured in the service
                    type: string
                  timestamp:
                    description: Time that the request was made (UNIX Epoch time)
                    example: 1549549847974
                    format: int64
                    type: integer
                title: RouteResponseInfo
                type: object
              type:
                type: string
            title: GeoJSONRouteResponse
            type: object
        '400':
          description: The request is incorrect and therefore can not be processed.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: 'An element could not be found. If possible, a more detailed error code is provided.'
        '405':
          description: 'The specified HTTP method is not supported. For more details, refer to the EndPoint documentation.'
        '413':
          description: 'The request is larger than the server is able to process, the data provided in the request exceeds the capacity limit.'
        '500':
          description: An unexpected error was encountered and a more detailed error code is provided.
        '501':
          description: Indicates that the server does not support the functionality needed to fulfill the request.
        '503':
          description: The server is currently unavailable due to overload or maintenance.
      summary: Directions Service (GET)
      tags:
        - Directions
    post:
      consumes:
        - application/json
      description: Returns a route between two or more locations for a selected profile and its settings as JSON
      operationId: getDefaultUsingPOST_2
      parameters:
        - description: Specifies the route profile.
          enum:
            - cycling-electric
            - cycling-mountain
            - cycling-regular
            - cycling-road
            - driving-car
            - driving-hgv
            - foot-hiking
            - foot-walking
            - wheelchair
          in: path
          name: profile
          required: true
          type: string
          x-example: driving-car
        - description: The request payload
          in: body
          name: request
          required: true
          schema:
            allOf:
              - description: Advanced options for routing
                properties:
                  avoid_borders:
                    description: '`all` for no border crossing. `controlled` to cross open borders but avoid controlled ones. Only for `driving-*` profiles. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-*'']}}'
                    enum:
                      - all
                      - controlled
                      - none
                    example: controlled
                    type: string
                  avoid_countries:
                    description: 'List of countries to exclude from matrix with `driving-*` profiles. Can be used together with `''avoid_borders'': ''controlled''`. `[ 11, 193 ]` would exclude Austria and Switzerland. List of countries and application examples can be found [here](https://GIScience.github.io/openrouteservice/documentation/routing-options/Country-List.html). Also, ISO standard country codes cna be used in place of the numerical ids, for example, DE or DEU for Germany. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-*'']}}'
                    example:
                      - 11
                      - 193
                    items:
                      type: string
                    type: array
                  avoid_features:
                    description: 'List of features to avoid. CUSTOM_KEYS:{''itemRestrictions'':{''ref'':''profile'', ''itemsWhen'':{''driving-*'':[''highways'',''tollways'',''ferries''],''cycling-*'':[''ferries'',''steps'',''fords''],''foot-*'':[''ferries'',''fords'',''steps''],''wheelchair'':[''ferries'',''steps'']}}}'
                    example:
                      - highways
                    items:
                      enum:
                        - ferries
                        - fords
                        - highways
                        - steps
                        - tollways
                      type: string
                    type: array
                  avoid_polygons:
                    additionalProperties:
                      type: object
                    description: Comprises areas to be avoided for the route. Formatted in GeoJSON as either a Polygon or Multipolygon object.
                    type: object
                  profile_params:
                    description: ' Specifies additional matrix parameters.CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''valueNot'':[''driving-car'']}}'
                    properties:
                      allow_unsuitable:
                        description: 'Specifies if ways that might not be suitable (e.g. unknown pedestrian usage) should be included in finding routes - default falseCUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                        example: true
                        type: boolean
                      restrictions:
                        description: Describe restrictions to be applied to edges on the routing. any edges that do not match these restrictions are not traversed.
                        properties:
                          axleload:
                            description: 'Axleload restriction in tons. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                            example: 50
                            format: float
                            type: number
                          hazmat:
                            description: 'Specifies whether to use appropriate routing for delivering hazardous goods and avoiding water protected areas. Default is `false`. CUSTOM_KEYS:{''apiDefault'':false,''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                            type: boolean
                          height:
                            description: 'Height restriction in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                            example: 4.2
                            format: float
                            type: number
                          length:
                            description: 'Length restriction in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                            example: 8.4
                            format: float
                            type: number
                          maximum_incline:
                            description: 'Specifies the maximum incline as a percentage. `3`, `6` (default), `10`, `15.CUSTOM_KEYS:{''apiDefault'':6,''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                            example: 3
                            format: int32
                            type: integer
                          maximum_sloped_kerb:
                            description: 'Specifies the maximum height of the sloped curb in metres. Values are `0.03`, `0.06` (default), `0.1`.CUSTOM_KEYS:{''apiDefault'':0.6,''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                            example: 0.03
                            format: float
                            type: number
                          minimum_width:
                            description: 'Specifies the minimum width of the footway in metres.CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                            example: 2.5
                            format: float
                            type: number
                          smoothness_type:
                            description: 'Specifies the minimum smoothness of the route. Default is `good`.CUSTOM_KEYS:{''apiDefault'':''good'',''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                            enum:
                              - bad
                              - excellent
                              - good
                              - horrible
                              - impassable
                              - intermediate
                              - very_bad
                              - very_horrible
                            example: best
                            type: string
                          surface_type:
                            description: 'Specifies the minimum surface type. Default is `sett`. CUSTOM_KEYS:{''apiDefault'':''sett'',''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                            example: asphalt
                            type: string
                          track_type:
                            description: 'Specifies the minimum grade of the route. Default is `grade1`. CUSTOM_KEYS:{''apiDefault'':''grade1'',''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                            example: grade2
                            type: string
                          weight:
                            description: 'Weight restriction in tons. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                            example: 40
                            format: float
                            type: number
                          width:
                            description: 'Width restriction in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                            example: 5.6
                            format: float
                            type: number
                        title: Restrictions
                        type: object
                      surface_quality_known:
                        description: 'Specifies whether to enforce that only ways with known information on surface quality be taken into account - default falseCUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                        example: true
                        type: boolean
                      weightings:
                        description: Describe additional weightings to be applied to edges on the routing.
                        properties:
                          csvColumn:
                            type: string
                          csv_column:
                            description: Specifies the csv column name
                            type: string
                          csv_factor:
                            description: Specifies the factor of csv-column (range 0 to 1)
                            format: float
                            type: number
                          green:
                            description: |-
                              Specifies the Green factor for `foot-*` profiles.

                              factor: Multiplication factor range from 0 to 1. 0 is the green routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer ways through green areas over a shorter route. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['foot-*']}}
                            example: 0.4
                            format: float
                            type: number
                          quiet:
                            description: |-
                              Specifies the Quiet factor for foot-* profiles.

                              factor: Multiplication factor range from 0 to 1. 0 is the quiet routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer quiet ways over a shorter route. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['foot-*']}}
                            example: 0.8
                            format: float
                            type: number
                          shadow:
                            description: |-
                              Specifies the shadow factor for `foot-*` profiles.

                              factor: Multiplication factor range from 0 to 1. 0 is the shadow routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer ways through shadow areas over a shorter route. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['foot-*']}}
                            example: 0.4
                            format: float
                            type: number
                          steepness_difficulty:
                            description: |-
                              Specifies the fitness level for `cycling-*` profiles.

                               level: 0 = Novice, 1 = Moderate, 2 = Amateur, 3 = Pro. The prefered gradient increases with level. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['cycling-*']}}
                            example: 2
                            format: int32
                            type: integer
                        title: Profile Weightings
                        type: object
                    title: Profile Parameters
                    type: object
                  round_trip:
                    description: Options to be applied on round trip routes.
                    example:
                      length: 10000
                      points: 5
                    properties:
                      length:
                        description: 'The target length of the route in `m` (note that this is a preferred value, but results may be different).'
                        example: 10000
                        format: float
                        type: number
                      points:
                        description: The number of points to use on the route. Larger values create more circular routes.
                        example: 5
                        format: int32
                        type: integer
                      seed:
                        description: A seed to use for adding randomisation to the overall direction of the generated route
                        example: 1
                        format: int64
                        type: integer
                    title: Round Trip Route Options
                    type: object
                  vehicle_type:
                    description: '(for profile=driving-hgv only): hgv,bus,agricultural,delivery,forestry and goods. It is needed for vehicle restrictions to work. CUSTOM_KEYS:{''apiDefault'':''hgv'',''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                    enum:
                      - agricultural
                      - bus
                      - delivery
                      - forestry
                      - goods
                      - hgv
                      - unknown
                    type: string
                title: Route Options
                type: object
              - description: The JSON body request sent to the routing service which defines options and parameters regarding the route to generate.
                properties:
                  alternative_routes:
                    description: 'Specifies whether alternative routes are computed, and parameters for the algorithm determining suitable alternatives.'
                    example:
                      target_count: 2
                      weight_factor: 1.6
                    properties:
                      share_factor:
                        description: Maximum fraction of the route that alternatives may share with the optimal route. The default value of 0.6 means alternatives can share up to 60% of path segments with the optimal route.
                        example: 0.6
                        format: double
                        type: number
                      target_count:
                        description: Target number of alternative routes to compute. Service returns up to this number of routes that fulfill the share-factor and weight-factor constraints.
                        example: 2
                        format: int32
                        type: integer
                      weight_factor:
                        description: Maximum factor by which route weight may diverge from the optimal route. The default value of 1.4 means alternatives can be up to 1.4 times longer (costly) than the optimal route.
                        example: 1.4
                        format: double
                        type: number
                    title: Alternative Routes
                    type: object
                  attributes:
                    description: List of route attributes
                    example:
                      - avgspeed
                      - percentage
                    items:
                      enum:
                        - avgspeed
                        - detourfactor
                        - percentage
                      type: string
                    type: array
                  bearings:
                    description: |-
                      Specifies a list of pairs (bearings and deviations) to filter the segments of the road network a waypoint can snap to. For example `bearings=[[45,10],[120,20]]`. 
                      Each pair is a comma-separated list that can consist of one or two float values, where the first value is the bearing and the second one is the allowed deviation from the bearing. The bearing can take values between `0` and `360` clockwise from true north. If the deviation is not set, then the default value of `100` degrees is used. The number of pairs must correspond to the number of waypoints.
                      The number of bearings corresponds to the length of waypoints-1 or waypoints. If the bearing information for the last waypoint is given, then this will control the sector from which the destination waypoint may be reached. You can skip a bearing for a certain waypoint by passing an empty value for an array, e.g. `[30,20],[],[40,20]`. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':'cycling-*'}}
                    example:
                      - - 30
                        - 20
                      - []
                      - - 40
                        - 20
                    items:
                      items:
                        format: double
                        type: number
                      type: array
                    type: array
                  continue_straight:
                    description: 'Forces the route to keep going straight at waypoints restricting uturns there even if it would be faster.CUSTOM_KEYS:{''apiDefault'':''false''}'
                    example: false
                    type: boolean
                  coordinates:
                    description: 'The waypoints to use for the route as an array of `longitude/latitude` pairs in WGS 84 (EPSG:4326)'
                    example:
                      - - 8.681495
                        - 49.41461
                      - - 8.686507
                        - 49.41943
                      - - 8.687872
                        - 49.420318
                    items:
                      items:
                        format: double
                        type: number
                      type: array
                    type: array
                  elevation:
                    description: Specifies whether to return elevation values for points. Please note that elevation also gets encoded for json response encoded polyline.
                    example: false
                    type: boolean
                  extra_info:
                    description: The extra info items to include in the response
                    example:
                      - waytype
                      - surface
                    items:
                      enum:
                        - countryinfo
                        - csv
                        - green
                        - noise
                        - osmid
                        - roadaccessrestrictions
                        - shadow
                        - steepness
                        - suitability
                        - surface
                        - tollways
                        - traildifficulty
                        - waycategory
                        - waytype
                      type: string
                    type: array
                  geometry:
                    description: 'Specifies whether to return geometry. CUSTOM_KEYS:{''apiDefault'':true, ''validWhen'':{''ref'':''format'',''value'':[''json'']}}'
                    example: true
                    type: boolean
                  geometry_simplify:
                    description: 'Specifies whether to simplify the geometry. Simplify geometry cannot be applied to routes with more than **one segment** and when `extra_info` is required.CUSTOM_KEYS:{''apiDefault'':false}'
                    example: false
                    type: boolean
                  id:
                    description: Arbitrary identification string of the request reflected in the meta information.
                    example: centrality_request
                    type: string
                  instructions:
                    description: 'Specifies whether to return instructions. CUSTOM_KEYS:{''apiDefault'':true}'
                    example: true
                    type: boolean
                  instructions_format:
                    description: 'Select html for more verbose instructions. CUSTOM_KEYS:{''apiDefault'':''text''}'
                    enum:
                      - html
                      - text
                    example: text
                    type: string
                  language:
                    description: 'Language for the route instructions. CUSTOM_KEYS:{''apiDefault'':''en''}'
                    enum:
                      - cs
                      - cs-cz
                      - de
                      - de-de
                      - en
                      - en-us
                      - eo
                      - eo-eo
                      - es
                      - es-es
                      - fr
                      - fr-fr
                      - gr
                      - gr-gr
                      - he
                      - he-il
                      - hu
                      - hu-hu
                      - id
                      - id-id
                      - it
                      - it-it
                      - ja
                      - ja-jp
                      - ne
                      - ne-np
                      - nl
                      - nl-nl
                      - pl
                      - pl-pl
                      - pt
                      - pt-pt
                      - ro
                      - ro-ro
                      - ru
                      - ru-ru
                      - tr
                      - tr-tr
                      - zh
                      - zh-cn
                    example: en
                    type: string
                  maneuvers:
                    description: 'Specifies whether the maneuver object is included into the step object or not. CUSTOM_KEYS:{''apiDefault'':false}'
                    example: false
                    type: boolean
                  maximum_speed:
                    description: 'The maximum speed specified by user.CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-*'']}}'
                    example: 90
                    format: double
                    type: number
                  options:
                    description: 'For advanced options formatted as json object. For structure refer to the [these examples](https://GIScience.github.io/openrouteservice/documentation/routing-options/Examples.html).'
                    example:
                      avoid_borders: controlled
                    properties:
                      avoid_borders:
                        description: '`all` for no border crossing. `controlled` to cross open borders but avoid controlled ones. Only for `driving-*` profiles. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-*'']}}'
                        enum:
                          - all
                          - controlled
                          - none
                        example: controlled
                        type: string
                      avoid_countries:
                        description: 'List of countries to exclude from matrix with `driving-*` profiles. Can be used together with `''avoid_borders'': ''controlled''`. `[ 11, 193 ]` would exclude Austria and Switzerland. List of countries and application examples can be found [here](https://GIScience.github.io/openrouteservice/documentation/routing-options/Country-List.html). Also, ISO standard country codes cna be used in place of the numerical ids, for example, DE or DEU for Germany. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-*'']}}'
                        example:
                          - 11
                          - 193
                        items:
                          type: string
                        type: array
                      avoid_features:
                        description: 'List of features to avoid. CUSTOM_KEYS:{''itemRestrictions'':{''ref'':''profile'', ''itemsWhen'':{''driving-*'':[''highways'',''tollways'',''ferries''],''cycling-*'':[''ferries'',''steps'',''fords''],''foot-*'':[''ferries'',''fords'',''steps''],''wheelchair'':[''ferries'',''steps'']}}}'
                        example:
                          - highways
                        items:
                          enum:
                            - ferries
                            - fords
                            - highways
                            - steps
                            - tollways
                          type: string
                        type: array
                      avoid_polygons:
                        additionalProperties:
                          type: object
                        description: Comprises areas to be avoided for the route. Formatted in GeoJSON as either a Polygon or Multipolygon object.
                        type: object
                      profile_params:
                        description: ' Specifies additional matrix parameters.CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''valueNot'':[''driving-car'']}}'
                        properties:
                          allow_unsuitable:
                            description: 'Specifies if ways that might not be suitable (e.g. unknown pedestrian usage) should be included in finding routes - default falseCUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                            example: true
                            type: boolean
                          restrictions:
                            description: Describe restrictions to be applied to edges on the routing. any edges that do not match these restrictions are not traversed.
                            properties:
                              axleload:
                                description: 'Axleload restriction in tons. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                                example: 50
                                format: float
                                type: number
                              hazmat:
                                description: 'Specifies whether to use appropriate routing for delivering hazardous goods and avoiding water protected areas. Default is `false`. CUSTOM_KEYS:{''apiDefault'':false,''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                                type: boolean
                              height:
                                description: 'Height restriction in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                                example: 4.2
                                format: float
                                type: number
                              length:
                                description: 'Length restriction in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                                example: 8.4
                                format: float
                                type: number
                              maximum_incline:
                                description: 'Specifies the maximum incline as a percentage. `3`, `6` (default), `10`, `15.CUSTOM_KEYS:{''apiDefault'':6,''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                example: 3
                                format: int32
                                type: integer
                              maximum_sloped_kerb:
                                description: 'Specifies the maximum height of the sloped curb in metres. Values are `0.03`, `0.06` (default), `0.1`.CUSTOM_KEYS:{''apiDefault'':0.6,''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                example: 0.03
                                format: float
                                type: number
                              minimum_width:
                                description: 'Specifies the minimum width of the footway in metres.CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                example: 2.5
                                format: float
                                type: number
                              smoothness_type:
                                description: 'Specifies the minimum smoothness of the route. Default is `good`.CUSTOM_KEYS:{''apiDefault'':''good'',''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                enum:
                                  - bad
                                  - excellent
                                  - good
                                  - horrible
                                  - impassable
                                  - intermediate
                                  - very_bad
                                  - very_horrible
                                example: best
                                type: string
                              surface_type:
                                description: 'Specifies the minimum surface type. Default is `sett`. CUSTOM_KEYS:{''apiDefault'':''sett'',''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                example: asphalt
                                type: string
                              track_type:
                                description: 'Specifies the minimum grade of the route. Default is `grade1`. CUSTOM_KEYS:{''apiDefault'':''grade1'',''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                example: grade2
                                type: string
                              weight:
                                description: 'Weight restriction in tons. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                                example: 40
                                format: float
                                type: number
                              width:
                                description: 'Width restriction in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                                example: 5.6
                                format: float
                                type: number
                            title: Restrictions
                            type: object
                          surface_quality_known:
                            description: 'Specifies whether to enforce that only ways with known information on surface quality be taken into account - default falseCUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                            example: true
                            type: boolean
                          weightings:
                            description: Describe additional weightings to be applied to edges on the routing.
                            properties:
                              csvColumn:
                                type: string
                              csv_column:
                                description: Specifies the csv column name
                                type: string
                              csv_factor:
                                description: Specifies the factor of csv-column (range 0 to 1)
                                format: float
                                type: number
                              green:
                                description: |-
                                  Specifies the Green factor for `foot-*` profiles.

                                  factor: Multiplication factor range from 0 to 1. 0 is the green routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer ways through green areas over a shorter route. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['foot-*']}}
                                example: 0.4
                                format: float
                                type: number
                              quiet:
                                description: |-
                                  Specifies the Quiet factor for foot-* profiles.

                                  factor: Multiplication factor range from 0 to 1. 0 is the quiet routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer quiet ways over a shorter route. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['foot-*']}}
                                example: 0.8
                                format: float
                                type: number
                              shadow:
                                description: |-
                                  Specifies the shadow factor for `foot-*` profiles.

                                  factor: Multiplication factor range from 0 to 1. 0 is the shadow routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer ways through shadow areas over a shorter route. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['foot-*']}}
                                example: 0.4
                                format: float
                                type: number
                              steepness_difficulty:
                                description: |-
                                  Specifies the fitness level for `cycling-*` profiles.

                                   level: 0 = Novice, 1 = Moderate, 2 = Amateur, 3 = Pro. The prefered gradient increases with level. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['cycling-*']}}
                                example: 2
                                format: int32
                                type: integer
                            title: Profile Weightings
                            type: object
                        title: Profile Parameters
                        type: object
                      round_trip:
                        description: Options to be applied on round trip routes.
                        example:
                          length: 10000
                          points: 5
                        properties:
                          length:
                            description: 'The target length of the route in `m` (note that this is a preferred value, but results may be different).'
                            example: 10000
                            format: float
                            type: number
                          points:
                            description: The number of points to use on the route. Larger values create more circular routes.
                            example: 5
                            format: int32
                            type: integer
                          seed:
                            description: A seed to use for adding randomisation to the overall direction of the generated route
                            example: 1
                            format: int64
                            type: integer
                        title: Round Trip Route Options
                        type: object
                      vehicle_type:
                        description: '(for profile=driving-hgv only): hgv,bus,agricultural,delivery,forestry and goods. It is needed for vehicle restrictions to work. CUSTOM_KEYS:{''apiDefault'':''hgv'',''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                        enum:
                          - agricultural
                          - bus
                          - delivery
                          - forestry
                          - goods
                          - hgv
                          - unknown
                        type: string
                    title: Route Options
                    type: object
                  preference:
                    description: 'Specifies the route preference. CUSTOM_KEYS:{''apiDefault'':''recommended''}'
                    enum:
                      - fastest
                      - recommended
                      - shortest
                    example: recommended
                    type: string
                  radiuses:
                    description: 'A list of maximum distances (measured in metres) that limit the search of nearby road segments to every given waypoint. The values must be greater than 0, the value of -1 specifies using the maximum possible search radius. The number of radiuses correspond to the number of waypoints. If only a single value is given, it will be applied to all waypoints.'
                    example:
                      - 200
                      - -1
                      - 30
                    items:
                      format: double
                      type: number
                    type: array
                  roundabout_exits:
                    description: 'Provides bearings of the entrance and all passed roundabout exits. Adds the `exit_bearings` array to the step object in the response. CUSTOM_KEYS:{''apiDefault'':false}'
                    example: false
                    type: boolean
                  skip_segments:
                    description: Specifies the segments that should be skipped in the route calculation. A segment is the connection between two given coordinates and the counting starts with 1 for the connection between the first and second coordinate.
                    example:
                      - 2
                      - 4
                    items:
                      format: int32
                      type: integer
                    type: array
                  suppress_warnings:
                    description: Suppress warning messages in the response
                    example: false
                    type: boolean
                  units:
                    description: 'Specifies the distance unit. CUSTOM_KEYS:{''apiDefault'':''m''}'
                    enum:
                      - km
                      - m
                      - mi
                    example: m
                    type: string
                required:
                  - coordinates
                title: Directions Service
                type: object
            description: The JSON body request sent to the routing service which defines options and parameters regarding the route to generate.
            title: Directions Service
      produces:
        - '*/*'
        - application/json
      responses:
        '200':
          description: 'Standard response for successfully processed requests. Returns JSON. The decoded values of the extra information can be found [here](https://GIScience.github.io/openrouteservice/documentation/extra-info/Extra-Info.html).'
          schema:
            properties:
              bbox:
                description: Bounding box that covers all returned routes
                example:
                  - 49.414057
                  - 8.680894
                  - 49.420514
                  - 8.690123
                items:
                  format: double
                  type: number
                type: array
              metadata:
                description: Information about the service and request
                properties:
                  attribution:
                    description: Copyright and attribution information
                    example: openrouteservice.org | OpenStreetMap contributors
                    type: string
                  engine:
                    description: Information about the routing service
                    properties:
                      build_date:
                        description: The date that the service was last updated
                        example: '2019-02-07T14:28:11Z'
                        type: string
                      graph_date:
                        description: The date that the graph data was last updated
                        example: '2019-02-07T14:28:11Z'
                        type: string
                      version:
                        description: The backend version of the openrouteservice that was queried
                        example: 5
                        type: string
                    title: EngineInfo
                    type: object
                  id:
                    description: ID of the request (as passed in by the query)
                    example: request123
                    type: string
                  osm_file_md5_hash:
                    description: The MD5 hash of the OSM planet file that was used for generating graphs
                    example: c0327ba6
                    type: string
                  query:
                    allOf:
                      - description: Advanced options for routing
                        properties:
                          avoid_borders:
                            description: '`all` for no border crossing. `controlled` to cross open borders but avoid controlled ones. Only for `driving-*` profiles. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-*'']}}'
                            enum:
                              - all
                              - controlled
                              - none
                            example: controlled
                            type: string
                          avoid_countries:
                            description: 'List of countries to exclude from matrix with `driving-*` profiles. Can be used together with `''avoid_borders'': ''controlled''`. `[ 11, 193 ]` would exclude Austria and Switzerland. List of countries and application examples can be found [here](https://GIScience.github.io/openrouteservice/documentation/routing-options/Country-List.html). Also, ISO standard country codes cna be used in place of the numerical ids, for example, DE or DEU for Germany. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-*'']}}'
                            example:
                              - 11
                              - 193
                            items:
                              type: string
                            type: array
                          avoid_features:
                            description: 'List of features to avoid. CUSTOM_KEYS:{''itemRestrictions'':{''ref'':''profile'', ''itemsWhen'':{''driving-*'':[''highways'',''tollways'',''ferries''],''cycling-*'':[''ferries'',''steps'',''fords''],''foot-*'':[''ferries'',''fords'',''steps''],''wheelchair'':[''ferries'',''steps'']}}}'
                            example:
                              - highways
                            items:
                              enum:
                                - ferries
                                - fords
                                - highways
                                - steps
                                - tollways
                              type: string
                            type: array
                          avoid_polygons:
                            additionalProperties:
                              type: object
                            description: Comprises areas to be avoided for the route. Formatted in GeoJSON as either a Polygon or Multipolygon object.
                            type: object
                          profile_params:
                            description: ' Specifies additional matrix parameters.CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''valueNot'':[''driving-car'']}}'
                            properties:
                              allow_unsuitable:
                                description: 'Specifies if ways that might not be suitable (e.g. unknown pedestrian usage) should be included in finding routes - default falseCUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                example: true
                                type: boolean
                              restrictions:
                                description: Describe restrictions to be applied to edges on the routing. any edges that do not match these restrictions are not traversed.
                                properties:
                                  axleload:
                                    description: 'Axleload restriction in tons. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                                    example: 50
                                    format: float
                                    type: number
                                  hazmat:
                                    description: 'Specifies whether to use appropriate routing for delivering hazardous goods and avoiding water protected areas. Default is `false`. CUSTOM_KEYS:{''apiDefault'':false,''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                                    type: boolean
                                  height:
                                    description: 'Height restriction in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                                    example: 4.2
                                    format: float
                                    type: number
                                  length:
                                    description: 'Length restriction in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                                    example: 8.4
                                    format: float
                                    type: number
                                  maximum_incline:
                                    description: 'Specifies the maximum incline as a percentage. `3`, `6` (default), `10`, `15.CUSTOM_KEYS:{''apiDefault'':6,''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                    example: 3
                                    format: int32
                                    type: integer
                                  maximum_sloped_kerb:
                                    description: 'Specifies the maximum height of the sloped curb in metres. Values are `0.03`, `0.06` (default), `0.1`.CUSTOM_KEYS:{''apiDefault'':0.6,''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                    example: 0.03
                                    format: float
                                    type: number
                                  minimum_width:
                                    description: 'Specifies the minimum width of the footway in metres.CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                    example: 2.5
                                    format: float
                                    type: number
                                  smoothness_type:
                                    description: 'Specifies the minimum smoothness of the route. Default is `good`.CUSTOM_KEYS:{''apiDefault'':''good'',''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                    enum:
                                      - bad
                                      - excellent
                                      - good
                                      - horrible
                                      - impassable
                                      - intermediate
                                      - very_bad
                                      - very_horrible
                                    example: best
                                    type: string
                                  surface_type:
                                    description: 'Specifies the minimum surface type. Default is `sett`. CUSTOM_KEYS:{''apiDefault'':''sett'',''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                    example: asphalt
                                    type: string
                                  track_type:
                                    description: 'Specifies the minimum grade of the route. Default is `grade1`. CUSTOM_KEYS:{''apiDefault'':''grade1'',''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                    example: grade2
                                    type: string
                                  weight:
                                    description: 'Weight restriction in tons. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                                    example: 40
                                    format: float
                                    type: number
                                  width:
                                    description: 'Width restriction in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                                    example: 5.6
                                    format: float
                                    type: number
                                title: Restrictions
                                type: object
                              surface_quality_known:
                                description: 'Specifies whether to enforce that only ways with known information on surface quality be taken into account - default falseCUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                example: true
                                type: boolean
                              weightings:
                                description: Describe additional weightings to be applied to edges on the routing.
                                properties:
                                  csvColumn:
                                    type: string
                                  csv_column:
                                    description: Specifies the csv column name
                                    type: string
                                  csv_factor:
                                    description: Specifies the factor of csv-column (range 0 to 1)
                                    format: float
                                    type: number
                                  green:
                                    description: |-
                                      Specifies the Green factor for `foot-*` profiles.

                                      factor: Multiplication factor range from 0 to 1. 0 is the green routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer ways through green areas over a shorter route. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['foot-*']}}
                                    example: 0.4
                                    format: float
                                    type: number
                                  quiet:
                                    description: |-
                                      Specifies the Quiet factor for foot-* profiles.

                                      factor: Multiplication factor range from 0 to 1. 0 is the quiet routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer quiet ways over a shorter route. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['foot-*']}}
                                    example: 0.8
                                    format: float
                                    type: number
                                  shadow:
                                    description: |-
                                      Specifies the shadow factor for `foot-*` profiles.

                                      factor: Multiplication factor range from 0 to 1. 0 is the shadow routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer ways through shadow areas over a shorter route. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['foot-*']}}
                                    example: 0.4
                                    format: float
                                    type: number
                                  steepness_difficulty:
                                    description: |-
                                      Specifies the fitness level for `cycling-*` profiles.

                                       level: 0 = Novice, 1 = Moderate, 2 = Amateur, 3 = Pro. The prefered gradient increases with level. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['cycling-*']}}
                                    example: 2
                                    format: int32
                                    type: integer
                                title: Profile Weightings
                                type: object
                            title: Profile Parameters
                            type: object
                          round_trip:
                            description: Options to be applied on round trip routes.
                            example:
                              length: 10000
                              points: 5
                            properties:
                              length:
                                description: 'The target length of the route in `m` (note that this is a preferred value, but results may be different).'
                                example: 10000
                                format: float
                                type: number
                              points:
                                description: The number of points to use on the route. Larger values create more circular routes.
                                example: 5
                                format: int32
                                type: integer
                              seed:
                                description: A seed to use for adding randomisation to the overall direction of the generated route
                                example: 1
                                format: int64
                                type: integer
                            title: Round Trip Route Options
                            type: object
                          vehicle_type:
                            description: '(for profile=driving-hgv only): hgv,bus,agricultural,delivery,forestry and goods. It is needed for vehicle restrictions to work. CUSTOM_KEYS:{''apiDefault'':''hgv'',''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                            enum:
                              - agricultural
                              - bus
                              - delivery
                              - forestry
                              - goods
                              - hgv
                              - unknown
                            type: string
                        title: Route Options
                        type: object
                      - description: The JSON body request sent to the routing service which defines options and parameters regarding the route to generate.
                        properties:
                          alternative_routes:
                            description: 'Specifies whether alternative routes are computed, and parameters for the algorithm determining suitable alternatives.'
                            example:
                              target_count: 2
                              weight_factor: 1.6
                            properties:
                              share_factor:
                                description: Maximum fraction of the route that alternatives may share with the optimal route. The default value of 0.6 means alternatives can share up to 60% of path segments with the optimal route.
                                example: 0.6
                                format: double
                                type: number
                              target_count:
                                description: Target number of alternative routes to compute. Service returns up to this number of routes that fulfill the share-factor and weight-factor constraints.
                                example: 2
                                format: int32
                                type: integer
                              weight_factor:
                                description: Maximum factor by which route weight may diverge from the optimal route. The default value of 1.4 means alternatives can be up to 1.4 times longer (costly) than the optimal route.
                                example: 1.4
                                format: double
                                type: number
                            title: Alternative Routes
                            type: object
                          attributes:
                            description: List of route attributes
                            example:
                              - avgspeed
                              - percentage
                            items:
                              enum:
                                - avgspeed
                                - detourfactor
                                - percentage
                              type: string
                            type: array
                          bearings:
                            description: |-
                              Specifies a list of pairs (bearings and deviations) to filter the segments of the road network a waypoint can snap to. For example `bearings=[[45,10],[120,20]]`. 
                              Each pair is a comma-separated list that can consist of one or two float values, where the first value is the bearing and the second one is the allowed deviation from the bearing. The bearing can take values between `0` and `360` clockwise from true north. If the deviation is not set, then the default value of `100` degrees is used. The number of pairs must correspond to the number of waypoints.
                              The number of bearings corresponds to the length of waypoints-1 or waypoints. If the bearing information for the last waypoint is given, then this will control the sector from which the destination waypoint may be reached. You can skip a bearing for a certain waypoint by passing an empty value for an array, e.g. `[30,20],[],[40,20]`. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':'cycling-*'}}
                            example:
                              - - 30
                                - 20
                              - []
                              - - 40
                                - 20
                            items:
                              items:
                                format: double
                                type: number
                              type: array
                            type: array
                          continue_straight:
                            description: 'Forces the route to keep going straight at waypoints restricting uturns there even if it would be faster.CUSTOM_KEYS:{''apiDefault'':''false''}'
                            example: false
                            type: boolean
                          coordinates:
                            description: 'The waypoints to use for the route as an array of `longitude/latitude` pairs in WGS 84 (EPSG:4326)'
                            example:
                              - - 8.681495
                                - 49.41461
                              - - 8.686507
                                - 49.41943
                              - - 8.687872
                                - 49.420318
                            items:
                              items:
                                format: double
                                type: number
                              type: array
                            type: array
                          elevation:
                            description: Specifies whether to return elevation values for points. Please note that elevation also gets encoded for json response encoded polyline.
                            example: false
                            type: boolean
                          extra_info:
                            description: The extra info items to include in the response
                            example:
                              - waytype
                              - surface
                            items:
                              enum:
                                - countryinfo
                                - csv
                                - green
                                - noise
                                - osmid
                                - roadaccessrestrictions
                                - shadow
                                - steepness
                                - suitability
                                - surface
                                - tollways
                                - traildifficulty
                                - waycategory
                                - waytype
                              type: string
                            type: array
                          geometry:
                            description: 'Specifies whether to return geometry. CUSTOM_KEYS:{''apiDefault'':true, ''validWhen'':{''ref'':''format'',''value'':[''json'']}}'
                            example: true
                            type: boolean
                          geometry_simplify:
                            description: 'Specifies whether to simplify the geometry. Simplify geometry cannot be applied to routes with more than **one segment** and when `extra_info` is required.CUSTOM_KEYS:{''apiDefault'':false}'
                            example: false
                            type: boolean
                          id:
                            description: Arbitrary identification string of the request reflected in the meta information.
                            example: centrality_request
                            type: string
                          instructions:
                            description: 'Specifies whether to return instructions. CUSTOM_KEYS:{''apiDefault'':true}'
                            example: true
                            type: boolean
                          instructions_format:
                            description: 'Select html for more verbose instructions. CUSTOM_KEYS:{''apiDefault'':''text''}'
                            enum:
                              - html
                              - text
                            example: text
                            type: string
                          language:
                            description: 'Language for the route instructions. CUSTOM_KEYS:{''apiDefault'':''en''}'
                            enum:
                              - cs
                              - cs-cz
                              - de
                              - de-de
                              - en
                              - en-us
                              - eo
                              - eo-eo
                              - es
                              - es-es
                              - fr
                              - fr-fr
                              - gr
                              - gr-gr
                              - he
                              - he-il
                              - hu
                              - hu-hu
                              - id
                              - id-id
                              - it
                              - it-it
                              - ja
                              - ja-jp
                              - ne
                              - ne-np
                              - nl
                              - nl-nl
                              - pl
                              - pl-pl
                              - pt
                              - pt-pt
                              - ro
                              - ro-ro
                              - ru
                              - ru-ru
                              - tr
                              - tr-tr
                              - zh
                              - zh-cn
                            example: en
                            type: string
                          maneuvers:
                            description: 'Specifies whether the maneuver object is included into the step object or not. CUSTOM_KEYS:{''apiDefault'':false}'
                            example: false
                            type: boolean
                          maximum_speed:
                            description: 'The maximum speed specified by user.CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-*'']}}'
                            example: 90
                            format: double
                            type: number
                          options:
                            description: 'For advanced options formatted as json object. For structure refer to the [these examples](https://GIScience.github.io/openrouteservice/documentation/routing-options/Examples.html).'
                            example:
                              avoid_borders: controlled
                            properties:
                              avoid_borders:
                                description: '`all` for no border crossing. `controlled` to cross open borders but avoid controlled ones. Only for `driving-*` profiles. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-*'']}}'
                                enum:
                                  - all
                                  - controlled
                                  - none
                                example: controlled
                                type: string
                              avoid_countries:
                                description: 'List of countries to exclude from matrix with `driving-*` profiles. Can be used together with `''avoid_borders'': ''controlled''`. `[ 11, 193 ]` would exclude Austria and Switzerland. List of countries and application examples can be found [here](https://GIScience.github.io/openrouteservice/documentation/routing-options/Country-List.html). Also, ISO standard country codes cna be used in place of the numerical ids, for example, DE or DEU for Germany. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-*'']}}'
                                example:
                                  - 11
                                  - 193
                                items:
                                  type: string
                                type: array
                              avoid_features:
                                description: 'List of features to avoid. CUSTOM_KEYS:{''itemRestrictions'':{''ref'':''profile'', ''itemsWhen'':{''driving-*'':[''highways'',''tollways'',''ferries''],''cycling-*'':[''ferries'',''steps'',''fords''],''foot-*'':[''ferries'',''fords'',''steps''],''wheelchair'':[''ferries'',''steps'']}}}'
                                example:
                                  - highways
                                items:
                                  enum:
                                    - ferries
                                    - fords
                                    - highways
                                    - steps
                                    - tollways
                                  type: string
                                type: array
                              avoid_polygons:
                                additionalProperties:
                                  type: object
                                description: Comprises areas to be avoided for the route. Formatted in GeoJSON as either a Polygon or Multipolygon object.
                                type: object
                              profile_params:
                                description: ' Specifies additional matrix parameters.CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''valueNot'':[''driving-car'']}}'
                                properties:
                                  allow_unsuitable:
                                    description: 'Specifies if ways that might not be suitable (e.g. unknown pedestrian usage) should be included in finding routes - default falseCUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                    example: true
                                    type: boolean
                                  restrictions:
                                    description: Describe restrictions to be applied to edges on the routing. any edges that do not match these restrictions are not traversed.
                                    properties:
                                      axleload:
                                        description: 'Axleload restriction in tons. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                                        example: 50
                                        format: float
                                        type: number
                                      hazmat:
                                        description: 'Specifies whether to use appropriate routing for delivering hazardous goods and avoiding water protected areas. Default is `false`. CUSTOM_KEYS:{''apiDefault'':false,''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                                        type: boolean
                                      height:
                                        description: 'Height restriction in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                                        example: 4.2
                                        format: float
                                        type: number
                                      length:
                                        description: 'Length restriction in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                                        example: 8.4
                                        format: float
                                        type: number
                                      maximum_incline:
                                        description: 'Specifies the maximum incline as a percentage. `3`, `6` (default), `10`, `15.CUSTOM_KEYS:{''apiDefault'':6,''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                        example: 3
                                        format: int32
                                        type: integer
                                      maximum_sloped_kerb:
                                        description: 'Specifies the maximum height of the sloped curb in metres. Values are `0.03`, `0.06` (default), `0.1`.CUSTOM_KEYS:{''apiDefault'':0.6,''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                        example: 0.03
                                        format: float
                                        type: number
                                      minimum_width:
                                        description: 'Specifies the minimum width of the footway in metres.CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                        example: 2.5
                                        format: float
                                        type: number
                                      smoothness_type:
                                        description: 'Specifies the minimum smoothness of the route. Default is `good`.CUSTOM_KEYS:{''apiDefault'':''good'',''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                        enum:
                                          - bad
                                          - excellent
                                          - good
                                          - horrible
                                          - impassable
                                          - intermediate
                                          - very_bad
                                          - very_horrible
                                        example: best
                                        type: string
                                      surface_type:
                                        description: 'Specifies the minimum surface type. Default is `sett`. CUSTOM_KEYS:{''apiDefault'':''sett'',''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                        example: asphalt
                                        type: string
                                      track_type:
                                        description: 'Specifies the minimum grade of the route. Default is `grade1`. CUSTOM_KEYS:{''apiDefault'':''grade1'',''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                        example: grade2
                                        type: string
                                      weight:
                                        description: 'Weight restriction in tons. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                                        example: 40
                                        format: float
                                        type: number
                                      width:
                                        description: 'Width restriction in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                                        example: 5.6
                                        format: float
                                        type: number
                                    title: Restrictions
                                    type: object
                                  surface_quality_known:
                                    description: 'Specifies whether to enforce that only ways with known information on surface quality be taken into account - default falseCUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                    example: true
                                    type: boolean
                                  weightings:
                                    description: Describe additional weightings to be applied to edges on the routing.
                                    properties:
                                      csvColumn:
                                        type: string
                                      csv_column:
                                        description: Specifies the csv column name
                                        type: string
                                      csv_factor:
                                        description: Specifies the factor of csv-column (range 0 to 1)
                                        format: float
                                        type: number
                                      green:
                                        description: |-
                                          Specifies the Green factor for `foot-*` profiles.

                                          factor: Multiplication factor range from 0 to 1. 0 is the green routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer ways through green areas over a shorter route. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['foot-*']}}
                                        example: 0.4
                                        format: float
                                        type: number
                                      quiet:
                                        description: |-
                                          Specifies the Quiet factor for foot-* profiles.

                                          factor: Multiplication factor range from 0 to 1. 0 is the quiet routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer quiet ways over a shorter route. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['foot-*']}}
                                        example: 0.8
                                        format: float
                                        type: number
                                      shadow:
                                        description: |-
                                          Specifies the shadow factor for `foot-*` profiles.

                                          factor: Multiplication factor range from 0 to 1. 0 is the shadow routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer ways through shadow areas over a shorter route. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['foot-*']}}
                                        example: 0.4
                                        format: float
                                        type: number
                                      steepness_difficulty:
                                        description: |-
                                          Specifies the fitness level for `cycling-*` profiles.

                                           level: 0 = Novice, 1 = Moderate, 2 = Amateur, 3 = Pro. The prefered gradient increases with level. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['cycling-*']}}
                                        example: 2
                                        format: int32
                                        type: integer
                                    title: Profile Weightings
                                    type: object
                                title: Profile Parameters
                                type: object
                              round_trip:
                                description: Options to be applied on round trip routes.
                                example:
                                  length: 10000
                                  points: 5
                                properties:
                                  length:
                                    description: 'The target length of the route in `m` (note that this is a preferred value, but results may be different).'
                                    example: 10000
                                    format: float
                                    type: number
                                  points:
                                    description: The number of points to use on the route. Larger values create more circular routes.
                                    example: 5
                                    format: int32
                                    type: integer
                                  seed:
                                    description: A seed to use for adding randomisation to the overall direction of the generated route
                                    example: 1
                                    format: int64
                                    type: integer
                                title: Round Trip Route Options
                                type: object
                              vehicle_type:
                                description: '(for profile=driving-hgv only): hgv,bus,agricultural,delivery,forestry and goods. It is needed for vehicle restrictions to work. CUSTOM_KEYS:{''apiDefault'':''hgv'',''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                                enum:
                                  - agricultural
                                  - bus
                                  - delivery
                                  - forestry
                                  - goods
                                  - hgv
                                  - unknown
                                type: string
                            title: Route Options
                            type: object
                          preference:
                            description: 'Specifies the route preference. CUSTOM_KEYS:{''apiDefault'':''recommended''}'
                            enum:
                              - fastest
                              - recommended
                              - shortest
                            example: recommended
                            type: string
                          radiuses:
                            description: 'A list of maximum distances (measured in metres) that limit the search of nearby road segments to every given waypoint. The values must be greater than 0, the value of -1 specifies using the maximum possible search radius. The number of radiuses correspond to the number of waypoints. If only a single value is given, it will be applied to all waypoints.'
                            example:
                              - 200
                              - -1
                              - 30
                            items:
                              format: double
                              type: number
                            type: array
                          roundabout_exits:
                            description: 'Provides bearings of the entrance and all passed roundabout exits. Adds the `exit_bearings` array to the step object in the response. CUSTOM_KEYS:{''apiDefault'':false}'
                            example: false
                            type: boolean
                          skip_segments:
                            description: Specifies the segments that should be skipped in the route calculation. A segment is the connection between two given coordinates and the counting starts with 1 for the connection between the first and second coordinate.
                            example:
                              - 2
                              - 4
                            items:
                              format: int32
                              type: integer
                            type: array
                          suppress_warnings:
                            description: Suppress warning messages in the response
                            example: false
                            type: boolean
                          units:
                            description: 'Specifies the distance unit. CUSTOM_KEYS:{''apiDefault'':''m''}'
                            enum:
                              - km
                              - m
                              - mi
                            example: m
                            type: string
                        required:
                          - coordinates
                        title: Directions Service
                        type: object
                    description: The information that was used for generating the route
                    title: Directions Service
                  service:
                    description: The service that was requested
                    example: routing
                    type: string
                  system_message:
                    description: System message
                    example: A message string configured in the service
                    type: string
                  timestamp:
                    description: Time that the request was made (UNIX Epoch time)
                    example: 1549549847974
                    format: int64
                    type: integer
                title: RouteResponseInfo
                type: object
              routes:
                description: A list of routes returned from the request
                items:
                  description: An individual JSON based route created by the service
                  properties:
                    arrival:
                      description: 'Arrival date and timeCUSTOM_KEYS:{''validWhen'':{''ref'':''arrival'',''value'':true}}'
                      example: '2020-01-31T13:15:00+01:00'
                      format: date-time
                      type: string
                    bbox:
                      description: A bounding box which contains the entire route
                      example:
                        - 49.414057
                        - 8.680894
                        - 49.420514
                        - 8.690123
                      items:
                        format: double
                        type: number
                      type: array
                    departure:
                      description: 'Departure date and timeCUSTOM_KEYS:{''validWhen'':{''ref'':''departure'',''value'':true}}'
                      example: '2020-01-31T12:45:00+01:00'
                      format: date-time
                      type: string
                    extras:
                      additionalProperties:
                        description: An object representing one of the extra info items requested
                        properties:
                          summary:
                            description: List representing the summary of the extra info items.
                            items:
                              properties:
                                amount:
                                  description: Category percentage of the entire route.
                                  example: 23.8
                                  format: double
                                  type: number
                                distance:
                                  description: Cumulative distance of this value.
                                  example: 123.1
                                  format: double
                                  type: number
                                value:
                                  description: '[Value](https://GIScience.github.io/openrouteservice/documentation/extra-info/Extra-Info.html) of a info category.'
                                  example: 5
                                  format: double
                                  type: number
                              title: JSONExtraSummary
                              type: object
                            type: array
                          values:
                            description: |-
                              A list of values representing a section of the route. The individual values are: 
                              Value 1: Indice of the staring point of the geometry for this section,
                              Value 2: Indice of the end point of the geoemetry for this sections,
                              Value 3: [Value](https://GIScience.github.io/openrouteservice/documentation/extra-info/Extra-Info.html) assigned to this section.
                            example:
                              - - 0
                                - 3
                                - 26
                              - - 3
                                - 10
                                - 12
                            items:
                              items:
                                format: int64
                                type: integer
                              type: array
                            type: array
                        title: JSONExtra
                        type: object
                      description: List of extra info objects representing the extra info items that were requested for the route.
                      type: object
                    segments:
                      description: List containing the segments and its corresponding steps which make up the route.
                      items:
                        description: List containing the segments and its correspoding steps which make up the route.
                        properties:
                          ascent:
                            description: ' Contains ascent of this segment in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''elevation'',value:true}}'
                            example: 56.3
                            format: double
                            type: number
                          avgspeed:
                            description: 'Contains the average speed of this segment in km/h. CUSTOM_KEYS:{''validWhen'':{''ref'':''attributes'',''valueContains'':''avgspeed''}}'
                            example: 56.3
                            format: double
                            type: number
                          descent:
                            description: 'Contains descent of this segment in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''elevation'',value:true}}'
                            example: 45.2
                            format: double
                            type: number
                          detourfactor:
                            description: 'Contains the deviation compared to a straight line that would have the factor `1`. Double the Distance would be a `2`. CUSTOM_KEYS:{''validWhen'':{''ref'':''attributes'',''valueContains'':''detourfactor''}}'
                            example: 0.5
                            format: double
                            type: number
                          distance:
                            description: Contains the distance of the segment in specified units.
                            example: 253
                            format: double
                            type: number
                          duration:
                            description: Contains the duration of the segment in seconds.
                            example: 37.7
                            format: double
                            type: number
                          percentage:
                            description: 'Contains the proportion of the route in percent. CUSTOM_KEYS:{''validWhen'':{''ref'':''attributes'',''valueContains'':''percentage''}}'
                            example: 43.2
                            format: double
                            type: number
                          steps:
                            description: List containing the specific steps the segment consists of.
                            items:
                              description: Step of a route segment
                              properties:
                                distance:
                                  description: The distance for the step in metres.
                                  example: 245
                                  format: double
                                  type: number
                                duration:
                                  description: The duration for the step in seconds.
                                  example: 96.2
                                  format: double
                                  type: number
                                exit_bearings:
                                  description: 'Contains the bearing of the entrance and all passed exits in a roundabout  CUSTOM_KEYS:{''validWhen'':{''ref'':''roundabout_exits'',value:true}}.'
                                  example:
                                    - 10
                                    - 45
                                    - 60
                                  items:
                                    format: int32
                                    type: integer
                                  type: array
                                exit_number:
                                  description: Only for roundabouts. Contains the number of the exit to take.
                                  example: 2
                                  format: int32
                                  type: integer
                                instruction:
                                  description: The routing instruction text for the step.
                                  example: Turn right onto Berliner Straße
                                  type: string
                                maneuver:
                                  description: 'The maneuver to be performed  CUSTOM_KEYS:{''validWhen'':{''ref'':''maneuvers'',value:true}}'
                                  properties:
                                    bearing_after:
                                      description: The azimuth angle (in degrees) of the direction right after the maneuver.
                                      example: 96
                                      format: int32
                                      type: integer
                                    bearing_before:
                                      description: The azimuth angle (in degrees) of the direction right before the maneuver.
                                      example: 24
                                      format: int32
                                      type: integer
                                    location:
                                      description: The coordinate of the point where a maneuver takes place.
                                      example:
                                        - 8.678962
                                        - 49.407819
                                      items:
                                        format: double
                                        type: number
                                      type: array
                                  title: JSONStepManeuver
                                  type: object
                                name:
                                  description: The name of the next street.
                                  example: Berliner Straße
                                  type: string
                                type:
                                  description: 'The [instruction](https://GIScience.github.io/openrouteservice/documentation/Instruction-Types.html) action for symbolisation purposes.'
                                  example: 1
                                  format: int32
                                  type: integer
                                way_points:
                                  description: List containing the indices of the steps start- and endpoint corresponding to the *geometry*.
                                  example:
                                    - 45
                                    - 48
                                  items:
                                    format: int32
                                    type: integer
                                  type: array
                              title: JSONStep
                              type: object
                            type: array
                        title: JSONSegment
                        type: object
                      type: array
                    summary:
                      description: Summary information about the route
                      properties:
                        ascent:
                          description: 'Total ascent in meters.CUSTOM_KEYS:{''validWhen'':{''ref'':''elevation'',''value'':true}}'
                          example: 166.3
                          format: double
                          type: number
                        descent:
                          description: 'Total descent in meters.CUSTOM_KEYS:{''validWhen'':{''ref'':''elevation'',''value'':true}}'
                          example: 201.3
                          format: double
                          type: number
                        distance:
                          description: Total route distance in specified units.
                          example: 12.6
                          format: double
                          type: number
                        duration:
                          description: Total duration in seconds.
                          example: 604
                          format: double
                          type: number
                      title: JSONSummary
                      type: object
                    warnings:
                      description: List of warnings that have been generated for the route
                      items:
                        description: Informs about possible difficulties like access restrictions on the generated route. Generates a corresponding `extras` object with the affected segments.
                        properties:
                          code:
                            description: Identification code for the warning
                            example: 1
                            format: int32
                            type: integer
                          message:
                            description: The message associated with the warning
                            example: This route may go over restricted roads
                            type: string
                        title: JSONWarning
                        type: object
                      type: array
                    way_points:
                      description: List containing the indices of way points corresponding to the *geometry*.
                      example:
                        - 0
                        - 23
                      items:
                        format: int32
                        type: integer
                      type: array
                  title: JSONIndividualRouteResponse
                  type: object
                type: array
            title: JSONRouteResponse
            type: object
        '201':
          description: Created
        '400':
          description: The request is incorrect and therefore can not be processed.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: 'An element could not be found. If possible, a more detailed error code is provided.'
        '405':
          description: 'The specified HTTP method is not supported. For more details, refer to the EndPoint documentation.'
        '413':
          description: 'The request is larger than the server is able to process, the data provided in the request exceeds the capacity limit.'
        '500':
          description: An unexpected error was encountered and a more detailed error code is provided.
        '501':
          description: Indicates that the server does not support the functionality needed to fulfill the request.
        '503':
          description: The server is currently unavailable due to overload or maintenance.
      summary: Directions Service (POST)
      tags:
        - Directions
  '/v2/directions/{profile}/geojson':
    post:
      consumes:
        - application/json
      description: Returns a route between two or more locations for a selected profile and its settings as GeoJSON
      operationId: getGeoJsonRouteUsingPOST
      parameters:
        - description: Specifies the route profile.
          enum:
            - cycling-electric
            - cycling-mountain
            - cycling-regular
            - cycling-road
            - driving-car
            - driving-hgv
            - foot-hiking
            - foot-walking
            - wheelchair
          in: path
          name: profile
          required: true
          type: string
          x-example: driving-car
        - description: The request payload
          in: body
          name: request
          required: true
          schema:
            allOf:
              - description: Advanced options for routing
                properties:
                  avoid_borders:
                    description: '`all` for no border crossing. `controlled` to cross open borders but avoid controlled ones. Only for `driving-*` profiles. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-*'']}}'
                    enum:
                      - all
                      - controlled
                      - none
                    example: controlled
                    type: string
                  avoid_countries:
                    description: 'List of countries to exclude from matrix with `driving-*` profiles. Can be used together with `''avoid_borders'': ''controlled''`. `[ 11, 193 ]` would exclude Austria and Switzerland. List of countries and application examples can be found [here](https://GIScience.github.io/openrouteservice/documentation/routing-options/Country-List.html). Also, ISO standard country codes cna be used in place of the numerical ids, for example, DE or DEU for Germany. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-*'']}}'
                    example:
                      - 11
                      - 193
                    items:
                      type: string
                    type: array
                  avoid_features:
                    description: 'List of features to avoid. CUSTOM_KEYS:{''itemRestrictions'':{''ref'':''profile'', ''itemsWhen'':{''driving-*'':[''highways'',''tollways'',''ferries''],''cycling-*'':[''ferries'',''steps'',''fords''],''foot-*'':[''ferries'',''fords'',''steps''],''wheelchair'':[''ferries'',''steps'']}}}'
                    example:
                      - highways
                    items:
                      enum:
                        - ferries
                        - fords
                        - highways
                        - steps
                        - tollways
                      type: string
                    type: array
                  avoid_polygons:
                    additionalProperties:
                      type: object
                    description: Comprises areas to be avoided for the route. Formatted in GeoJSON as either a Polygon or Multipolygon object.
                    type: object
                  profile_params:
                    description: ' Specifies additional matrix parameters.CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''valueNot'':[''driving-car'']}}'
                    properties:
                      allow_unsuitable:
                        description: 'Specifies if ways that might not be suitable (e.g. unknown pedestrian usage) should be included in finding routes - default falseCUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                        example: true
                        type: boolean
                      restrictions:
                        description: Describe restrictions to be applied to edges on the routing. any edges that do not match these restrictions are not traversed.
                        properties:
                          axleload:
                            description: 'Axleload restriction in tons. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                            example: 50
                            format: float
                            type: number
                          hazmat:
                            description: 'Specifies whether to use appropriate routing for delivering hazardous goods and avoiding water protected areas. Default is `false`. CUSTOM_KEYS:{''apiDefault'':false,''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                            type: boolean
                          height:
                            description: 'Height restriction in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                            example: 4.2
                            format: float
                            type: number
                          length:
                            description: 'Length restriction in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                            example: 8.4
                            format: float
                            type: number
                          maximum_incline:
                            description: 'Specifies the maximum incline as a percentage. `3`, `6` (default), `10`, `15.CUSTOM_KEYS:{''apiDefault'':6,''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                            example: 3
                            format: int32
                            type: integer
                          maximum_sloped_kerb:
                            description: 'Specifies the maximum height of the sloped curb in metres. Values are `0.03`, `0.06` (default), `0.1`.CUSTOM_KEYS:{''apiDefault'':0.6,''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                            example: 0.03
                            format: float
                            type: number
                          minimum_width:
                            description: 'Specifies the minimum width of the footway in metres.CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                            example: 2.5
                            format: float
                            type: number
                          smoothness_type:
                            description: 'Specifies the minimum smoothness of the route. Default is `good`.CUSTOM_KEYS:{''apiDefault'':''good'',''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                            enum:
                              - bad
                              - excellent
                              - good
                              - horrible
                              - impassable
                              - intermediate
                              - very_bad
                              - very_horrible
                            example: best
                            type: string
                          surface_type:
                            description: 'Specifies the minimum surface type. Default is `sett`. CUSTOM_KEYS:{''apiDefault'':''sett'',''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                            example: asphalt
                            type: string
                          track_type:
                            description: 'Specifies the minimum grade of the route. Default is `grade1`. CUSTOM_KEYS:{''apiDefault'':''grade1'',''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                            example: grade2
                            type: string
                          weight:
                            description: 'Weight restriction in tons. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                            example: 40
                            format: float
                            type: number
                          width:
                            description: 'Width restriction in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                            example: 5.6
                            format: float
                            type: number
                        title: Restrictions
                        type: object
                      surface_quality_known:
                        description: 'Specifies whether to enforce that only ways with known information on surface quality be taken into account - default falseCUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                        example: true
                        type: boolean
                      weightings:
                        description: Describe additional weightings to be applied to edges on the routing.
                        properties:
                          csvColumn:
                            type: string
                          csv_column:
                            description: Specifies the csv column name
                            type: string
                          csv_factor:
                            description: Specifies the factor of csv-column (range 0 to 1)
                            format: float
                            type: number
                          green:
                            description: |-
                              Specifies the Green factor for `foot-*` profiles.

                              factor: Multiplication factor range from 0 to 1. 0 is the green routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer ways through green areas over a shorter route. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['foot-*']}}
                            example: 0.4
                            format: float
                            type: number
                          quiet:
                            description: |-
                              Specifies the Quiet factor for foot-* profiles.

                              factor: Multiplication factor range from 0 to 1. 0 is the quiet routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer quiet ways over a shorter route. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['foot-*']}}
                            example: 0.8
                            format: float
                            type: number
                          shadow:
                            description: |-
                              Specifies the shadow factor for `foot-*` profiles.

                              factor: Multiplication factor range from 0 to 1. 0 is the shadow routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer ways through shadow areas over a shorter route. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['foot-*']}}
                            example: 0.4
                            format: float
                            type: number
                          steepness_difficulty:
                            description: |-
                              Specifies the fitness level for `cycling-*` profiles.

                               level: 0 = Novice, 1 = Moderate, 2 = Amateur, 3 = Pro. The prefered gradient increases with level. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['cycling-*']}}
                            example: 2
                            format: int32
                            type: integer
                        title: Profile Weightings
                        type: object
                    title: Profile Parameters
                    type: object
                  round_trip:
                    description: Options to be applied on round trip routes.
                    example:
                      length: 10000
                      points: 5
                    properties:
                      length:
                        description: 'The target length of the route in `m` (note that this is a preferred value, but results may be different).'
                        example: 10000
                        format: float
                        type: number
                      points:
                        description: The number of points to use on the route. Larger values create more circular routes.
                        example: 5
                        format: int32
                        type: integer
                      seed:
                        description: A seed to use for adding randomisation to the overall direction of the generated route
                        example: 1
                        format: int64
                        type: integer
                    title: Round Trip Route Options
                    type: object
                  vehicle_type:
                    description: '(for profile=driving-hgv only): hgv,bus,agricultural,delivery,forestry and goods. It is needed for vehicle restrictions to work. CUSTOM_KEYS:{''apiDefault'':''hgv'',''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                    enum:
                      - agricultural
                      - bus
                      - delivery
                      - forestry
                      - goods
                      - hgv
                      - unknown
                    type: string
                title: Route Options
                type: object
              - description: The JSON body request sent to the routing service which defines options and parameters regarding the route to generate.
                properties:
                  alternative_routes:
                    description: 'Specifies whether alternative routes are computed, and parameters for the algorithm determining suitable alternatives.'
                    example:
                      target_count: 2
                      weight_factor: 1.6
                    properties:
                      share_factor:
                        description: Maximum fraction of the route that alternatives may share with the optimal route. The default value of 0.6 means alternatives can share up to 60% of path segments with the optimal route.
                        example: 0.6
                        format: double
                        type: number
                      target_count:
                        description: Target number of alternative routes to compute. Service returns up to this number of routes that fulfill the share-factor and weight-factor constraints.
                        example: 2
                        format: int32
                        type: integer
                      weight_factor:
                        description: Maximum factor by which route weight may diverge from the optimal route. The default value of 1.4 means alternatives can be up to 1.4 times longer (costly) than the optimal route.
                        example: 1.4
                        format: double
                        type: number
                    title: Alternative Routes
                    type: object
                  attributes:
                    description: List of route attributes
                    example:
                      - avgspeed
                      - percentage
                    items:
                      enum:
                        - avgspeed
                        - detourfactor
                        - percentage
                      type: string
                    type: array
                  bearings:
                    description: |-
                      Specifies a list of pairs (bearings and deviations) to filter the segments of the road network a waypoint can snap to. For example `bearings=[[45,10],[120,20]]`. 
                      Each pair is a comma-separated list that can consist of one or two float values, where the first value is the bearing and the second one is the allowed deviation from the bearing. The bearing can take values between `0` and `360` clockwise from true north. If the deviation is not set, then the default value of `100` degrees is used. The number of pairs must correspond to the number of waypoints.
                      The number of bearings corresponds to the length of waypoints-1 or waypoints. If the bearing information for the last waypoint is given, then this will control the sector from which the destination waypoint may be reached. You can skip a bearing for a certain waypoint by passing an empty value for an array, e.g. `[30,20],[],[40,20]`. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':'cycling-*'}}
                    example:
                      - - 30
                        - 20
                      - []
                      - - 40
                        - 20
                    items:
                      items:
                        format: double
                        type: number
                      type: array
                    type: array
                  continue_straight:
                    description: 'Forces the route to keep going straight at waypoints restricting uturns there even if it would be faster.CUSTOM_KEYS:{''apiDefault'':''false''}'
                    example: false
                    type: boolean
                  coordinates:
                    description: 'The waypoints to use for the route as an array of `longitude/latitude` pairs in WGS 84 (EPSG:4326)'
                    example:
                      - - 8.681495
                        - 49.41461
                      - - 8.686507
                        - 49.41943
                      - - 8.687872
                        - 49.420318
                    items:
                      items:
                        format: double
                        type: number
                      type: array
                    type: array
                  elevation:
                    description: Specifies whether to return elevation values for points. Please note that elevation also gets encoded for json response encoded polyline.
                    example: false
                    type: boolean
                  extra_info:
                    description: The extra info items to include in the response
                    example:
                      - waytype
                      - surface
                    items:
                      enum:
                        - countryinfo
                        - csv
                        - green
                        - noise
                        - osmid
                        - roadaccessrestrictions
                        - shadow
                        - steepness
                        - suitability
                        - surface
                        - tollways
                        - traildifficulty
                        - waycategory
                        - waytype
                      type: string
                    type: array
                  geometry:
                    description: 'Specifies whether to return geometry. CUSTOM_KEYS:{''apiDefault'':true, ''validWhen'':{''ref'':''format'',''value'':[''json'']}}'
                    example: true
                    type: boolean
                  geometry_simplify:
                    description: 'Specifies whether to simplify the geometry. Simplify geometry cannot be applied to routes with more than **one segment** and when `extra_info` is required.CUSTOM_KEYS:{''apiDefault'':false}'
                    example: false
                    type: boolean
                  id:
                    description: Arbitrary identification string of the request reflected in the meta information.
                    example: centrality_request
                    type: string
                  instructions:
                    description: 'Specifies whether to return instructions. CUSTOM_KEYS:{''apiDefault'':true}'
                    example: true
                    type: boolean
                  instructions_format:
                    description: 'Select html for more verbose instructions. CUSTOM_KEYS:{''apiDefault'':''text''}'
                    enum:
                      - html
                      - text
                    example: text
                    type: string
                  language:
                    description: 'Language for the route instructions. CUSTOM_KEYS:{''apiDefault'':''en''}'
                    enum:
                      - cs
                      - cs-cz
                      - de
                      - de-de
                      - en
                      - en-us
                      - eo
                      - eo-eo
                      - es
                      - es-es
                      - fr
                      - fr-fr
                      - gr
                      - gr-gr
                      - he
                      - he-il
                      - hu
                      - hu-hu
                      - id
                      - id-id
                      - it
                      - it-it
                      - ja
                      - ja-jp
                      - ne
                      - ne-np
                      - nl
                      - nl-nl
                      - pl
                      - pl-pl
                      - pt
                      - pt-pt
                      - ro
                      - ro-ro
                      - ru
                      - ru-ru
                      - tr
                      - tr-tr
                      - zh
                      - zh-cn
                    example: en
                    type: string
                  maneuvers:
                    description: 'Specifies whether the maneuver object is included into the step object or not. CUSTOM_KEYS:{''apiDefault'':false}'
                    example: false
                    type: boolean
                  maximum_speed:
                    description: 'The maximum speed specified by user.CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-*'']}}'
                    example: 90
                    format: double
                    type: number
                  options:
                    description: 'For advanced options formatted as json object. For structure refer to the [these examples](https://GIScience.github.io/openrouteservice/documentation/routing-options/Examples.html).'
                    example:
                      avoid_borders: controlled
                    properties:
                      avoid_borders:
                        description: '`all` for no border crossing. `controlled` to cross open borders but avoid controlled ones. Only for `driving-*` profiles. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-*'']}}'
                        enum:
                          - all
                          - controlled
                          - none
                        example: controlled
                        type: string
                      avoid_countries:
                        description: 'List of countries to exclude from matrix with `driving-*` profiles. Can be used together with `''avoid_borders'': ''controlled''`. `[ 11, 193 ]` would exclude Austria and Switzerland. List of countries and application examples can be found [here](https://GIScience.github.io/openrouteservice/documentation/routing-options/Country-List.html). Also, ISO standard country codes cna be used in place of the numerical ids, for example, DE or DEU for Germany. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-*'']}}'
                        example:
                          - 11
                          - 193
                        items:
                          type: string
                        type: array
                      avoid_features:
                        description: 'List of features to avoid. CUSTOM_KEYS:{''itemRestrictions'':{''ref'':''profile'', ''itemsWhen'':{''driving-*'':[''highways'',''tollways'',''ferries''],''cycling-*'':[''ferries'',''steps'',''fords''],''foot-*'':[''ferries'',''fords'',''steps''],''wheelchair'':[''ferries'',''steps'']}}}'
                        example:
                          - highways
                        items:
                          enum:
                            - ferries
                            - fords
                            - highways
                            - steps
                            - tollways
                          type: string
                        type: array
                      avoid_polygons:
                        additionalProperties:
                          type: object
                        description: Comprises areas to be avoided for the route. Formatted in GeoJSON as either a Polygon or Multipolygon object.
                        type: object
                      profile_params:
                        description: ' Specifies additional matrix parameters.CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''valueNot'':[''driving-car'']}}'
                        properties:
                          allow_unsuitable:
                            description: 'Specifies if ways that might not be suitable (e.g. unknown pedestrian usage) should be included in finding routes - default falseCUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                            example: true
                            type: boolean
                          restrictions:
                            description: Describe restrictions to be applied to edges on the routing. any edges that do not match these restrictions are not traversed.
                            properties:
                              axleload:
                                description: 'Axleload restriction in tons. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                                example: 50
                                format: float
                                type: number
                              hazmat:
                                description: 'Specifies whether to use appropriate routing for delivering hazardous goods and avoiding water protected areas. Default is `false`. CUSTOM_KEYS:{''apiDefault'':false,''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                                type: boolean
                              height:
                                description: 'Height restriction in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                                example: 4.2
                                format: float
                                type: number
                              length:
                                description: 'Length restriction in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                                example: 8.4
                                format: float
                                type: number
                              maximum_incline:
                                description: 'Specifies the maximum incline as a percentage. `3`, `6` (default), `10`, `15.CUSTOM_KEYS:{''apiDefault'':6,''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                example: 3
                                format: int32
                                type: integer
                              maximum_sloped_kerb:
                                description: 'Specifies the maximum height of the sloped curb in metres. Values are `0.03`, `0.06` (default), `0.1`.CUSTOM_KEYS:{''apiDefault'':0.6,''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                example: 0.03
                                format: float
                                type: number
                              minimum_width:
                                description: 'Specifies the minimum width of the footway in metres.CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                example: 2.5
                                format: float
                                type: number
                              smoothness_type:
                                description: 'Specifies the minimum smoothness of the route. Default is `good`.CUSTOM_KEYS:{''apiDefault'':''good'',''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                enum:
                                  - bad
                                  - excellent
                                  - good
                                  - horrible
                                  - impassable
                                  - intermediate
                                  - very_bad
                                  - very_horrible
                                example: best
                                type: string
                              surface_type:
                                description: 'Specifies the minimum surface type. Default is `sett`. CUSTOM_KEYS:{''apiDefault'':''sett'',''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                example: asphalt
                                type: string
                              track_type:
                                description: 'Specifies the minimum grade of the route. Default is `grade1`. CUSTOM_KEYS:{''apiDefault'':''grade1'',''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                example: grade2
                                type: string
                              weight:
                                description: 'Weight restriction in tons. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                                example: 40
                                format: float
                                type: number
                              width:
                                description: 'Width restriction in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                                example: 5.6
                                format: float
                                type: number
                            title: Restrictions
                            type: object
                          surface_quality_known:
                            description: 'Specifies whether to enforce that only ways with known information on surface quality be taken into account - default falseCUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                            example: true
                            type: boolean
                          weightings:
                            description: Describe additional weightings to be applied to edges on the routing.
                            properties:
                              csvColumn:
                                type: string
                              csv_column:
                                description: Specifies the csv column name
                                type: string
                              csv_factor:
                                description: Specifies the factor of csv-column (range 0 to 1)
                                format: float
                                type: number
                              green:
                                description: |-
                                  Specifies the Green factor for `foot-*` profiles.

                                  factor: Multiplication factor range from 0 to 1. 0 is the green routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer ways through green areas over a shorter route. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['foot-*']}}
                                example: 0.4
                                format: float
                                type: number
                              quiet:
                                description: |-
                                  Specifies the Quiet factor for foot-* profiles.

                                  factor: Multiplication factor range from 0 to 1. 0 is the quiet routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer quiet ways over a shorter route. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['foot-*']}}
                                example: 0.8
                                format: float
                                type: number
                              shadow:
                                description: |-
                                  Specifies the shadow factor for `foot-*` profiles.

                                  factor: Multiplication factor range from 0 to 1. 0 is the shadow routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer ways through shadow areas over a shorter route. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['foot-*']}}
                                example: 0.4
                                format: float
                                type: number
                              steepness_difficulty:
                                description: |-
                                  Specifies the fitness level for `cycling-*` profiles.

                                   level: 0 = Novice, 1 = Moderate, 2 = Amateur, 3 = Pro. The prefered gradient increases with level. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['cycling-*']}}
                                example: 2
                                format: int32
                                type: integer
                            title: Profile Weightings
                            type: object
                        title: Profile Parameters
                        type: object
                      round_trip:
                        description: Options to be applied on round trip routes.
                        example:
                          length: 10000
                          points: 5
                        properties:
                          length:
                            description: 'The target length of the route in `m` (note that this is a preferred value, but results may be different).'
                            example: 10000
                            format: float
                            type: number
                          points:
                            description: The number of points to use on the route. Larger values create more circular routes.
                            example: 5
                            format: int32
                            type: integer
                          seed:
                            description: A seed to use for adding randomisation to the overall direction of the generated route
                            example: 1
                            format: int64
                            type: integer
                        title: Round Trip Route Options
                        type: object
                      vehicle_type:
                        description: '(for profile=driving-hgv only): hgv,bus,agricultural,delivery,forestry and goods. It is needed for vehicle restrictions to work. CUSTOM_KEYS:{''apiDefault'':''hgv'',''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                        enum:
                          - agricultural
                          - bus
                          - delivery
                          - forestry
                          - goods
                          - hgv
                          - unknown
                        type: string
                    title: Route Options
                    type: object
                  preference:
                    description: 'Specifies the route preference. CUSTOM_KEYS:{''apiDefault'':''recommended''}'
                    enum:
                      - fastest
                      - recommended
                      - shortest
                    example: recommended
                    type: string
                  radiuses:
                    description: 'A list of maximum distances (measured in metres) that limit the search of nearby road segments to every given waypoint. The values must be greater than 0, the value of -1 specifies using the maximum possible search radius. The number of radiuses correspond to the number of waypoints. If only a single value is given, it will be applied to all waypoints.'
                    example:
                      - 200
                      - -1
                      - 30
                    items:
                      format: double
                      type: number
                    type: array
                  roundabout_exits:
                    description: 'Provides bearings of the entrance and all passed roundabout exits. Adds the `exit_bearings` array to the step object in the response. CUSTOM_KEYS:{''apiDefault'':false}'
                    example: false
                    type: boolean
                  skip_segments:
                    description: Specifies the segments that should be skipped in the route calculation. A segment is the connection between two given coordinates and the counting starts with 1 for the connection between the first and second coordinate.
                    example:
                      - 2
                      - 4
                    items:
                      format: int32
                      type: integer
                    type: array
                  suppress_warnings:
                    description: Suppress warning messages in the response
                    example: false
                    type: boolean
                  units:
                    description: 'Specifies the distance unit. CUSTOM_KEYS:{''apiDefault'':''m''}'
                    enum:
                      - km
                      - m
                      - mi
                    example: m
                    type: string
                required:
                  - coordinates
                title: Directions Service
                type: object
            description: The JSON body request sent to the routing service which defines options and parameters regarding the route to generate.
            title: Directions Service
      produces:
        - application/geo+json
        - application/geo+json;charset=UTF-8
      responses:
        '200':
          description: 'Standard response for successfully processed requests. Returns GeoJSON. The decoded values of the extra information can be found [here](https://GIScience.github.io/openrouteservice/documentation/extra-info/Extra-Info.html).'
          schema:
            properties:
              bbox:
                description: Bounding box that covers all returned routes
                example:
                  - 49.414057
                  - 8.680894
                  - 49.420514
                  - 8.690123
                items:
                  format: double
                  type: number
                type: array
              features:
                items:
                  type: object
                type: array
              metadata:
                description: Information about the request
                properties:
                  attribution:
                    description: Copyright and attribution information
                    example: openrouteservice.org | OpenStreetMap contributors
                    type: string
                  engine:
                    description: Information about the routing service
                    properties:
                      build_date:
                        description: The date that the service was last updated
                        example: '2019-02-07T14:28:11Z'
                        type: string
                      graph_date:
                        description: The date that the graph data was last updated
                        example: '2019-02-07T14:28:11Z'
                        type: string
                      version:
                        description: The backend version of the openrouteservice that was queried
                        example: 5
                        type: string
                    title: EngineInfo
                    type: object
                  id:
                    description: ID of the request (as passed in by the query)
                    example: request123
                    type: string
                  osm_file_md5_hash:
                    description: The MD5 hash of the OSM planet file that was used for generating graphs
                    example: c0327ba6
                    type: string
                  query:
                    allOf:
                      - description: Advanced options for routing
                        properties:
                          avoid_borders:
                            description: '`all` for no border crossing. `controlled` to cross open borders but avoid controlled ones. Only for `driving-*` profiles. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-*'']}}'
                            enum:
                              - all
                              - controlled
                              - none
                            example: controlled
                            type: string
                          avoid_countries:
                            description: 'List of countries to exclude from matrix with `driving-*` profiles. Can be used together with `''avoid_borders'': ''controlled''`. `[ 11, 193 ]` would exclude Austria and Switzerland. List of countries and application examples can be found [here](https://GIScience.github.io/openrouteservice/documentation/routing-options/Country-List.html). Also, ISO standard country codes cna be used in place of the numerical ids, for example, DE or DEU for Germany. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-*'']}}'
                            example:
                              - 11
                              - 193
                            items:
                              type: string
                            type: array
                          avoid_features:
                            description: 'List of features to avoid. CUSTOM_KEYS:{''itemRestrictions'':{''ref'':''profile'', ''itemsWhen'':{''driving-*'':[''highways'',''tollways'',''ferries''],''cycling-*'':[''ferries'',''steps'',''fords''],''foot-*'':[''ferries'',''fords'',''steps''],''wheelchair'':[''ferries'',''steps'']}}}'
                            example:
                              - highways
                            items:
                              enum:
                                - ferries
                                - fords
                                - highways
                                - steps
                                - tollways
                              type: string
                            type: array
                          avoid_polygons:
                            additionalProperties:
                              type: object
                            description: Comprises areas to be avoided for the route. Formatted in GeoJSON as either a Polygon or Multipolygon object.
                            type: object
                          profile_params:
                            description: ' Specifies additional matrix parameters.CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''valueNot'':[''driving-car'']}}'
                            properties:
                              allow_unsuitable:
                                description: 'Specifies if ways that might not be suitable (e.g. unknown pedestrian usage) should be included in finding routes - default falseCUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                example: true
                                type: boolean
                              restrictions:
                                description: Describe restrictions to be applied to edges on the routing. any edges that do not match these restrictions are not traversed.
                                properties:
                                  axleload:
                                    description: 'Axleload restriction in tons. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                                    example: 50
                                    format: float
                                    type: number
                                  hazmat:
                                    description: 'Specifies whether to use appropriate routing for delivering hazardous goods and avoiding water protected areas. Default is `false`. CUSTOM_KEYS:{''apiDefault'':false,''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                                    type: boolean
                                  height:
                                    description: 'Height restriction in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                                    example: 4.2
                                    format: float
                                    type: number
                                  length:
                                    description: 'Length restriction in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                                    example: 8.4
                                    format: float
                                    type: number
                                  maximum_incline:
                                    description: 'Specifies the maximum incline as a percentage. `3`, `6` (default), `10`, `15.CUSTOM_KEYS:{''apiDefault'':6,''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                    example: 3
                                    format: int32
                                    type: integer
                                  maximum_sloped_kerb:
                                    description: 'Specifies the maximum height of the sloped curb in metres. Values are `0.03`, `0.06` (default), `0.1`.CUSTOM_KEYS:{''apiDefault'':0.6,''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                    example: 0.03
                                    format: float
                                    type: number
                                  minimum_width:
                                    description: 'Specifies the minimum width of the footway in metres.CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                    example: 2.5
                                    format: float
                                    type: number
                                  smoothness_type:
                                    description: 'Specifies the minimum smoothness of the route. Default is `good`.CUSTOM_KEYS:{''apiDefault'':''good'',''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                    enum:
                                      - bad
                                      - excellent
                                      - good
                                      - horrible
                                      - impassable
                                      - intermediate
                                      - very_bad
                                      - very_horrible
                                    example: best
                                    type: string
                                  surface_type:
                                    description: 'Specifies the minimum surface type. Default is `sett`. CUSTOM_KEYS:{''apiDefault'':''sett'',''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                    example: asphalt
                                    type: string
                                  track_type:
                                    description: 'Specifies the minimum grade of the route. Default is `grade1`. CUSTOM_KEYS:{''apiDefault'':''grade1'',''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                    example: grade2
                                    type: string
                                  weight:
                                    description: 'Weight restriction in tons. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                                    example: 40
                                    format: float
                                    type: number
                                  width:
                                    description: 'Width restriction in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                                    example: 5.6
                                    format: float
                                    type: number
                                title: Restrictions
                                type: object
                              surface_quality_known:
                                description: 'Specifies whether to enforce that only ways with known information on surface quality be taken into account - default falseCUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                example: true
                                type: boolean
                              weightings:
                                description: Describe additional weightings to be applied to edges on the routing.
                                properties:
                                  csvColumn:
                                    type: string
                                  csv_column:
                                    description: Specifies the csv column name
                                    type: string
                                  csv_factor:
                                    description: Specifies the factor of csv-column (range 0 to 1)
                                    format: float
                                    type: number
                                  green:
                                    description: |-
                                      Specifies the Green factor for `foot-*` profiles.

                                      factor: Multiplication factor range from 0 to 1. 0 is the green routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer ways through green areas over a shorter route. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['foot-*']}}
                                    example: 0.4
                                    format: float
                                    type: number
                                  quiet:
                                    description: |-
                                      Specifies the Quiet factor for foot-* profiles.

                                      factor: Multiplication factor range from 0 to 1. 0 is the quiet routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer quiet ways over a shorter route. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['foot-*']}}
                                    example: 0.8
                                    format: float
                                    type: number
                                  shadow:
                                    description: |-
                                      Specifies the shadow factor for `foot-*` profiles.

                                      factor: Multiplication factor range from 0 to 1. 0 is the shadow routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer ways through shadow areas over a shorter route. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['foot-*']}}
                                    example: 0.4
                                    format: float
                                    type: number
                                  steepness_difficulty:
                                    description: |-
                                      Specifies the fitness level for `cycling-*` profiles.

                                       level: 0 = Novice, 1 = Moderate, 2 = Amateur, 3 = Pro. The prefered gradient increases with level. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['cycling-*']}}
                                    example: 2
                                    format: int32
                                    type: integer
                                title: Profile Weightings
                                type: object
                            title: Profile Parameters
                            type: object
                          round_trip:
                            description: Options to be applied on round trip routes.
                            example:
                              length: 10000
                              points: 5
                            properties:
                              length:
                                description: 'The target length of the route in `m` (note that this is a preferred value, but results may be different).'
                                example: 10000
                                format: float
                                type: number
                              points:
                                description: The number of points to use on the route. Larger values create more circular routes.
                                example: 5
                                format: int32
                                type: integer
                              seed:
                                description: A seed to use for adding randomisation to the overall direction of the generated route
                                example: 1
                                format: int64
                                type: integer
                            title: Round Trip Route Options
                            type: object
                          vehicle_type:
                            description: '(for profile=driving-hgv only): hgv,bus,agricultural,delivery,forestry and goods. It is needed for vehicle restrictions to work. CUSTOM_KEYS:{''apiDefault'':''hgv'',''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                            enum:
                              - agricultural
                              - bus
                              - delivery
                              - forestry
                              - goods
                              - hgv
                              - unknown
                            type: string
                        title: Route Options
                        type: object
                      - description: The JSON body request sent to the routing service which defines options and parameters regarding the route to generate.
                        properties:
                          alternative_routes:
                            description: 'Specifies whether alternative routes are computed, and parameters for the algorithm determining suitable alternatives.'
                            example:
                              target_count: 2
                              weight_factor: 1.6
                            properties:
                              share_factor:
                                description: Maximum fraction of the route that alternatives may share with the optimal route. The default value of 0.6 means alternatives can share up to 60% of path segments with the optimal route.
                                example: 0.6
                                format: double
                                type: number
                              target_count:
                                description: Target number of alternative routes to compute. Service returns up to this number of routes that fulfill the share-factor and weight-factor constraints.
                                example: 2
                                format: int32
                                type: integer
                              weight_factor:
                                description: Maximum factor by which route weight may diverge from the optimal route. The default value of 1.4 means alternatives can be up to 1.4 times longer (costly) than the optimal route.
                                example: 1.4
                                format: double
                                type: number
                            title: Alternative Routes
                            type: object
                          attributes:
                            description: List of route attributes
                            example:
                              - avgspeed
                              - percentage
                            items:
                              enum:
                                - avgspeed
                                - detourfactor
                                - percentage
                              type: string
                            type: array
                          bearings:
                            description: |-
                              Specifies a list of pairs (bearings and deviations) to filter the segments of the road network a waypoint can snap to. For example `bearings=[[45,10],[120,20]]`. 
                              Each pair is a comma-separated list that can consist of one or two float values, where the first value is the bearing and the second one is the allowed deviation from the bearing. The bearing can take values between `0` and `360` clockwise from true north. If the deviation is not set, then the default value of `100` degrees is used. The number of pairs must correspond to the number of waypoints.
                              The number of bearings corresponds to the length of waypoints-1 or waypoints. If the bearing information for the last waypoint is given, then this will control the sector from which the destination waypoint may be reached. You can skip a bearing for a certain waypoint by passing an empty value for an array, e.g. `[30,20],[],[40,20]`. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':'cycling-*'}}
                            example:
                              - - 30
                                - 20
                              - []
                              - - 40
                                - 20
                            items:
                              items:
                                format: double
                                type: number
                              type: array
                            type: array
                          continue_straight:
                            description: 'Forces the route to keep going straight at waypoints restricting uturns there even if it would be faster.CUSTOM_KEYS:{''apiDefault'':''false''}'
                            example: false
                            type: boolean
                          coordinates:
                            description: 'The waypoints to use for the route as an array of `longitude/latitude` pairs in WGS 84 (EPSG:4326)'
                            example:
                              - - 8.681495
                                - 49.41461
                              - - 8.686507
                                - 49.41943
                              - - 8.687872
                                - 49.420318
                            items:
                              items:
                                format: double
                                type: number
                              type: array
                            type: array
                          elevation:
                            description: Specifies whether to return elevation values for points. Please note that elevation also gets encoded for json response encoded polyline.
                            example: false
                            type: boolean
                          extra_info:
                            description: The extra info items to include in the response
                            example:
                              - waytype
                              - surface
                            items:
                              enum:
                                - countryinfo
                                - csv
                                - green
                                - noise
                                - osmid
                                - roadaccessrestrictions
                                - shadow
                                - steepness
                                - suitability
                                - surface
                                - tollways
                                - traildifficulty
                                - waycategory
                                - waytype
                              type: string
                            type: array
                          geometry:
                            description: 'Specifies whether to return geometry. CUSTOM_KEYS:{''apiDefault'':true, ''validWhen'':{''ref'':''format'',''value'':[''json'']}}'
                            example: true
                            type: boolean
                          geometry_simplify:
                            description: 'Specifies whether to simplify the geometry. Simplify geometry cannot be applied to routes with more than **one segment** and when `extra_info` is required.CUSTOM_KEYS:{''apiDefault'':false}'
                            example: false
                            type: boolean
                          id:
                            description: Arbitrary identification string of the request reflected in the meta information.
                            example: centrality_request
                            type: string
                          instructions:
                            description: 'Specifies whether to return instructions. CUSTOM_KEYS:{''apiDefault'':true}'
                            example: true
                            type: boolean
                          instructions_format:
                            description: 'Select html for more verbose instructions. CUSTOM_KEYS:{''apiDefault'':''text''}'
                            enum:
                              - html
                              - text
                            example: text
                            type: string
                          language:
                            description: 'Language for the route instructions. CUSTOM_KEYS:{''apiDefault'':''en''}'
                            enum:
                              - cs
                              - cs-cz
                              - de
                              - de-de
                              - en
                              - en-us
                              - eo
                              - eo-eo
                              - es
                              - es-es
                              - fr
                              - fr-fr
                              - gr
                              - gr-gr
                              - he
                              - he-il
                              - hu
                              - hu-hu
                              - id
                              - id-id
                              - it
                              - it-it
                              - ja
                              - ja-jp
                              - ne
                              - ne-np
                              - nl
                              - nl-nl
                              - pl
                              - pl-pl
                              - pt
                              - pt-pt
                              - ro
                              - ro-ro
                              - ru
                              - ru-ru
                              - tr
                              - tr-tr
                              - zh
                              - zh-cn
                            example: en
                            type: string
                          maneuvers:
                            description: 'Specifies whether the maneuver object is included into the step object or not. CUSTOM_KEYS:{''apiDefault'':false}'
                            example: false
                            type: boolean
                          maximum_speed:
                            description: 'The maximum speed specified by user.CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-*'']}}'
                            example: 90
                            format: double
                            type: number
                          options:
                            description: 'For advanced options formatted as json object. For structure refer to the [these examples](https://GIScience.github.io/openrouteservice/documentation/routing-options/Examples.html).'
                            example:
                              avoid_borders: controlled
                            properties:
                              avoid_borders:
                                description: '`all` for no border crossing. `controlled` to cross open borders but avoid controlled ones. Only for `driving-*` profiles. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-*'']}}'
                                enum:
                                  - all
                                  - controlled
                                  - none
                                example: controlled
                                type: string
                              avoid_countries:
                                description: 'List of countries to exclude from matrix with `driving-*` profiles. Can be used together with `''avoid_borders'': ''controlled''`. `[ 11, 193 ]` would exclude Austria and Switzerland. List of countries and application examples can be found [here](https://GIScience.github.io/openrouteservice/documentation/routing-options/Country-List.html). Also, ISO standard country codes cna be used in place of the numerical ids, for example, DE or DEU for Germany. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-*'']}}'
                                example:
                                  - 11
                                  - 193
                                items:
                                  type: string
                                type: array
                              avoid_features:
                                description: 'List of features to avoid. CUSTOM_KEYS:{''itemRestrictions'':{''ref'':''profile'', ''itemsWhen'':{''driving-*'':[''highways'',''tollways'',''ferries''],''cycling-*'':[''ferries'',''steps'',''fords''],''foot-*'':[''ferries'',''fords'',''steps''],''wheelchair'':[''ferries'',''steps'']}}}'
                                example:
                                  - highways
                                items:
                                  enum:
                                    - ferries
                                    - fords
                                    - highways
                                    - steps
                                    - tollways
                                  type: string
                                type: array
                              avoid_polygons:
                                additionalProperties:
                                  type: object
                                description: Comprises areas to be avoided for the route. Formatted in GeoJSON as either a Polygon or Multipolygon object.
                                type: object
                              profile_params:
                                description: ' Specifies additional matrix parameters.CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''valueNot'':[''driving-car'']}}'
                                properties:
                                  allow_unsuitable:
                                    description: 'Specifies if ways that might not be suitable (e.g. unknown pedestrian usage) should be included in finding routes - default falseCUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                    example: true
                                    type: boolean
                                  restrictions:
                                    description: Describe restrictions to be applied to edges on the routing. any edges that do not match these restrictions are not traversed.
                                    properties:
                                      axleload:
                                        description: 'Axleload restriction in tons. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                                        example: 50
                                        format: float
                                        type: number
                                      hazmat:
                                        description: 'Specifies whether to use appropriate routing for delivering hazardous goods and avoiding water protected areas. Default is `false`. CUSTOM_KEYS:{''apiDefault'':false,''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                                        type: boolean
                                      height:
                                        description: 'Height restriction in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                                        example: 4.2
                                        format: float
                                        type: number
                                      length:
                                        description: 'Length restriction in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                                        example: 8.4
                                        format: float
                                        type: number
                                      maximum_incline:
                                        description: 'Specifies the maximum incline as a percentage. `3`, `6` (default), `10`, `15.CUSTOM_KEYS:{''apiDefault'':6,''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                        example: 3
                                        format: int32
                                        type: integer
                                      maximum_sloped_kerb:
                                        description: 'Specifies the maximum height of the sloped curb in metres. Values are `0.03`, `0.06` (default), `0.1`.CUSTOM_KEYS:{''apiDefault'':0.6,''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                        example: 0.03
                                        format: float
                                        type: number
                                      minimum_width:
                                        description: 'Specifies the minimum width of the footway in metres.CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                        example: 2.5
                                        format: float
                                        type: number
                                      smoothness_type:
                                        description: 'Specifies the minimum smoothness of the route. Default is `good`.CUSTOM_KEYS:{''apiDefault'':''good'',''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                        enum:
                                          - bad
                                          - excellent
                                          - good
                                          - horrible
                                          - impassable
                                          - intermediate
                                          - very_bad
                                          - very_horrible
                                        example: best
                                        type: string
                                      surface_type:
                                        description: 'Specifies the minimum surface type. Default is `sett`. CUSTOM_KEYS:{''apiDefault'':''sett'',''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                        example: asphalt
                                        type: string
                                      track_type:
                                        description: 'Specifies the minimum grade of the route. Default is `grade1`. CUSTOM_KEYS:{''apiDefault'':''grade1'',''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                        example: grade2
                                        type: string
                                      weight:
                                        description: 'Weight restriction in tons. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                                        example: 40
                                        format: float
                                        type: number
                                      width:
                                        description: 'Width restriction in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                                        example: 5.6
                                        format: float
                                        type: number
                                    title: Restrictions
                                    type: object
                                  surface_quality_known:
                                    description: 'Specifies whether to enforce that only ways with known information on surface quality be taken into account - default falseCUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                    example: true
                                    type: boolean
                                  weightings:
                                    description: Describe additional weightings to be applied to edges on the routing.
                                    properties:
                                      csvColumn:
                                        type: string
                                      csv_column:
                                        description: Specifies the csv column name
                                        type: string
                                      csv_factor:
                                        description: Specifies the factor of csv-column (range 0 to 1)
                                        format: float
                                        type: number
                                      green:
                                        description: |-
                                          Specifies the Green factor for `foot-*` profiles.

                                          factor: Multiplication factor range from 0 to 1. 0 is the green routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer ways through green areas over a shorter route. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['foot-*']}}
                                        example: 0.4
                                        format: float
                                        type: number
                                      quiet:
                                        description: |-
                                          Specifies the Quiet factor for foot-* profiles.

                                          factor: Multiplication factor range from 0 to 1. 0 is the quiet routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer quiet ways over a shorter route. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['foot-*']}}
                                        example: 0.8
                                        format: float
                                        type: number
                                      shadow:
                                        description: |-
                                          Specifies the shadow factor for `foot-*` profiles.

                                          factor: Multiplication factor range from 0 to 1. 0 is the shadow routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer ways through shadow areas over a shorter route. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['foot-*']}}
                                        example: 0.4
                                        format: float
                                        type: number
                                      steepness_difficulty:
                                        description: |-
                                          Specifies the fitness level for `cycling-*` profiles.

                                           level: 0 = Novice, 1 = Moderate, 2 = Amateur, 3 = Pro. The prefered gradient increases with level. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['cycling-*']}}
                                        example: 2
                                        format: int32
                                        type: integer
                                    title: Profile Weightings
                                    type: object
                                title: Profile Parameters
                                type: object
                              round_trip:
                                description: Options to be applied on round trip routes.
                                example:
                                  length: 10000
                                  points: 5
                                properties:
                                  length:
                                    description: 'The target length of the route in `m` (note that this is a preferred value, but results may be different).'
                                    example: 10000
                                    format: float
                                    type: number
                                  points:
                                    description: The number of points to use on the route. Larger values create more circular routes.
                                    example: 5
                                    format: int32
                                    type: integer
                                  seed:
                                    description: A seed to use for adding randomisation to the overall direction of the generated route
                                    example: 1
                                    format: int64
                                    type: integer
                                title: Round Trip Route Options
                                type: object
                              vehicle_type:
                                description: '(for profile=driving-hgv only): hgv,bus,agricultural,delivery,forestry and goods. It is needed for vehicle restrictions to work. CUSTOM_KEYS:{''apiDefault'':''hgv'',''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                                enum:
                                  - agricultural
                                  - bus
                                  - delivery
                                  - forestry
                                  - goods
                                  - hgv
                                  - unknown
                                type: string
                            title: Route Options
                            type: object
                          preference:
                            description: 'Specifies the route preference. CUSTOM_KEYS:{''apiDefault'':''recommended''}'
                            enum:
                              - fastest
                              - recommended
                              - shortest
                            example: recommended
                            type: string
                          radiuses:
                            description: 'A list of maximum distances (measured in metres) that limit the search of nearby road segments to every given waypoint. The values must be greater than 0, the value of -1 specifies using the maximum possible search radius. The number of radiuses correspond to the number of waypoints. If only a single value is given, it will be applied to all waypoints.'
                            example:
                              - 200
                              - -1
                              - 30
                            items:
                              format: double
                              type: number
                            type: array
                          roundabout_exits:
                            description: 'Provides bearings of the entrance and all passed roundabout exits. Adds the `exit_bearings` array to the step object in the response. CUSTOM_KEYS:{''apiDefault'':false}'
                            example: false
                            type: boolean
                          skip_segments:
                            description: Specifies the segments that should be skipped in the route calculation. A segment is the connection between two given coordinates and the counting starts with 1 for the connection between the first and second coordinate.
                            example:
                              - 2
                              - 4
                            items:
                              format: int32
                              type: integer
                            type: array
                          suppress_warnings:
                            description: Suppress warning messages in the response
                            example: false
                            type: boolean
                          units:
                            description: 'Specifies the distance unit. CUSTOM_KEYS:{''apiDefault'':''m''}'
                            enum:
                              - km
                              - m
                              - mi
                            example: m
                            type: string
                        required:
                          - coordinates
                        title: Directions Service
                        type: object
                    description: The information that was used for generating the route
                    title: Directions Service
                  service:
                    description: The service that was requested
                    example: routing
                    type: string
                  system_message:
                    description: System message
                    example: A message string configured in the service
                    type: string
                  timestamp:
                    description: Time that the request was made (UNIX Epoch time)
                    example: 1549549847974
                    format: int64
                    type: integer
                title: RouteResponseInfo
                type: object
              type:
                type: string
            title: GeoJSONRouteResponse
            type: object
        '201':
          description: Created
        '400':
          description: The request is incorrect and therefore can not be processed.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: 'An element could not be found. If possible, a more detailed error code is provided.'
        '405':
          description: 'The specified HTTP method is not supported. For more details, refer to the EndPoint documentation.'
        '413':
          description: 'The request is larger than the server is able to process, the data provided in the request exceeds the capacity limit.'
        '500':
          description: An unexpected error was encountered and a more detailed error code is provided.
        '501':
          description: Indicates that the server does not support the functionality needed to fulfill the request.
        '503':
          description: The server is currently unavailable due to overload or maintenance.
      summary: Directions Service GeoJSON (POST)
      tags:
        - Directions
  '/v2/directions/{profile}/gpx':
    post:
      consumes:
        - application/json
      description: 'Returns a route between two or more locations for a selected profile and its settings as GPX. The schema can be found [here](https://raw.githubusercontent.com/GIScience/openrouteservice-schema/master/gpx/v1/ors-gpx.xsd)'
      operationId: getGPXRouteUsingPOST
      parameters:
        - description: Specifies the route profile.
          enum:
            - cycling-electric
            - cycling-mountain
            - cycling-regular
            - cycling-road
            - driving-car
            - driving-hgv
            - foot-hiking
            - foot-walking
            - wheelchair
          in: path
          name: profile
          required: true
          type: string
          x-example: driving-car
        - description: The request payload
          in: body
          name: request
          required: true
          schema:
            allOf:
              - description: Advanced options for routing
                properties:
                  avoid_borders:
                    description: '`all` for no border crossing. `controlled` to cross open borders but avoid controlled ones. Only for `driving-*` profiles. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-*'']}}'
                    enum:
                      - all
                      - controlled
                      - none
                    example: controlled
                    type: string
                  avoid_countries:
                    description: 'List of countries to exclude from matrix with `driving-*` profiles. Can be used together with `''avoid_borders'': ''controlled''`. `[ 11, 193 ]` would exclude Austria and Switzerland. List of countries and application examples can be found [here](https://GIScience.github.io/openrouteservice/documentation/routing-options/Country-List.html). Also, ISO standard country codes cna be used in place of the numerical ids, for example, DE or DEU for Germany. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-*'']}}'
                    example:
                      - 11
                      - 193
                    items:
                      type: string
                    type: array
                  avoid_features:
                    description: 'List of features to avoid. CUSTOM_KEYS:{''itemRestrictions'':{''ref'':''profile'', ''itemsWhen'':{''driving-*'':[''highways'',''tollways'',''ferries''],''cycling-*'':[''ferries'',''steps'',''fords''],''foot-*'':[''ferries'',''fords'',''steps''],''wheelchair'':[''ferries'',''steps'']}}}'
                    example:
                      - highways
                    items:
                      enum:
                        - ferries
                        - fords
                        - highways
                        - steps
                        - tollways
                      type: string
                    type: array
                  avoid_polygons:
                    additionalProperties:
                      type: object
                    description: Comprises areas to be avoided for the route. Formatted in GeoJSON as either a Polygon or Multipolygon object.
                    type: object
                  profile_params:
                    description: ' Specifies additional matrix parameters.CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''valueNot'':[''driving-car'']}}'
                    properties:
                      allow_unsuitable:
                        description: 'Specifies if ways that might not be suitable (e.g. unknown pedestrian usage) should be included in finding routes - default falseCUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                        example: true
                        type: boolean
                      restrictions:
                        description: Describe restrictions to be applied to edges on the routing. any edges that do not match these restrictions are not traversed.
                        properties:
                          axleload:
                            description: 'Axleload restriction in tons. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                            example: 50
                            format: float
                            type: number
                          hazmat:
                            description: 'Specifies whether to use appropriate routing for delivering hazardous goods and avoiding water protected areas. Default is `false`. CUSTOM_KEYS:{''apiDefault'':false,''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                            type: boolean
                          height:
                            description: 'Height restriction in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                            example: 4.2
                            format: float
                            type: number
                          length:
                            description: 'Length restriction in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                            example: 8.4
                            format: float
                            type: number
                          maximum_incline:
                            description: 'Specifies the maximum incline as a percentage. `3`, `6` (default), `10`, `15.CUSTOM_KEYS:{''apiDefault'':6,''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                            example: 3
                            format: int32
                            type: integer
                          maximum_sloped_kerb:
                            description: 'Specifies the maximum height of the sloped curb in metres. Values are `0.03`, `0.06` (default), `0.1`.CUSTOM_KEYS:{''apiDefault'':0.6,''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                            example: 0.03
                            format: float
                            type: number
                          minimum_width:
                            description: 'Specifies the minimum width of the footway in metres.CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                            example: 2.5
                            format: float
                            type: number
                          smoothness_type:
                            description: 'Specifies the minimum smoothness of the route. Default is `good`.CUSTOM_KEYS:{''apiDefault'':''good'',''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                            enum:
                              - bad
                              - excellent
                              - good
                              - horrible
                              - impassable
                              - intermediate
                              - very_bad
                              - very_horrible
                            example: best
                            type: string
                          surface_type:
                            description: 'Specifies the minimum surface type. Default is `sett`. CUSTOM_KEYS:{''apiDefault'':''sett'',''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                            example: asphalt
                            type: string
                          track_type:
                            description: 'Specifies the minimum grade of the route. Default is `grade1`. CUSTOM_KEYS:{''apiDefault'':''grade1'',''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                            example: grade2
                            type: string
                          weight:
                            description: 'Weight restriction in tons. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                            example: 40
                            format: float
                            type: number
                          width:
                            description: 'Width restriction in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                            example: 5.6
                            format: float
                            type: number
                        title: Restrictions
                        type: object
                      surface_quality_known:
                        description: 'Specifies whether to enforce that only ways with known information on surface quality be taken into account - default falseCUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                        example: true
                        type: boolean
                      weightings:
                        description: Describe additional weightings to be applied to edges on the routing.
                        properties:
                          csvColumn:
                            type: string
                          csv_column:
                            description: Specifies the csv column name
                            type: string
                          csv_factor:
                            description: Specifies the factor of csv-column (range 0 to 1)
                            format: float
                            type: number
                          green:
                            description: |-
                              Specifies the Green factor for `foot-*` profiles.

                              factor: Multiplication factor range from 0 to 1. 0 is the green routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer ways through green areas over a shorter route. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['foot-*']}}
                            example: 0.4
                            format: float
                            type: number
                          quiet:
                            description: |-
                              Specifies the Quiet factor for foot-* profiles.

                              factor: Multiplication factor range from 0 to 1. 0 is the quiet routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer quiet ways over a shorter route. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['foot-*']}}
                            example: 0.8
                            format: float
                            type: number
                          shadow:
                            description: |-
                              Specifies the shadow factor for `foot-*` profiles.

                              factor: Multiplication factor range from 0 to 1. 0 is the shadow routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer ways through shadow areas over a shorter route. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['foot-*']}}
                            example: 0.4
                            format: float
                            type: number
                          steepness_difficulty:
                            description: |-
                              Specifies the fitness level for `cycling-*` profiles.

                               level: 0 = Novice, 1 = Moderate, 2 = Amateur, 3 = Pro. The prefered gradient increases with level. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['cycling-*']}}
                            example: 2
                            format: int32
                            type: integer
                        title: Profile Weightings
                        type: object
                    title: Profile Parameters
                    type: object
                  round_trip:
                    description: Options to be applied on round trip routes.
                    example:
                      length: 10000
                      points: 5
                    properties:
                      length:
                        description: 'The target length of the route in `m` (note that this is a preferred value, but results may be different).'
                        example: 10000
                        format: float
                        type: number
                      points:
                        description: The number of points to use on the route. Larger values create more circular routes.
                        example: 5
                        format: int32
                        type: integer
                      seed:
                        description: A seed to use for adding randomisation to the overall direction of the generated route
                        example: 1
                        format: int64
                        type: integer
                    title: Round Trip Route Options
                    type: object
                  vehicle_type:
                    description: '(for profile=driving-hgv only): hgv,bus,agricultural,delivery,forestry and goods. It is needed for vehicle restrictions to work. CUSTOM_KEYS:{''apiDefault'':''hgv'',''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                    enum:
                      - agricultural
                      - bus
                      - delivery
                      - forestry
                      - goods
                      - hgv
                      - unknown
                    type: string
                title: Route Options
                type: object
              - description: The JSON body request sent to the routing service which defines options and parameters regarding the route to generate.
                properties:
                  alternative_routes:
                    description: 'Specifies whether alternative routes are computed, and parameters for the algorithm determining suitable alternatives.'
                    example:
                      target_count: 2
                      weight_factor: 1.6
                    properties:
                      share_factor:
                        description: Maximum fraction of the route that alternatives may share with the optimal route. The default value of 0.6 means alternatives can share up to 60% of path segments with the optimal route.
                        example: 0.6
                        format: double
                        type: number
                      target_count:
                        description: Target number of alternative routes to compute. Service returns up to this number of routes that fulfill the share-factor and weight-factor constraints.
                        example: 2
                        format: int32
                        type: integer
                      weight_factor:
                        description: Maximum factor by which route weight may diverge from the optimal route. The default value of 1.4 means alternatives can be up to 1.4 times longer (costly) than the optimal route.
                        example: 1.4
                        format: double
                        type: number
                    title: Alternative Routes
                    type: object
                  attributes:
                    description: List of route attributes
                    example:
                      - avgspeed
                      - percentage
                    items:
                      enum:
                        - avgspeed
                        - detourfactor
                        - percentage
                      type: string
                    type: array
                  bearings:
                    description: |-
                      Specifies a list of pairs (bearings and deviations) to filter the segments of the road network a waypoint can snap to. For example `bearings=[[45,10],[120,20]]`. 
                      Each pair is a comma-separated list that can consist of one or two float values, where the first value is the bearing and the second one is the allowed deviation from the bearing. The bearing can take values between `0` and `360` clockwise from true north. If the deviation is not set, then the default value of `100` degrees is used. The number of pairs must correspond to the number of waypoints.
                      The number of bearings corresponds to the length of waypoints-1 or waypoints. If the bearing information for the last waypoint is given, then this will control the sector from which the destination waypoint may be reached. You can skip a bearing for a certain waypoint by passing an empty value for an array, e.g. `[30,20],[],[40,20]`. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':'cycling-*'}}
                    example:
                      - - 30
                        - 20
                      - []
                      - - 40
                        - 20
                    items:
                      items:
                        format: double
                        type: number
                      type: array
                    type: array
                  continue_straight:
                    description: 'Forces the route to keep going straight at waypoints restricting uturns there even if it would be faster.CUSTOM_KEYS:{''apiDefault'':''false''}'
                    example: false
                    type: boolean
                  coordinates:
                    description: 'The waypoints to use for the route as an array of `longitude/latitude` pairs in WGS 84 (EPSG:4326)'
                    example:
                      - - 8.681495
                        - 49.41461
                      - - 8.686507
                        - 49.41943
                      - - 8.687872
                        - 49.420318
                    items:
                      items:
                        format: double
                        type: number
                      type: array
                    type: array
                  elevation:
                    description: Specifies whether to return elevation values for points. Please note that elevation also gets encoded for json response encoded polyline.
                    example: false
                    type: boolean
                  extra_info:
                    description: The extra info items to include in the response
                    example:
                      - waytype
                      - surface
                    items:
                      enum:
                        - countryinfo
                        - csv
                        - green
                        - noise
                        - osmid
                        - roadaccessrestrictions
                        - shadow
                        - steepness
                        - suitability
                        - surface
                        - tollways
                        - traildifficulty
                        - waycategory
                        - waytype
                      type: string
                    type: array
                  geometry:
                    description: 'Specifies whether to return geometry. CUSTOM_KEYS:{''apiDefault'':true, ''validWhen'':{''ref'':''format'',''value'':[''json'']}}'
                    example: true
                    type: boolean
                  geometry_simplify:
                    description: 'Specifies whether to simplify the geometry. Simplify geometry cannot be applied to routes with more than **one segment** and when `extra_info` is required.CUSTOM_KEYS:{''apiDefault'':false}'
                    example: false
                    type: boolean
                  id:
                    description: Arbitrary identification string of the request reflected in the meta information.
                    example: centrality_request
                    type: string
                  instructions:
                    description: 'Specifies whether to return instructions. CUSTOM_KEYS:{''apiDefault'':true}'
                    example: true
                    type: boolean
                  instructions_format:
                    description: 'Select html for more verbose instructions. CUSTOM_KEYS:{''apiDefault'':''text''}'
                    enum:
                      - html
                      - text
                    example: text
                    type: string
                  language:
                    description: 'Language for the route instructions. CUSTOM_KEYS:{''apiDefault'':''en''}'
                    enum:
                      - cs
                      - cs-cz
                      - de
                      - de-de
                      - en
                      - en-us
                      - eo
                      - eo-eo
                      - es
                      - es-es
                      - fr
                      - fr-fr
                      - gr
                      - gr-gr
                      - he
                      - he-il
                      - hu
                      - hu-hu
                      - id
                      - id-id
                      - it
                      - it-it
                      - ja
                      - ja-jp
                      - ne
                      - ne-np
                      - nl
                      - nl-nl
                      - pl
                      - pl-pl
                      - pt
                      - pt-pt
                      - ro
                      - ro-ro
                      - ru
                      - ru-ru
                      - tr
                      - tr-tr
                      - zh
                      - zh-cn
                    example: en
                    type: string
                  maneuvers:
                    description: 'Specifies whether the maneuver object is included into the step object or not. CUSTOM_KEYS:{''apiDefault'':false}'
                    example: false
                    type: boolean
                  maximum_speed:
                    description: 'The maximum speed specified by user.CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-*'']}}'
                    example: 90
                    format: double
                    type: number
                  options:
                    description: 'For advanced options formatted as json object. For structure refer to the [these examples](https://GIScience.github.io/openrouteservice/documentation/routing-options/Examples.html).'
                    example:
                      avoid_borders: controlled
                    properties:
                      avoid_borders:
                        description: '`all` for no border crossing. `controlled` to cross open borders but avoid controlled ones. Only for `driving-*` profiles. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-*'']}}'
                        enum:
                          - all
                          - controlled
                          - none
                        example: controlled
                        type: string
                      avoid_countries:
                        description: 'List of countries to exclude from matrix with `driving-*` profiles. Can be used together with `''avoid_borders'': ''controlled''`. `[ 11, 193 ]` would exclude Austria and Switzerland. List of countries and application examples can be found [here](https://GIScience.github.io/openrouteservice/documentation/routing-options/Country-List.html). Also, ISO standard country codes cna be used in place of the numerical ids, for example, DE or DEU for Germany. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-*'']}}'
                        example:
                          - 11
                          - 193
                        items:
                          type: string
                        type: array
                      avoid_features:
                        description: 'List of features to avoid. CUSTOM_KEYS:{''itemRestrictions'':{''ref'':''profile'', ''itemsWhen'':{''driving-*'':[''highways'',''tollways'',''ferries''],''cycling-*'':[''ferries'',''steps'',''fords''],''foot-*'':[''ferries'',''fords'',''steps''],''wheelchair'':[''ferries'',''steps'']}}}'
                        example:
                          - highways
                        items:
                          enum:
                            - ferries
                            - fords
                            - highways
                            - steps
                            - tollways
                          type: string
                        type: array
                      avoid_polygons:
                        additionalProperties:
                          type: object
                        description: Comprises areas to be avoided for the route. Formatted in GeoJSON as either a Polygon or Multipolygon object.
                        type: object
                      profile_params:
                        description: ' Specifies additional matrix parameters.CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''valueNot'':[''driving-car'']}}'
                        properties:
                          allow_unsuitable:
                            description: 'Specifies if ways that might not be suitable (e.g. unknown pedestrian usage) should be included in finding routes - default falseCUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                            example: true
                            type: boolean
                          restrictions:
                            description: Describe restrictions to be applied to edges on the routing. any edges that do not match these restrictions are not traversed.
                            properties:
                              axleload:
                                description: 'Axleload restriction in tons. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                                example: 50
                                format: float
                                type: number
                              hazmat:
                                description: 'Specifies whether to use appropriate routing for delivering hazardous goods and avoiding water protected areas. Default is `false`. CUSTOM_KEYS:{''apiDefault'':false,''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                                type: boolean
                              height:
                                description: 'Height restriction in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                                example: 4.2
                                format: float
                                type: number
                              length:
                                description: 'Length restriction in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                                example: 8.4
                                format: float
                                type: number
                              maximum_incline:
                                description: 'Specifies the maximum incline as a percentage. `3`, `6` (default), `10`, `15.CUSTOM_KEYS:{''apiDefault'':6,''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                example: 3
                                format: int32
                                type: integer
                              maximum_sloped_kerb:
                                description: 'Specifies the maximum height of the sloped curb in metres. Values are `0.03`, `0.06` (default), `0.1`.CUSTOM_KEYS:{''apiDefault'':0.6,''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                example: 0.03
                                format: float
                                type: number
                              minimum_width:
                                description: 'Specifies the minimum width of the footway in metres.CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                example: 2.5
                                format: float
                                type: number
                              smoothness_type:
                                description: 'Specifies the minimum smoothness of the route. Default is `good`.CUSTOM_KEYS:{''apiDefault'':''good'',''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                enum:
                                  - bad
                                  - excellent
                                  - good
                                  - horrible
                                  - impassable
                                  - intermediate
                                  - very_bad
                                  - very_horrible
                                example: best
                                type: string
                              surface_type:
                                description: 'Specifies the minimum surface type. Default is `sett`. CUSTOM_KEYS:{''apiDefault'':''sett'',''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                example: asphalt
                                type: string
                              track_type:
                                description: 'Specifies the minimum grade of the route. Default is `grade1`. CUSTOM_KEYS:{''apiDefault'':''grade1'',''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                example: grade2
                                type: string
                              weight:
                                description: 'Weight restriction in tons. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                                example: 40
                                format: float
                                type: number
                              width:
                                description: 'Width restriction in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                                example: 5.6
                                format: float
                                type: number
                            title: Restrictions
                            type: object
                          surface_quality_known:
                            description: 'Specifies whether to enforce that only ways with known information on surface quality be taken into account - default falseCUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                            example: true
                            type: boolean
                          weightings:
                            description: Describe additional weightings to be applied to edges on the routing.
                            properties:
                              csvColumn:
                                type: string
                              csv_column:
                                description: Specifies the csv column name
                                type: string
                              csv_factor:
                                description: Specifies the factor of csv-column (range 0 to 1)
                                format: float
                                type: number
                              green:
                                description: |-
                                  Specifies the Green factor for `foot-*` profiles.

                                  factor: Multiplication factor range from 0 to 1. 0 is the green routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer ways through green areas over a shorter route. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['foot-*']}}
                                example: 0.4
                                format: float
                                type: number
                              quiet:
                                description: |-
                                  Specifies the Quiet factor for foot-* profiles.

                                  factor: Multiplication factor range from 0 to 1. 0 is the quiet routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer quiet ways over a shorter route. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['foot-*']}}
                                example: 0.8
                                format: float
                                type: number
                              shadow:
                                description: |-
                                  Specifies the shadow factor for `foot-*` profiles.

                                  factor: Multiplication factor range from 0 to 1. 0 is the shadow routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer ways through shadow areas over a shorter route. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['foot-*']}}
                                example: 0.4
                                format: float
                                type: number
                              steepness_difficulty:
                                description: |-
                                  Specifies the fitness level for `cycling-*` profiles.

                                   level: 0 = Novice, 1 = Moderate, 2 = Amateur, 3 = Pro. The prefered gradient increases with level. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['cycling-*']}}
                                example: 2
                                format: int32
                                type: integer
                            title: Profile Weightings
                            type: object
                        title: Profile Parameters
                        type: object
                      round_trip:
                        description: Options to be applied on round trip routes.
                        example:
                          length: 10000
                          points: 5
                        properties:
                          length:
                            description: 'The target length of the route in `m` (note that this is a preferred value, but results may be different).'
                            example: 10000
                            format: float
                            type: number
                          points:
                            description: The number of points to use on the route. Larger values create more circular routes.
                            example: 5
                            format: int32
                            type: integer
                          seed:
                            description: A seed to use for adding randomisation to the overall direction of the generated route
                            example: 1
                            format: int64
                            type: integer
                        title: Round Trip Route Options
                        type: object
                      vehicle_type:
                        description: '(for profile=driving-hgv only): hgv,bus,agricultural,delivery,forestry and goods. It is needed for vehicle restrictions to work. CUSTOM_KEYS:{''apiDefault'':''hgv'',''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                        enum:
                          - agricultural
                          - bus
                          - delivery
                          - forestry
                          - goods
                          - hgv
                          - unknown
                        type: string
                    title: Route Options
                    type: object
                  preference:
                    description: 'Specifies the route preference. CUSTOM_KEYS:{''apiDefault'':''recommended''}'
                    enum:
                      - fastest
                      - recommended
                      - shortest
                    example: recommended
                    type: string
                  radiuses:
                    description: 'A list of maximum distances (measured in metres) that limit the search of nearby road segments to every given waypoint. The values must be greater than 0, the value of -1 specifies using the maximum possible search radius. The number of radiuses correspond to the number of waypoints. If only a single value is given, it will be applied to all waypoints.'
                    example:
                      - 200
                      - -1
                      - 30
                    items:
                      format: double
                      type: number
                    type: array
                  roundabout_exits:
                    description: 'Provides bearings of the entrance and all passed roundabout exits. Adds the `exit_bearings` array to the step object in the response. CUSTOM_KEYS:{''apiDefault'':false}'
                    example: false
                    type: boolean
                  skip_segments:
                    description: Specifies the segments that should be skipped in the route calculation. A segment is the connection between two given coordinates and the counting starts with 1 for the connection between the first and second coordinate.
                    example:
                      - 2
                      - 4
                    items:
                      format: int32
                      type: integer
                    type: array
                  suppress_warnings:
                    description: Suppress warning messages in the response
                    example: false
                    type: boolean
                  units:
                    description: 'Specifies the distance unit. CUSTOM_KEYS:{''apiDefault'':''m''}'
                    enum:
                      - km
                      - m
                      - mi
                    example: m
                    type: string
                required:
                  - coordinates
                title: Directions Service
                type: object
            description: The JSON body request sent to the routing service which defines options and parameters regarding the route to generate.
            title: Directions Service
      produces:
        - application/gpx+xml
        - application/gpx+xml;charset=UTF-8
      responses:
        '200':
          description: Standard response for successfully processed requests. Returns GPX.
          schema:
            properties:
              gpxRouteElements:
                items:
                  title: rte
                  type: object
                  xml:
                    attribute: false
                    name: rte
                    wrapped: false
                type: array
            title: gpx
            type: object
            xml:
              attribute: false
              name: gpx
              wrapped: false
        '201':
          description: Created
        '400':
          description: The request is incorrect and therefore can not be processed.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: 'An element could not be found. If possible, a more detailed error code is provided.'
        '405':
          description: 'The specified HTTP method is not supported. For more details, refer to the EndPoint documentation.'
        '413':
          description: 'The request is larger than the server is able to process, the data provided in the request exceeds the capacity limit.'
        '500':
          description: An unexpected error was encountered and a more detailed error code is provided.
        '501':
          description: Indicates that the server does not support the functionality needed to fulfill the request.
        '503':
          description: The server is currently unavailable due to overload or maintenance.
      summary: Directions Service GPX (POST)
      tags:
        - Directions
  '/v2/directions/{profile}/json':
    post:
      consumes:
        - application/json
      description: Returns a route between two or more locations for a selected profile and its settings as JSON
      operationId: getJsonRouteUsingPOST
      parameters:
        - description: Specifies the route profile.
          enum:
            - cycling-electric
            - cycling-mountain
            - cycling-regular
            - cycling-road
            - driving-car
            - driving-hgv
            - foot-hiking
            - foot-walking
            - wheelchair
          in: path
          name: profile
          required: true
          type: string
          x-example: driving-car
        - description: The request payload
          in: body
          name: request
          required: true
          schema:
            allOf:
              - description: Advanced options for routing
                properties:
                  avoid_borders:
                    description: '`all` for no border crossing. `controlled` to cross open borders but avoid controlled ones. Only for `driving-*` profiles. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-*'']}}'
                    enum:
                      - all
                      - controlled
                      - none
                    example: controlled
                    type: string
                  avoid_countries:
                    description: 'List of countries to exclude from matrix with `driving-*` profiles. Can be used together with `''avoid_borders'': ''controlled''`. `[ 11, 193 ]` would exclude Austria and Switzerland. List of countries and application examples can be found [here](https://GIScience.github.io/openrouteservice/documentation/routing-options/Country-List.html). Also, ISO standard country codes cna be used in place of the numerical ids, for example, DE or DEU for Germany. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-*'']}}'
                    example:
                      - 11
                      - 193
                    items:
                      type: string
                    type: array
                  avoid_features:
                    description: 'List of features to avoid. CUSTOM_KEYS:{''itemRestrictions'':{''ref'':''profile'', ''itemsWhen'':{''driving-*'':[''highways'',''tollways'',''ferries''],''cycling-*'':[''ferries'',''steps'',''fords''],''foot-*'':[''ferries'',''fords'',''steps''],''wheelchair'':[''ferries'',''steps'']}}}'
                    example:
                      - highways
                    items:
                      enum:
                        - ferries
                        - fords
                        - highways
                        - steps
                        - tollways
                      type: string
                    type: array
                  avoid_polygons:
                    additionalProperties:
                      type: object
                    description: Comprises areas to be avoided for the route. Formatted in GeoJSON as either a Polygon or Multipolygon object.
                    type: object
                  profile_params:
                    description: ' Specifies additional matrix parameters.CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''valueNot'':[''driving-car'']}}'
                    properties:
                      allow_unsuitable:
                        description: 'Specifies if ways that might not be suitable (e.g. unknown pedestrian usage) should be included in finding routes - default falseCUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                        example: true
                        type: boolean
                      restrictions:
                        description: Describe restrictions to be applied to edges on the routing. any edges that do not match these restrictions are not traversed.
                        properties:
                          axleload:
                            description: 'Axleload restriction in tons. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                            example: 50
                            format: float
                            type: number
                          hazmat:
                            description: 'Specifies whether to use appropriate routing for delivering hazardous goods and avoiding water protected areas. Default is `false`. CUSTOM_KEYS:{''apiDefault'':false,''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                            type: boolean
                          height:
                            description: 'Height restriction in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                            example: 4.2
                            format: float
                            type: number
                          length:
                            description: 'Length restriction in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                            example: 8.4
                            format: float
                            type: number
                          maximum_incline:
                            description: 'Specifies the maximum incline as a percentage. `3`, `6` (default), `10`, `15.CUSTOM_KEYS:{''apiDefault'':6,''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                            example: 3
                            format: int32
                            type: integer
                          maximum_sloped_kerb:
                            description: 'Specifies the maximum height of the sloped curb in metres. Values are `0.03`, `0.06` (default), `0.1`.CUSTOM_KEYS:{''apiDefault'':0.6,''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                            example: 0.03
                            format: float
                            type: number
                          minimum_width:
                            description: 'Specifies the minimum width of the footway in metres.CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                            example: 2.5
                            format: float
                            type: number
                          smoothness_type:
                            description: 'Specifies the minimum smoothness of the route. Default is `good`.CUSTOM_KEYS:{''apiDefault'':''good'',''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                            enum:
                              - bad
                              - excellent
                              - good
                              - horrible
                              - impassable
                              - intermediate
                              - very_bad
                              - very_horrible
                            example: best
                            type: string
                          surface_type:
                            description: 'Specifies the minimum surface type. Default is `sett`. CUSTOM_KEYS:{''apiDefault'':''sett'',''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                            example: asphalt
                            type: string
                          track_type:
                            description: 'Specifies the minimum grade of the route. Default is `grade1`. CUSTOM_KEYS:{''apiDefault'':''grade1'',''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                            example: grade2
                            type: string
                          weight:
                            description: 'Weight restriction in tons. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                            example: 40
                            format: float
                            type: number
                          width:
                            description: 'Width restriction in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                            example: 5.6
                            format: float
                            type: number
                        title: Restrictions
                        type: object
                      surface_quality_known:
                        description: 'Specifies whether to enforce that only ways with known information on surface quality be taken into account - default falseCUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                        example: true
                        type: boolean
                      weightings:
                        description: Describe additional weightings to be applied to edges on the routing.
                        properties:
                          csvColumn:
                            type: string
                          csv_column:
                            description: Specifies the csv column name
                            type: string
                          csv_factor:
                            description: Specifies the factor of csv-column (range 0 to 1)
                            format: float
                            type: number
                          green:
                            description: |-
                              Specifies the Green factor for `foot-*` profiles.

                              factor: Multiplication factor range from 0 to 1. 0 is the green routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer ways through green areas over a shorter route. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['foot-*']}}
                            example: 0.4
                            format: float
                            type: number
                          quiet:
                            description: |-
                              Specifies the Quiet factor for foot-* profiles.

                              factor: Multiplication factor range from 0 to 1. 0 is the quiet routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer quiet ways over a shorter route. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['foot-*']}}
                            example: 0.8
                            format: float
                            type: number
                          shadow:
                            description: |-
                              Specifies the shadow factor for `foot-*` profiles.

                              factor: Multiplication factor range from 0 to 1. 0 is the shadow routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer ways through shadow areas over a shorter route. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['foot-*']}}
                            example: 0.4
                            format: float
                            type: number
                          steepness_difficulty:
                            description: |-
                              Specifies the fitness level for `cycling-*` profiles.

                               level: 0 = Novice, 1 = Moderate, 2 = Amateur, 3 = Pro. The prefered gradient increases with level. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['cycling-*']}}
                            example: 2
                            format: int32
                            type: integer
                        title: Profile Weightings
                        type: object
                    title: Profile Parameters
                    type: object
                  round_trip:
                    description: Options to be applied on round trip routes.
                    example:
                      length: 10000
                      points: 5
                    properties:
                      length:
                        description: 'The target length of the route in `m` (note that this is a preferred value, but results may be different).'
                        example: 10000
                        format: float
                        type: number
                      points:
                        description: The number of points to use on the route. Larger values create more circular routes.
                        example: 5
                        format: int32
                        type: integer
                      seed:
                        description: A seed to use for adding randomisation to the overall direction of the generated route
                        example: 1
                        format: int64
                        type: integer
                    title: Round Trip Route Options
                    type: object
                  vehicle_type:
                    description: '(for profile=driving-hgv only): hgv,bus,agricultural,delivery,forestry and goods. It is needed for vehicle restrictions to work. CUSTOM_KEYS:{''apiDefault'':''hgv'',''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                    enum:
                      - agricultural
                      - bus
                      - delivery
                      - forestry
                      - goods
                      - hgv
                      - unknown
                    type: string
                title: Route Options
                type: object
              - description: The JSON body request sent to the routing service which defines options and parameters regarding the route to generate.
                properties:
                  alternative_routes:
                    description: 'Specifies whether alternative routes are computed, and parameters for the algorithm determining suitable alternatives.'
                    example:
                      target_count: 2
                      weight_factor: 1.6
                    properties:
                      share_factor:
                        description: Maximum fraction of the route that alternatives may share with the optimal route. The default value of 0.6 means alternatives can share up to 60% of path segments with the optimal route.
                        example: 0.6
                        format: double
                        type: number
                      target_count:
                        description: Target number of alternative routes to compute. Service returns up to this number of routes that fulfill the share-factor and weight-factor constraints.
                        example: 2
                        format: int32
                        type: integer
                      weight_factor:
                        description: Maximum factor by which route weight may diverge from the optimal route. The default value of 1.4 means alternatives can be up to 1.4 times longer (costly) than the optimal route.
                        example: 1.4
                        format: double
                        type: number
                    title: Alternative Routes
                    type: object
                  attributes:
                    description: List of route attributes
                    example:
                      - avgspeed
                      - percentage
                    items:
                      enum:
                        - avgspeed
                        - detourfactor
                        - percentage
                      type: string
                    type: array
                  bearings:
                    description: |-
                      Specifies a list of pairs (bearings and deviations) to filter the segments of the road network a waypoint can snap to. For example `bearings=[[45,10],[120,20]]`. 
                      Each pair is a comma-separated list that can consist of one or two float values, where the first value is the bearing and the second one is the allowed deviation from the bearing. The bearing can take values between `0` and `360` clockwise from true north. If the deviation is not set, then the default value of `100` degrees is used. The number of pairs must correspond to the number of waypoints.
                      The number of bearings corresponds to the length of waypoints-1 or waypoints. If the bearing information for the last waypoint is given, then this will control the sector from which the destination waypoint may be reached. You can skip a bearing for a certain waypoint by passing an empty value for an array, e.g. `[30,20],[],[40,20]`. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':'cycling-*'}}
                    example:
                      - - 30
                        - 20
                      - []
                      - - 40
                        - 20
                    items:
                      items:
                        format: double
                        type: number
                      type: array
                    type: array
                  continue_straight:
                    description: 'Forces the route to keep going straight at waypoints restricting uturns there even if it would be faster.CUSTOM_KEYS:{''apiDefault'':''false''}'
                    example: false
                    type: boolean
                  coordinates:
                    description: 'The waypoints to use for the route as an array of `longitude/latitude` pairs in WGS 84 (EPSG:4326)'
                    example:
                      - - 8.681495
                        - 49.41461
                      - - 8.686507
                        - 49.41943
                      - - 8.687872
                        - 49.420318
                    items:
                      items:
                        format: double
                        type: number
                      type: array
                    type: array
                  elevation:
                    description: Specifies whether to return elevation values for points. Please note that elevation also gets encoded for json response encoded polyline.
                    example: false
                    type: boolean
                  extra_info:
                    description: The extra info items to include in the response
                    example:
                      - waytype
                      - surface
                    items:
                      enum:
                        - countryinfo
                        - csv
                        - green
                        - noise
                        - osmid
                        - roadaccessrestrictions
                        - shadow
                        - steepness
                        - suitability
                        - surface
                        - tollways
                        - traildifficulty
                        - waycategory
                        - waytype
                      type: string
                    type: array
                  geometry:
                    description: 'Specifies whether to return geometry. CUSTOM_KEYS:{''apiDefault'':true, ''validWhen'':{''ref'':''format'',''value'':[''json'']}}'
                    example: true
                    type: boolean
                  geometry_simplify:
                    description: 'Specifies whether to simplify the geometry. Simplify geometry cannot be applied to routes with more than **one segment** and when `extra_info` is required.CUSTOM_KEYS:{''apiDefault'':false}'
                    example: false
                    type: boolean
                  id:
                    description: Arbitrary identification string of the request reflected in the meta information.
                    example: centrality_request
                    type: string
                  instructions:
                    description: 'Specifies whether to return instructions. CUSTOM_KEYS:{''apiDefault'':true}'
                    example: true
                    type: boolean
                  instructions_format:
                    description: 'Select html for more verbose instructions. CUSTOM_KEYS:{''apiDefault'':''text''}'
                    enum:
                      - html
                      - text
                    example: text
                    type: string
                  language:
                    description: 'Language for the route instructions. CUSTOM_KEYS:{''apiDefault'':''en''}'
                    enum:
                      - cs
                      - cs-cz
                      - de
                      - de-de
                      - en
                      - en-us
                      - eo
                      - eo-eo
                      - es
                      - es-es
                      - fr
                      - fr-fr
                      - gr
                      - gr-gr
                      - he
                      - he-il
                      - hu
                      - hu-hu
                      - id
                      - id-id
                      - it
                      - it-it
                      - ja
                      - ja-jp
                      - ne
                      - ne-np
                      - nl
                      - nl-nl
                      - pl
                      - pl-pl
                      - pt
                      - pt-pt
                      - ro
                      - ro-ro
                      - ru
                      - ru-ru
                      - tr
                      - tr-tr
                      - zh
                      - zh-cn
                    example: en
                    type: string
                  maneuvers:
                    description: 'Specifies whether the maneuver object is included into the step object or not. CUSTOM_KEYS:{''apiDefault'':false}'
                    example: false
                    type: boolean
                  maximum_speed:
                    description: 'The maximum speed specified by user.CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-*'']}}'
                    example: 90
                    format: double
                    type: number
                  options:
                    description: 'For advanced options formatted as json object. For structure refer to the [these examples](https://GIScience.github.io/openrouteservice/documentation/routing-options/Examples.html).'
                    example:
                      avoid_borders: controlled
                    properties:
                      avoid_borders:
                        description: '`all` for no border crossing. `controlled` to cross open borders but avoid controlled ones. Only for `driving-*` profiles. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-*'']}}'
                        enum:
                          - all
                          - controlled
                          - none
                        example: controlled
                        type: string
                      avoid_countries:
                        description: 'List of countries to exclude from matrix with `driving-*` profiles. Can be used together with `''avoid_borders'': ''controlled''`. `[ 11, 193 ]` would exclude Austria and Switzerland. List of countries and application examples can be found [here](https://GIScience.github.io/openrouteservice/documentation/routing-options/Country-List.html). Also, ISO standard country codes cna be used in place of the numerical ids, for example, DE or DEU for Germany. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-*'']}}'
                        example:
                          - 11
                          - 193
                        items:
                          type: string
                        type: array
                      avoid_features:
                        description: 'List of features to avoid. CUSTOM_KEYS:{''itemRestrictions'':{''ref'':''profile'', ''itemsWhen'':{''driving-*'':[''highways'',''tollways'',''ferries''],''cycling-*'':[''ferries'',''steps'',''fords''],''foot-*'':[''ferries'',''fords'',''steps''],''wheelchair'':[''ferries'',''steps'']}}}'
                        example:
                          - highways
                        items:
                          enum:
                            - ferries
                            - fords
                            - highways
                            - steps
                            - tollways
                          type: string
                        type: array
                      avoid_polygons:
                        additionalProperties:
                          type: object
                        description: Comprises areas to be avoided for the route. Formatted in GeoJSON as either a Polygon or Multipolygon object.
                        type: object
                      profile_params:
                        description: ' Specifies additional matrix parameters.CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''valueNot'':[''driving-car'']}}'
                        properties:
                          allow_unsuitable:
                            description: 'Specifies if ways that might not be suitable (e.g. unknown pedestrian usage) should be included in finding routes - default falseCUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                            example: true
                            type: boolean
                          restrictions:
                            description: Describe restrictions to be applied to edges on the routing. any edges that do not match these restrictions are not traversed.
                            properties:
                              axleload:
                                description: 'Axleload restriction in tons. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                                example: 50
                                format: float
                                type: number
                              hazmat:
                                description: 'Specifies whether to use appropriate routing for delivering hazardous goods and avoiding water protected areas. Default is `false`. CUSTOM_KEYS:{''apiDefault'':false,''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                                type: boolean
                              height:
                                description: 'Height restriction in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                                example: 4.2
                                format: float
                                type: number
                              length:
                                description: 'Length restriction in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                                example: 8.4
                                format: float
                                type: number
                              maximum_incline:
                                description: 'Specifies the maximum incline as a percentage. `3`, `6` (default), `10`, `15.CUSTOM_KEYS:{''apiDefault'':6,''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                example: 3
                                format: int32
                                type: integer
                              maximum_sloped_kerb:
                                description: 'Specifies the maximum height of the sloped curb in metres. Values are `0.03`, `0.06` (default), `0.1`.CUSTOM_KEYS:{''apiDefault'':0.6,''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                example: 0.03
                                format: float
                                type: number
                              minimum_width:
                                description: 'Specifies the minimum width of the footway in metres.CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                example: 2.5
                                format: float
                                type: number
                              smoothness_type:
                                description: 'Specifies the minimum smoothness of the route. Default is `good`.CUSTOM_KEYS:{''apiDefault'':''good'',''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                enum:
                                  - bad
                                  - excellent
                                  - good
                                  - horrible
                                  - impassable
                                  - intermediate
                                  - very_bad
                                  - very_horrible
                                example: best
                                type: string
                              surface_type:
                                description: 'Specifies the minimum surface type. Default is `sett`. CUSTOM_KEYS:{''apiDefault'':''sett'',''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                example: asphalt
                                type: string
                              track_type:
                                description: 'Specifies the minimum grade of the route. Default is `grade1`. CUSTOM_KEYS:{''apiDefault'':''grade1'',''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                example: grade2
                                type: string
                              weight:
                                description: 'Weight restriction in tons. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                                example: 40
                                format: float
                                type: number
                              width:
                                description: 'Width restriction in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                                example: 5.6
                                format: float
                                type: number
                            title: Restrictions
                            type: object
                          surface_quality_known:
                            description: 'Specifies whether to enforce that only ways with known information on surface quality be taken into account - default falseCUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                            example: true
                            type: boolean
                          weightings:
                            description: Describe additional weightings to be applied to edges on the routing.
                            properties:
                              csvColumn:
                                type: string
                              csv_column:
                                description: Specifies the csv column name
                                type: string
                              csv_factor:
                                description: Specifies the factor of csv-column (range 0 to 1)
                                format: float
                                type: number
                              green:
                                description: |-
                                  Specifies the Green factor for `foot-*` profiles.

                                  factor: Multiplication factor range from 0 to 1. 0 is the green routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer ways through green areas over a shorter route. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['foot-*']}}
                                example: 0.4
                                format: float
                                type: number
                              quiet:
                                description: |-
                                  Specifies the Quiet factor for foot-* profiles.

                                  factor: Multiplication factor range from 0 to 1. 0 is the quiet routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer quiet ways over a shorter route. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['foot-*']}}
                                example: 0.8
                                format: float
                                type: number
                              shadow:
                                description: |-
                                  Specifies the shadow factor for `foot-*` profiles.

                                  factor: Multiplication factor range from 0 to 1. 0 is the shadow routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer ways through shadow areas over a shorter route. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['foot-*']}}
                                example: 0.4
                                format: float
                                type: number
                              steepness_difficulty:
                                description: |-
                                  Specifies the fitness level for `cycling-*` profiles.

                                   level: 0 = Novice, 1 = Moderate, 2 = Amateur, 3 = Pro. The prefered gradient increases with level. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['cycling-*']}}
                                example: 2
                                format: int32
                                type: integer
                            title: Profile Weightings
                            type: object
                        title: Profile Parameters
                        type: object
                      round_trip:
                        description: Options to be applied on round trip routes.
                        example:
                          length: 10000
                          points: 5
                        properties:
                          length:
                            description: 'The target length of the route in `m` (note that this is a preferred value, but results may be different).'
                            example: 10000
                            format: float
                            type: number
                          points:
                            description: The number of points to use on the route. Larger values create more circular routes.
                            example: 5
                            format: int32
                            type: integer
                          seed:
                            description: A seed to use for adding randomisation to the overall direction of the generated route
                            example: 1
                            format: int64
                            type: integer
                        title: Round Trip Route Options
                        type: object
                      vehicle_type:
                        description: '(for profile=driving-hgv only): hgv,bus,agricultural,delivery,forestry and goods. It is needed for vehicle restrictions to work. CUSTOM_KEYS:{''apiDefault'':''hgv'',''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                        enum:
                          - agricultural
                          - bus
                          - delivery
                          - forestry
                          - goods
                          - hgv
                          - unknown
                        type: string
                    title: Route Options
                    type: object
                  preference:
                    description: 'Specifies the route preference. CUSTOM_KEYS:{''apiDefault'':''recommended''}'
                    enum:
                      - fastest
                      - recommended
                      - shortest
                    example: recommended
                    type: string
                  radiuses:
                    description: 'A list of maximum distances (measured in metres) that limit the search of nearby road segments to every given waypoint. The values must be greater than 0, the value of -1 specifies using the maximum possible search radius. The number of radiuses correspond to the number of waypoints. If only a single value is given, it will be applied to all waypoints.'
                    example:
                      - 200
                      - -1
                      - 30
                    items:
                      format: double
                      type: number
                    type: array
                  roundabout_exits:
                    description: 'Provides bearings of the entrance and all passed roundabout exits. Adds the `exit_bearings` array to the step object in the response. CUSTOM_KEYS:{''apiDefault'':false}'
                    example: false
                    type: boolean
                  skip_segments:
                    description: Specifies the segments that should be skipped in the route calculation. A segment is the connection between two given coordinates and the counting starts with 1 for the connection between the first and second coordinate.
                    example:
                      - 2
                      - 4
                    items:
                      format: int32
                      type: integer
                    type: array
                  suppress_warnings:
                    description: Suppress warning messages in the response
                    example: false
                    type: boolean
                  units:
                    description: 'Specifies the distance unit. CUSTOM_KEYS:{''apiDefault'':''m''}'
                    enum:
                      - km
                      - m
                      - mi
                    example: m
                    type: string
                required:
                  - coordinates
                title: Directions Service
                type: object
            description: The JSON body request sent to the routing service which defines options and parameters regarding the route to generate.
            title: Directions Service
      produces:
        - application/json
        - application/json;charset=UTF-8
      responses:
        '200':
          description: JSON Response
          schema:
            properties:
              bbox:
                description: Bounding box that covers all returned routes
                example:
                  - 49.414057
                  - 8.680894
                  - 49.420514
                  - 8.690123
                items:
                  format: double
                  type: number
                type: array
              metadata:
                description: Information about the service and request
                properties:
                  attribution:
                    description: Copyright and attribution information
                    example: openrouteservice.org | OpenStreetMap contributors
                    type: string
                  engine:
                    description: Information about the routing service
                    properties:
                      build_date:
                        description: The date that the service was last updated
                        example: '2019-02-07T14:28:11Z'
                        type: string
                      graph_date:
                        description: The date that the graph data was last updated
                        example: '2019-02-07T14:28:11Z'
                        type: string
                      version:
                        description: The backend version of the openrouteservice that was queried
                        example: 5
                        type: string
                    title: EngineInfo
                    type: object
                  id:
                    description: ID of the request (as passed in by the query)
                    example: request123
                    type: string
                  osm_file_md5_hash:
                    description: The MD5 hash of the OSM planet file that was used for generating graphs
                    example: c0327ba6
                    type: string
                  query:
                    allOf:
                      - description: Advanced options for routing
                        properties:
                          avoid_borders:
                            description: '`all` for no border crossing. `controlled` to cross open borders but avoid controlled ones. Only for `driving-*` profiles. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-*'']}}'
                            enum:
                              - all
                              - controlled
                              - none
                            example: controlled
                            type: string
                          avoid_countries:
                            description: 'List of countries to exclude from matrix with `driving-*` profiles. Can be used together with `''avoid_borders'': ''controlled''`. `[ 11, 193 ]` would exclude Austria and Switzerland. List of countries and application examples can be found [here](https://GIScience.github.io/openrouteservice/documentation/routing-options/Country-List.html). Also, ISO standard country codes cna be used in place of the numerical ids, for example, DE or DEU for Germany. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-*'']}}'
                            example:
                              - 11
                              - 193
                            items:
                              type: string
                            type: array
                          avoid_features:
                            description: 'List of features to avoid. CUSTOM_KEYS:{''itemRestrictions'':{''ref'':''profile'', ''itemsWhen'':{''driving-*'':[''highways'',''tollways'',''ferries''],''cycling-*'':[''ferries'',''steps'',''fords''],''foot-*'':[''ferries'',''fords'',''steps''],''wheelchair'':[''ferries'',''steps'']}}}'
                            example:
                              - highways
                            items:
                              enum:
                                - ferries
                                - fords
                                - highways
                                - steps
                                - tollways
                              type: string
                            type: array
                          avoid_polygons:
                            additionalProperties:
                              type: object
                            description: Comprises areas to be avoided for the route. Formatted in GeoJSON as either a Polygon or Multipolygon object.
                            type: object
                          profile_params:
                            description: ' Specifies additional matrix parameters.CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''valueNot'':[''driving-car'']}}'
                            properties:
                              allow_unsuitable:
                                description: 'Specifies if ways that might not be suitable (e.g. unknown pedestrian usage) should be included in finding routes - default falseCUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                example: true
                                type: boolean
                              restrictions:
                                description: Describe restrictions to be applied to edges on the routing. any edges that do not match these restrictions are not traversed.
                                properties:
                                  axleload:
                                    description: 'Axleload restriction in tons. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                                    example: 50
                                    format: float
                                    type: number
                                  hazmat:
                                    description: 'Specifies whether to use appropriate routing for delivering hazardous goods and avoiding water protected areas. Default is `false`. CUSTOM_KEYS:{''apiDefault'':false,''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                                    type: boolean
                                  height:
                                    description: 'Height restriction in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                                    example: 4.2
                                    format: float
                                    type: number
                                  length:
                                    description: 'Length restriction in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                                    example: 8.4
                                    format: float
                                    type: number
                                  maximum_incline:
                                    description: 'Specifies the maximum incline as a percentage. `3`, `6` (default), `10`, `15.CUSTOM_KEYS:{''apiDefault'':6,''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                    example: 3
                                    format: int32
                                    type: integer
                                  maximum_sloped_kerb:
                                    description: 'Specifies the maximum height of the sloped curb in metres. Values are `0.03`, `0.06` (default), `0.1`.CUSTOM_KEYS:{''apiDefault'':0.6,''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                    example: 0.03
                                    format: float
                                    type: number
                                  minimum_width:
                                    description: 'Specifies the minimum width of the footway in metres.CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                    example: 2.5
                                    format: float
                                    type: number
                                  smoothness_type:
                                    description: 'Specifies the minimum smoothness of the route. Default is `good`.CUSTOM_KEYS:{''apiDefault'':''good'',''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                    enum:
                                      - bad
                                      - excellent
                                      - good
                                      - horrible
                                      - impassable
                                      - intermediate
                                      - very_bad
                                      - very_horrible
                                    example: best
                                    type: string
                                  surface_type:
                                    description: 'Specifies the minimum surface type. Default is `sett`. CUSTOM_KEYS:{''apiDefault'':''sett'',''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                    example: asphalt
                                    type: string
                                  track_type:
                                    description: 'Specifies the minimum grade of the route. Default is `grade1`. CUSTOM_KEYS:{''apiDefault'':''grade1'',''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                    example: grade2
                                    type: string
                                  weight:
                                    description: 'Weight restriction in tons. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                                    example: 40
                                    format: float
                                    type: number
                                  width:
                                    description: 'Width restriction in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                                    example: 5.6
                                    format: float
                                    type: number
                                title: Restrictions
                                type: object
                              surface_quality_known:
                                description: 'Specifies whether to enforce that only ways with known information on surface quality be taken into account - default falseCUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                example: true
                                type: boolean
                              weightings:
                                description: Describe additional weightings to be applied to edges on the routing.
                                properties:
                                  csvColumn:
                                    type: string
                                  csv_column:
                                    description: Specifies the csv column name
                                    type: string
                                  csv_factor:
                                    description: Specifies the factor of csv-column (range 0 to 1)
                                    format: float
                                    type: number
                                  green:
                                    description: |-
                                      Specifies the Green factor for `foot-*` profiles.

                                      factor: Multiplication factor range from 0 to 1. 0 is the green routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer ways through green areas over a shorter route. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['foot-*']}}
                                    example: 0.4
                                    format: float
                                    type: number
                                  quiet:
                                    description: |-
                                      Specifies the Quiet factor for foot-* profiles.

                                      factor: Multiplication factor range from 0 to 1. 0 is the quiet routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer quiet ways over a shorter route. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['foot-*']}}
                                    example: 0.8
                                    format: float
                                    type: number
                                  shadow:
                                    description: |-
                                      Specifies the shadow factor for `foot-*` profiles.

                                      factor: Multiplication factor range from 0 to 1. 0 is the shadow routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer ways through shadow areas over a shorter route. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['foot-*']}}
                                    example: 0.4
                                    format: float
                                    type: number
                                  steepness_difficulty:
                                    description: |-
                                      Specifies the fitness level for `cycling-*` profiles.

                                       level: 0 = Novice, 1 = Moderate, 2 = Amateur, 3 = Pro. The prefered gradient increases with level. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['cycling-*']}}
                                    example: 2
                                    format: int32
                                    type: integer
                                title: Profile Weightings
                                type: object
                            title: Profile Parameters
                            type: object
                          round_trip:
                            description: Options to be applied on round trip routes.
                            example:
                              length: 10000
                              points: 5
                            properties:
                              length:
                                description: 'The target length of the route in `m` (note that this is a preferred value, but results may be different).'
                                example: 10000
                                format: float
                                type: number
                              points:
                                description: The number of points to use on the route. Larger values create more circular routes.
                                example: 5
                                format: int32
                                type: integer
                              seed:
                                description: A seed to use for adding randomisation to the overall direction of the generated route
                                example: 1
                                format: int64
                                type: integer
                            title: Round Trip Route Options
                            type: object
                          vehicle_type:
                            description: '(for profile=driving-hgv only): hgv,bus,agricultural,delivery,forestry and goods. It is needed for vehicle restrictions to work. CUSTOM_KEYS:{''apiDefault'':''hgv'',''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                            enum:
                              - agricultural
                              - bus
                              - delivery
                              - forestry
                              - goods
                              - hgv
                              - unknown
                            type: string
                        title: Route Options
                        type: object
                      - description: The JSON body request sent to the routing service which defines options and parameters regarding the route to generate.
                        properties:
                          alternative_routes:
                            description: 'Specifies whether alternative routes are computed, and parameters for the algorithm determining suitable alternatives.'
                            example:
                              target_count: 2
                              weight_factor: 1.6
                            properties:
                              share_factor:
                                description: Maximum fraction of the route that alternatives may share with the optimal route. The default value of 0.6 means alternatives can share up to 60% of path segments with the optimal route.
                                example: 0.6
                                format: double
                                type: number
                              target_count:
                                description: Target number of alternative routes to compute. Service returns up to this number of routes that fulfill the share-factor and weight-factor constraints.
                                example: 2
                                format: int32
                                type: integer
                              weight_factor:
                                description: Maximum factor by which route weight may diverge from the optimal route. The default value of 1.4 means alternatives can be up to 1.4 times longer (costly) than the optimal route.
                                example: 1.4
                                format: double
                                type: number
                            title: Alternative Routes
                            type: object
                          attributes:
                            description: List of route attributes
                            example:
                              - avgspeed
                              - percentage
                            items:
                              enum:
                                - avgspeed
                                - detourfactor
                                - percentage
                              type: string
                            type: array
                          bearings:
                            description: |-
                              Specifies a list of pairs (bearings and deviations) to filter the segments of the road network a waypoint can snap to. For example `bearings=[[45,10],[120,20]]`. 
                              Each pair is a comma-separated list that can consist of one or two float values, where the first value is the bearing and the second one is the allowed deviation from the bearing. The bearing can take values between `0` and `360` clockwise from true north. If the deviation is not set, then the default value of `100` degrees is used. The number of pairs must correspond to the number of waypoints.
                              The number of bearings corresponds to the length of waypoints-1 or waypoints. If the bearing information for the last waypoint is given, then this will control the sector from which the destination waypoint may be reached. You can skip a bearing for a certain waypoint by passing an empty value for an array, e.g. `[30,20],[],[40,20]`. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':'cycling-*'}}
                            example:
                              - - 30
                                - 20
                              - []
                              - - 40
                                - 20
                            items:
                              items:
                                format: double
                                type: number
                              type: array
                            type: array
                          continue_straight:
                            description: 'Forces the route to keep going straight at waypoints restricting uturns there even if it would be faster.CUSTOM_KEYS:{''apiDefault'':''false''}'
                            example: false
                            type: boolean
                          coordinates:
                            description: 'The waypoints to use for the route as an array of `longitude/latitude` pairs in WGS 84 (EPSG:4326)'
                            example:
                              - - 8.681495
                                - 49.41461
                              - - 8.686507
                                - 49.41943
                              - - 8.687872
                                - 49.420318
                            items:
                              items:
                                format: double
                                type: number
                              type: array
                            type: array
                          elevation:
                            description: Specifies whether to return elevation values for points. Please note that elevation also gets encoded for json response encoded polyline.
                            example: false
                            type: boolean
                          extra_info:
                            description: The extra info items to include in the response
                            example:
                              - waytype
                              - surface
                            items:
                              enum:
                                - countryinfo
                                - csv
                                - green
                                - noise
                                - osmid
                                - roadaccessrestrictions
                                - shadow
                                - steepness
                                - suitability
                                - surface
                                - tollways
                                - traildifficulty
                                - waycategory
                                - waytype
                              type: string
                            type: array
                          geometry:
                            description: 'Specifies whether to return geometry. CUSTOM_KEYS:{''apiDefault'':true, ''validWhen'':{''ref'':''format'',''value'':[''json'']}}'
                            example: true
                            type: boolean
                          geometry_simplify:
                            description: 'Specifies whether to simplify the geometry. Simplify geometry cannot be applied to routes with more than **one segment** and when `extra_info` is required.CUSTOM_KEYS:{''apiDefault'':false}'
                            example: false
                            type: boolean
                          id:
                            description: Arbitrary identification string of the request reflected in the meta information.
                            example: centrality_request
                            type: string
                          instructions:
                            description: 'Specifies whether to return instructions. CUSTOM_KEYS:{''apiDefault'':true}'
                            example: true
                            type: boolean
                          instructions_format:
                            description: 'Select html for more verbose instructions. CUSTOM_KEYS:{''apiDefault'':''text''}'
                            enum:
                              - html
                              - text
                            example: text
                            type: string
                          language:
                            description: 'Language for the route instructions. CUSTOM_KEYS:{''apiDefault'':''en''}'
                            enum:
                              - cs
                              - cs-cz
                              - de
                              - de-de
                              - en
                              - en-us
                              - eo
                              - eo-eo
                              - es
                              - es-es
                              - fr
                              - fr-fr
                              - gr
                              - gr-gr
                              - he
                              - he-il
                              - hu
                              - hu-hu
                              - id
                              - id-id
                              - it
                              - it-it
                              - ja
                              - ja-jp
                              - ne
                              - ne-np
                              - nl
                              - nl-nl
                              - pl
                              - pl-pl
                              - pt
                              - pt-pt
                              - ro
                              - ro-ro
                              - ru
                              - ru-ru
                              - tr
                              - tr-tr
                              - zh
                              - zh-cn
                            example: en
                            type: string
                          maneuvers:
                            description: 'Specifies whether the maneuver object is included into the step object or not. CUSTOM_KEYS:{''apiDefault'':false}'
                            example: false
                            type: boolean
                          maximum_speed:
                            description: 'The maximum speed specified by user.CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-*'']}}'
                            example: 90
                            format: double
                            type: number
                          options:
                            description: 'For advanced options formatted as json object. For structure refer to the [these examples](https://GIScience.github.io/openrouteservice/documentation/routing-options/Examples.html).'
                            example:
                              avoid_borders: controlled
                            properties:
                              avoid_borders:
                                description: '`all` for no border crossing. `controlled` to cross open borders but avoid controlled ones. Only for `driving-*` profiles. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-*'']}}'
                                enum:
                                  - all
                                  - controlled
                                  - none
                                example: controlled
                                type: string
                              avoid_countries:
                                description: 'List of countries to exclude from matrix with `driving-*` profiles. Can be used together with `''avoid_borders'': ''controlled''`. `[ 11, 193 ]` would exclude Austria and Switzerland. List of countries and application examples can be found [here](https://GIScience.github.io/openrouteservice/documentation/routing-options/Country-List.html). Also, ISO standard country codes cna be used in place of the numerical ids, for example, DE or DEU for Germany. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-*'']}}'
                                example:
                                  - 11
                                  - 193
                                items:
                                  type: string
                                type: array
                              avoid_features:
                                description: 'List of features to avoid. CUSTOM_KEYS:{''itemRestrictions'':{''ref'':''profile'', ''itemsWhen'':{''driving-*'':[''highways'',''tollways'',''ferries''],''cycling-*'':[''ferries'',''steps'',''fords''],''foot-*'':[''ferries'',''fords'',''steps''],''wheelchair'':[''ferries'',''steps'']}}}'
                                example:
                                  - highways
                                items:
                                  enum:
                                    - ferries
                                    - fords
                                    - highways
                                    - steps
                                    - tollways
                                  type: string
                                type: array
                              avoid_polygons:
                                additionalProperties:
                                  type: object
                                description: Comprises areas to be avoided for the route. Formatted in GeoJSON as either a Polygon or Multipolygon object.
                                type: object
                              profile_params:
                                description: ' Specifies additional matrix parameters.CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''valueNot'':[''driving-car'']}}'
                                properties:
                                  allow_unsuitable:
                                    description: 'Specifies if ways that might not be suitable (e.g. unknown pedestrian usage) should be included in finding routes - default falseCUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                    example: true
                                    type: boolean
                                  restrictions:
                                    description: Describe restrictions to be applied to edges on the routing. any edges that do not match these restrictions are not traversed.
                                    properties:
                                      axleload:
                                        description: 'Axleload restriction in tons. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                                        example: 50
                                        format: float
                                        type: number
                                      hazmat:
                                        description: 'Specifies whether to use appropriate routing for delivering hazardous goods and avoiding water protected areas. Default is `false`. CUSTOM_KEYS:{''apiDefault'':false,''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                                        type: boolean
                                      height:
                                        description: 'Height restriction in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                                        example: 4.2
                                        format: float
                                        type: number
                                      length:
                                        description: 'Length restriction in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                                        example: 8.4
                                        format: float
                                        type: number
                                      maximum_incline:
                                        description: 'Specifies the maximum incline as a percentage. `3`, `6` (default), `10`, `15.CUSTOM_KEYS:{''apiDefault'':6,''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                        example: 3
                                        format: int32
                                        type: integer
                                      maximum_sloped_kerb:
                                        description: 'Specifies the maximum height of the sloped curb in metres. Values are `0.03`, `0.06` (default), `0.1`.CUSTOM_KEYS:{''apiDefault'':0.6,''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                        example: 0.03
                                        format: float
                                        type: number
                                      minimum_width:
                                        description: 'Specifies the minimum width of the footway in metres.CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                        example: 2.5
                                        format: float
                                        type: number
                                      smoothness_type:
                                        description: 'Specifies the minimum smoothness of the route. Default is `good`.CUSTOM_KEYS:{''apiDefault'':''good'',''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                        enum:
                                          - bad
                                          - excellent
                                          - good
                                          - horrible
                                          - impassable
                                          - intermediate
                                          - very_bad
                                          - very_horrible
                                        example: best
                                        type: string
                                      surface_type:
                                        description: 'Specifies the minimum surface type. Default is `sett`. CUSTOM_KEYS:{''apiDefault'':''sett'',''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                        example: asphalt
                                        type: string
                                      track_type:
                                        description: 'Specifies the minimum grade of the route. Default is `grade1`. CUSTOM_KEYS:{''apiDefault'':''grade1'',''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                        example: grade2
                                        type: string
                                      weight:
                                        description: 'Weight restriction in tons. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                                        example: 40
                                        format: float
                                        type: number
                                      width:
                                        description: 'Width restriction in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                                        example: 5.6
                                        format: float
                                        type: number
                                    title: Restrictions
                                    type: object
                                  surface_quality_known:
                                    description: 'Specifies whether to enforce that only ways with known information on surface quality be taken into account - default falseCUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                    example: true
                                    type: boolean
                                  weightings:
                                    description: Describe additional weightings to be applied to edges on the routing.
                                    properties:
                                      csvColumn:
                                        type: string
                                      csv_column:
                                        description: Specifies the csv column name
                                        type: string
                                      csv_factor:
                                        description: Specifies the factor of csv-column (range 0 to 1)
                                        format: float
                                        type: number
                                      green:
                                        description: |-
                                          Specifies the Green factor for `foot-*` profiles.

                                          factor: Multiplication factor range from 0 to 1. 0 is the green routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer ways through green areas over a shorter route. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['foot-*']}}
                                        example: 0.4
                                        format: float
                                        type: number
                                      quiet:
                                        description: |-
                                          Specifies the Quiet factor for foot-* profiles.

                                          factor: Multiplication factor range from 0 to 1. 0 is the quiet routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer quiet ways over a shorter route. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['foot-*']}}
                                        example: 0.8
                                        format: float
                                        type: number
                                      shadow:
                                        description: |-
                                          Specifies the shadow factor for `foot-*` profiles.

                                          factor: Multiplication factor range from 0 to 1. 0 is the shadow routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer ways through shadow areas over a shorter route. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['foot-*']}}
                                        example: 0.4
                                        format: float
                                        type: number
                                      steepness_difficulty:
                                        description: |-
                                          Specifies the fitness level for `cycling-*` profiles.

                                           level: 0 = Novice, 1 = Moderate, 2 = Amateur, 3 = Pro. The prefered gradient increases with level. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['cycling-*']}}
                                        example: 2
                                        format: int32
                                        type: integer
                                    title: Profile Weightings
                                    type: object
                                title: Profile Parameters
                                type: object
                              round_trip:
                                description: Options to be applied on round trip routes.
                                example:
                                  length: 10000
                                  points: 5
                                properties:
                                  length:
                                    description: 'The target length of the route in `m` (note that this is a preferred value, but results may be different).'
                                    example: 10000
                                    format: float
                                    type: number
                                  points:
                                    description: The number of points to use on the route. Larger values create more circular routes.
                                    example: 5
                                    format: int32
                                    type: integer
                                  seed:
                                    description: A seed to use for adding randomisation to the overall direction of the generated route
                                    example: 1
                                    format: int64
                                    type: integer
                                title: Round Trip Route Options
                                type: object
                              vehicle_type:
                                description: '(for profile=driving-hgv only): hgv,bus,agricultural,delivery,forestry and goods. It is needed for vehicle restrictions to work. CUSTOM_KEYS:{''apiDefault'':''hgv'',''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                                enum:
                                  - agricultural
                                  - bus
                                  - delivery
                                  - forestry
                                  - goods
                                  - hgv
                                  - unknown
                                type: string
                            title: Route Options
                            type: object
                          preference:
                            description: 'Specifies the route preference. CUSTOM_KEYS:{''apiDefault'':''recommended''}'
                            enum:
                              - fastest
                              - recommended
                              - shortest
                            example: recommended
                            type: string
                          radiuses:
                            description: 'A list of maximum distances (measured in metres) that limit the search of nearby road segments to every given waypoint. The values must be greater than 0, the value of -1 specifies using the maximum possible search radius. The number of radiuses correspond to the number of waypoints. If only a single value is given, it will be applied to all waypoints.'
                            example:
                              - 200
                              - -1
                              - 30
                            items:
                              format: double
                              type: number
                            type: array
                          roundabout_exits:
                            description: 'Provides bearings of the entrance and all passed roundabout exits. Adds the `exit_bearings` array to the step object in the response. CUSTOM_KEYS:{''apiDefault'':false}'
                            example: false
                            type: boolean
                          skip_segments:
                            description: Specifies the segments that should be skipped in the route calculation. A segment is the connection between two given coordinates and the counting starts with 1 for the connection between the first and second coordinate.
                            example:
                              - 2
                              - 4
                            items:
                              format: int32
                              type: integer
                            type: array
                          suppress_warnings:
                            description: Suppress warning messages in the response
                            example: false
                            type: boolean
                          units:
                            description: 'Specifies the distance unit. CUSTOM_KEYS:{''apiDefault'':''m''}'
                            enum:
                              - km
                              - m
                              - mi
                            example: m
                            type: string
                        required:
                          - coordinates
                        title: Directions Service
                        type: object
                    description: The information that was used for generating the route
                    title: Directions Service
                  service:
                    description: The service that was requested
                    example: routing
                    type: string
                  system_message:
                    description: System message
                    example: A message string configured in the service
                    type: string
                  timestamp:
                    description: Time that the request was made (UNIX Epoch time)
                    example: 1549549847974
                    format: int64
                    type: integer
                title: RouteResponseInfo
                type: object
              routes:
                description: A list of routes returned from the request
                items:
                  description: An individual JSON based route created by the service
                  properties:
                    arrival:
                      description: 'Arrival date and timeCUSTOM_KEYS:{''validWhen'':{''ref'':''arrival'',''value'':true}}'
                      example: '2020-01-31T13:15:00+01:00'
                      format: date-time
                      type: string
                    bbox:
                      description: A bounding box which contains the entire route
                      example:
                        - 49.414057
                        - 8.680894
                        - 49.420514
                        - 8.690123
                      items:
                        format: double
                        type: number
                      type: array
                    departure:
                      description: 'Departure date and timeCUSTOM_KEYS:{''validWhen'':{''ref'':''departure'',''value'':true}}'
                      example: '2020-01-31T12:45:00+01:00'
                      format: date-time
                      type: string
                    extras:
                      additionalProperties:
                        description: An object representing one of the extra info items requested
                        properties:
                          summary:
                            description: List representing the summary of the extra info items.
                            items:
                              properties:
                                amount:
                                  description: Category percentage of the entire route.
                                  example: 23.8
                                  format: double
                                  type: number
                                distance:
                                  description: Cumulative distance of this value.
                                  example: 123.1
                                  format: double
                                  type: number
                                value:
                                  description: '[Value](https://GIScience.github.io/openrouteservice/documentation/extra-info/Extra-Info.html) of a info category.'
                                  example: 5
                                  format: double
                                  type: number
                              title: JSONExtraSummary
                              type: object
                            type: array
                          values:
                            description: |-
                              A list of values representing a section of the route. The individual values are: 
                              Value 1: Indice of the staring point of the geometry for this section,
                              Value 2: Indice of the end point of the geoemetry for this sections,
                              Value 3: [Value](https://GIScience.github.io/openrouteservice/documentation/extra-info/Extra-Info.html) assigned to this section.
                            example:
                              - - 0
                                - 3
                                - 26
                              - - 3
                                - 10
                                - 12
                            items:
                              items:
                                format: int64
                                type: integer
                              type: array
                            type: array
                        title: JSONExtra
                        type: object
                      description: List of extra info objects representing the extra info items that were requested for the route.
                      type: object
                    segments:
                      description: List containing the segments and its corresponding steps which make up the route.
                      items:
                        description: List containing the segments and its correspoding steps which make up the route.
                        properties:
                          ascent:
                            description: ' Contains ascent of this segment in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''elevation'',value:true}}'
                            example: 56.3
                            format: double
                            type: number
                          avgspeed:
                            description: 'Contains the average speed of this segment in km/h. CUSTOM_KEYS:{''validWhen'':{''ref'':''attributes'',''valueContains'':''avgspeed''}}'
                            example: 56.3
                            format: double
                            type: number
                          descent:
                            description: 'Contains descent of this segment in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''elevation'',value:true}}'
                            example: 45.2
                            format: double
                            type: number
                          detourfactor:
                            description: 'Contains the deviation compared to a straight line that would have the factor `1`. Double the Distance would be a `2`. CUSTOM_KEYS:{''validWhen'':{''ref'':''attributes'',''valueContains'':''detourfactor''}}'
                            example: 0.5
                            format: double
                            type: number
                          distance:
                            description: Contains the distance of the segment in specified units.
                            example: 253
                            format: double
                            type: number
                          duration:
                            description: Contains the duration of the segment in seconds.
                            example: 37.7
                            format: double
                            type: number
                          percentage:
                            description: 'Contains the proportion of the route in percent. CUSTOM_KEYS:{''validWhen'':{''ref'':''attributes'',''valueContains'':''percentage''}}'
                            example: 43.2
                            format: double
                            type: number
                          steps:
                            description: List containing the specific steps the segment consists of.
                            items:
                              description: Step of a route segment
                              properties:
                                distance:
                                  description: The distance for the step in metres.
                                  example: 245
                                  format: double
                                  type: number
                                duration:
                                  description: The duration for the step in seconds.
                                  example: 96.2
                                  format: double
                                  type: number
                                exit_bearings:
                                  description: 'Contains the bearing of the entrance and all passed exits in a roundabout  CUSTOM_KEYS:{''validWhen'':{''ref'':''roundabout_exits'',value:true}}.'
                                  example:
                                    - 10
                                    - 45
                                    - 60
                                  items:
                                    format: int32
                                    type: integer
                                  type: array
                                exit_number:
                                  description: Only for roundabouts. Contains the number of the exit to take.
                                  example: 2
                                  format: int32
                                  type: integer
                                instruction:
                                  description: The routing instruction text for the step.
                                  example: Turn right onto Berliner Straße
                                  type: string
                                maneuver:
                                  description: 'The maneuver to be performed  CUSTOM_KEYS:{''validWhen'':{''ref'':''maneuvers'',value:true}}'
                                  properties:
                                    bearing_after:
                                      description: The azimuth angle (in degrees) of the direction right after the maneuver.
                                      example: 96
                                      format: int32
                                      type: integer
                                    bearing_before:
                                      description: The azimuth angle (in degrees) of the direction right before the maneuver.
                                      example: 24
                                      format: int32
                                      type: integer
                                    location:
                                      description: The coordinate of the point where a maneuver takes place.
                                      example:
                                        - 8.678962
                                        - 49.407819
                                      items:
                                        format: double
                                        type: number
                                      type: array
                                  title: JSONStepManeuver
                                  type: object
                                name:
                                  description: The name of the next street.
                                  example: Berliner Straße
                                  type: string
                                type:
                                  description: 'The [instruction](https://GIScience.github.io/openrouteservice/documentation/Instruction-Types.html) action for symbolisation purposes.'
                                  example: 1
                                  format: int32
                                  type: integer
                                way_points:
                                  description: List containing the indices of the steps start- and endpoint corresponding to the *geometry*.
                                  example:
                                    - 45
                                    - 48
                                  items:
                                    format: int32
                                    type: integer
                                  type: array
                              title: JSONStep
                              type: object
                            type: array
                        title: JSONSegment
                        type: object
                      type: array
                    summary:
                      description: Summary information about the route
                      properties:
                        ascent:
                          description: 'Total ascent in meters.CUSTOM_KEYS:{''validWhen'':{''ref'':''elevation'',''value'':true}}'
                          example: 166.3
                          format: double
                          type: number
                        descent:
                          description: 'Total descent in meters.CUSTOM_KEYS:{''validWhen'':{''ref'':''elevation'',''value'':true}}'
                          example: 201.3
                          format: double
                          type: number
                        distance:
                          description: Total route distance in specified units.
                          example: 12.6
                          format: double
                          type: number
                        duration:
                          description: Total duration in seconds.
                          example: 604
                          format: double
                          type: number
                      title: JSONSummary
                      type: object
                    warnings:
                      description: List of warnings that have been generated for the route
                      items:
                        description: Informs about possible difficulties like access restrictions on the generated route. Generates a corresponding `extras` object with the affected segments.
                        properties:
                          code:
                            description: Identification code for the warning
                            example: 1
                            format: int32
                            type: integer
                          message:
                            description: The message associated with the warning
                            example: This route may go over restricted roads
                            type: string
                        title: JSONWarning
                        type: object
                      type: array
                    way_points:
                      description: List containing the indices of way points corresponding to the *geometry*.
                      example:
                        - 0
                        - 23
                      items:
                        format: int32
                        type: integer
                      type: array
                  title: JSONIndividualRouteResponse
                  type: object
                type: array
            title: JSONRouteResponse
            type: object
        '201':
          description: Created
        '400':
          description: The request is incorrect and therefore can not be processed.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: 'An element could not be found. If possible, a more detailed error code is provided.'
        '405':
          description: 'The specified HTTP method is not supported. For more details, refer to the EndPoint documentation.'
        '413':
          description: 'The request is larger than the server is able to process, the data provided in the request exceeds the capacity limit.'
        '500':
          description: An unexpected error was encountered and a more detailed error code is provided.
        '501':
          description: Indicates that the server does not support the functionality needed to fulfill the request.
        '503':
          description: The server is currently unavailable due to overload or maintenance.
      summary: Directions Service JSON (POST)
      tags:
        - Directions
  /v2/health:
    get:
      operationId: fetchHealthUsingGET
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: object
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      summary: fetchHealth
      tags:
        - health-api
  '/v2/isochrones/{profile}':
    post:
      consumes:
        - application/json
        - application/geo+json
      description: |-
        The Isochrone Service supports time and distance analyses for one single or multiple locations.
        You may also specify the isochrone interval or provide multiple exact isochrone range values.
        This service allows the same range of profile options as the /directions endpoint,
        which help you to further customize your request to obtain a more detailed reachability area response.
      operationId: getDefaultIsochronesUsingPOST
      parameters:
        - description: Specifies the route profile.
          enum:
            - cycling-electric
            - cycling-mountain
            - cycling-regular
            - cycling-road
            - driving-car
            - driving-hgv
            - foot-hiking
            - foot-walking
            - wheelchair
          in: path
          name: profile
          required: true
          type: string
          x-example: driving-car
        - description: The request payload
          in: body
          name: request
          required: true
          schema:
            description: The JSON body request sent to the isochrones service which defines options and parameters regarding the isochrones to generate.
            properties:
              area_units:
                description: |-
                  Specifies the area unit.
                  Default: m. CUSTOM_KEYS:{'apiDefault':'m','validWhen':{'ref':'attributes','value':'area'}}
                enum:
                  - km
                  - m
                  - mi
                type: string
              attributes:
                description: List of isochrones attributes
                example:
                  - area
                items:
                  enum:
                    - area
                    - reachfactor
                    - total_pop
                  type: string
                type: array
              id:
                description: Arbitrary identification string of the request reflected in the meta information.
                example: centrality_request
                type: string
              intersections:
                description: 'Specifies whether to return intersecting polygons. CUSTOM_KEYS:{''apiDefault'':false}'
                type: boolean
              interval:
                description: Interval of isochrones or equidistants. This is only used if a single range value is given. Value in **seconds** for time and **meters** for distance.
                example: 30
                format: double
                type: number
              location_type:
                description: '`start` treats the location(s) as starting point, `destination` as goal. CUSTOM_KEYS:{''apiDefault'':''start''}'
                enum:
                  - destination
                  - start
                example: start
                type: string
              locations:
                description: 'The locations to use for the route as an array of `longitude/latitude` pairs in WGS 84 (EPSG:4326)'
                example:
                  - - 8.681495
                    - 49.41461
                  - - 8.686507
                    - 49.41943
                items:
                  items:
                    format: double
                    type: number
                  type: array
                type: array
              options:
                description: Additional options for the isochrones request
                example:
                  avoid_borders: all
                properties:
                  avoid_borders:
                    description: '`all` for no border crossing. `controlled` to cross open borders but avoid controlled ones. Only for `driving-*` profiles. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-*'']}}'
                    enum:
                      - all
                      - controlled
                      - none
                    example: controlled
                    type: string
                  avoid_countries:
                    description: 'List of countries to exclude from matrix with `driving-*` profiles. Can be used together with `''avoid_borders'': ''controlled''`. `[ 11, 193 ]` would exclude Austria and Switzerland. List of countries and application examples can be found [here](https://GIScience.github.io/openrouteservice/documentation/routing-options/Country-List.html). Also, ISO standard country codes cna be used in place of the numerical ids, for example, DE or DEU for Germany. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-*'']}}'
                    example:
                      - 11
                      - 193
                    items:
                      type: string
                    type: array
                  avoid_features:
                    description: 'List of features to avoid. CUSTOM_KEYS:{''itemRestrictions'':{''ref'':''profile'', ''itemsWhen'':{''driving-*'':[''highways'',''tollways'',''ferries''],''cycling-*'':[''ferries'',''steps'',''fords''],''foot-*'':[''ferries'',''fords'',''steps''],''wheelchair'':[''ferries'',''steps'']}}}'
                    example:
                      - highways
                    items:
                      enum:
                        - ferries
                        - fords
                        - highways
                        - steps
                        - tollways
                      type: string
                    type: array
                  avoid_polygons:
                    additionalProperties:
                      type: object
                    description: Comprises areas to be avoided for the route. Formatted in GeoJSON as either a Polygon or Multipolygon object.
                    type: object
                  profile_params:
                    description: ' Specifies additional matrix parameters.CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''valueNot'':[''driving-car'']}}'
                    properties:
                      allow_unsuitable:
                        description: 'Specifies if ways that might not be suitable (e.g. unknown pedestrian usage) should be included in finding routes - default falseCUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                        example: true
                        type: boolean
                      restrictions:
                        description: Describe restrictions to be applied to edges on the routing. any edges that do not match these restrictions are not traversed.
                        properties:
                          axleload:
                            description: 'Axleload restriction in tons. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                            example: 50
                            format: float
                            type: number
                          hazmat:
                            description: 'Specifies whether to use appropriate routing for delivering hazardous goods and avoiding water protected areas. Default is `false`. CUSTOM_KEYS:{''apiDefault'':false,''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                            type: boolean
                          height:
                            description: 'Height restriction in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                            example: 4.2
                            format: float
                            type: number
                          length:
                            description: 'Length restriction in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                            example: 8.4
                            format: float
                            type: number
                          maximum_incline:
                            description: 'Specifies the maximum incline as a percentage. `3`, `6` (default), `10`, `15.CUSTOM_KEYS:{''apiDefault'':6,''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                            example: 3
                            format: int32
                            type: integer
                          maximum_sloped_kerb:
                            description: 'Specifies the maximum height of the sloped curb in metres. Values are `0.03`, `0.06` (default), `0.1`.CUSTOM_KEYS:{''apiDefault'':0.6,''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                            example: 0.03
                            format: float
                            type: number
                          minimum_width:
                            description: 'Specifies the minimum width of the footway in metres.CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                            example: 2.5
                            format: float
                            type: number
                          smoothness_type:
                            description: 'Specifies the minimum smoothness of the route. Default is `good`.CUSTOM_KEYS:{''apiDefault'':''good'',''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                            enum:
                              - bad
                              - excellent
                              - good
                              - horrible
                              - impassable
                              - intermediate
                              - very_bad
                              - very_horrible
                            example: best
                            type: string
                          surface_type:
                            description: 'Specifies the minimum surface type. Default is `sett`. CUSTOM_KEYS:{''apiDefault'':''sett'',''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                            example: asphalt
                            type: string
                          track_type:
                            description: 'Specifies the minimum grade of the route. Default is `grade1`. CUSTOM_KEYS:{''apiDefault'':''grade1'',''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                            example: grade2
                            type: string
                          weight:
                            description: 'Weight restriction in tons. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                            example: 40
                            format: float
                            type: number
                          width:
                            description: 'Width restriction in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                            example: 5.6
                            format: float
                            type: number
                        title: Restrictions
                        type: object
                      surface_quality_known:
                        description: 'Specifies whether to enforce that only ways with known information on surface quality be taken into account - default falseCUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                        example: true
                        type: boolean
                      weightings:
                        description: Describe additional weightings to be applied to edges on the routing.
                        properties:
                          csvColumn:
                            type: string
                          csv_column:
                            description: Specifies the csv column name
                            type: string
                          csv_factor:
                            description: Specifies the factor of csv-column (range 0 to 1)
                            format: float
                            type: number
                          green:
                            description: |-
                              Specifies the Green factor for `foot-*` profiles.

                              factor: Multiplication factor range from 0 to 1. 0 is the green routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer ways through green areas over a shorter route. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['foot-*']}}
                            example: 0.4
                            format: float
                            type: number
                          quiet:
                            description: |-
                              Specifies the Quiet factor for foot-* profiles.

                              factor: Multiplication factor range from 0 to 1. 0 is the quiet routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer quiet ways over a shorter route. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['foot-*']}}
                            example: 0.8
                            format: float
                            type: number
                          shadow:
                            description: |-
                              Specifies the shadow factor for `foot-*` profiles.

                              factor: Multiplication factor range from 0 to 1. 0 is the shadow routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer ways through shadow areas over a shorter route. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['foot-*']}}
                            example: 0.4
                            format: float
                            type: number
                          steepness_difficulty:
                            description: |-
                              Specifies the fitness level for `cycling-*` profiles.

                               level: 0 = Novice, 1 = Moderate, 2 = Amateur, 3 = Pro. The prefered gradient increases with level. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['cycling-*']}}
                            example: 2
                            format: int32
                            type: integer
                        title: Profile Weightings
                        type: object
                    title: Profile Parameters
                    type: object
                  round_trip:
                    description: Options to be applied on round trip routes.
                    example:
                      length: 10000
                      points: 5
                    properties:
                      length:
                        description: 'The target length of the route in `m` (note that this is a preferred value, but results may be different).'
                        example: 10000
                        format: float
                        type: number
                      points:
                        description: The number of points to use on the route. Larger values create more circular routes.
                        example: 5
                        format: int32
                        type: integer
                      seed:
                        description: A seed to use for adding randomisation to the overall direction of the generated route
                        example: 1
                        format: int64
                        type: integer
                    title: Round Trip Route Options
                    type: object
                  vehicle_type:
                    description: '(for profile=driving-hgv only): hgv,bus,agricultural,delivery,forestry and goods. It is needed for vehicle restrictions to work. CUSTOM_KEYS:{''apiDefault'':''hgv'',''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                    enum:
                      - agricultural
                      - bus
                      - delivery
                      - forestry
                      - goods
                      - hgv
                      - unknown
                    type: string
                title: Route Options
                type: object
              range:
                description: Maximum range value of the analysis in **seconds** for time and **metres** for distance.Alternatively a comma separated list of specific range values. Ranges will be the same for all locations.
                example:
                  - 300
                  - 200
                items:
                  format: double
                  type: number
                type: array
              range_type:
                description: 'Specifies the isochrones reachability type. CUSTOM_KEYS:{''apiDefault'':''time''}'
                enum:
                  - distance
                  - time
                example: time
                type: string
              smoothing:
                description: |-
                  Applies a level of generalisation to the isochrone polygons generated as a `smoothing_factor` between `0` and `100.0`.
                  Generalisation is produced by determining a maximum length of a connecting line between two points found on the outside of a containing polygon.
                  If the distance is larger than a threshold value, the line between the two points is removed and a smaller connecting line between other points is used.
                  Note that the minimum length of this connecting line is ~1333m, and so when the `smoothing_factor` results in a distance smaller than this, the minimum value is used.
                  The threshold value is determined as `(maximum_radius_of_isochrone / 100) * smoothing_factor`.
                  Therefore, a value closer to 100 will result in a more generalised shape.
                  The polygon generation algorithm is based on Duckham and al. (2008) `"Efficient generation of simple polygons for characterizing the shape of a set of points in the plane."`
                example: 25
                format: double
                type: number
              units:
                description: |-
                  Specifies the distance units only if `range_type` is set to distance.
                  Default: m. CUSTOM_KEYS:{'apiDefault':'m','validWhen':{'ref':'range_type','value':'distance'}}
                enum:
                  - km
                  - m
                  - mi
                example: m
                type: string
            required:
              - locations
              - range
            title: IsochronesRequest
            type: object
      produces:
        - application/geo+json;charset=UTF-8
      responses:
        '200':
          description: Standard response for successfully processed requests. Returns GeoJSON.
          schema:
            properties:
              bbox:
                description: Bounding box that covers all returned isochrones
                example:
                  - 49.414057
                  - 8.680894
                  - 49.420514
                  - 8.690123
                items:
                  format: double
                  type: number
                type: array
              features:
                items:
                  properties:
                    geometry:
                      additionalProperties:
                        type: object
                      type: object
                    type:
                      type: string
                  title: GeoJSONIsochroneBase
                  type: object
                type: array
              metadata:
                description: Information about the request
                properties:
                  attribution:
                    description: Copyright and attribution information
                    example: openrouteservice.org | OpenStreetMap contributors
                    type: string
                  engine:
                    description: Information about the isochrones service
                    properties:
                      build_date:
                        description: The date that the service was last updated
                        example: '2019-02-07T14:28:11Z'
                        type: string
                      graph_date:
                        description: The date that the graph data was last updated
                        example: '2019-02-07T14:28:11Z'
                        type: string
                      version:
                        description: The backend version of the openrouteservice that was queried
                        example: 5
                        type: string
                    title: EngineInfo
                    type: object
                  id:
                    description: ID of the request (as passed in by the query)
                    example: request123
                    type: string
                  osm_file_md5_hash:
                    description: The MD5 hash of the OSM planet file that was used for generating graphs
                    example: c0327ba6
                    type: string
                  query:
                    description: The information that was used for generating the isochrones
                    properties:
                      area_units:
                        description: |-
                          Specifies the area unit.
                          Default: m. CUSTOM_KEYS:{'apiDefault':'m','validWhen':{'ref':'attributes','value':'area'}}
                        enum:
                          - km
                          - m
                          - mi
                        type: string
                      attributes:
                        description: List of isochrones attributes
                        example:
                          - area
                        items:
                          enum:
                            - area
                            - reachfactor
                            - total_pop
                          type: string
                        type: array
                      id:
                        description: Arbitrary identification string of the request reflected in the meta information.
                        example: centrality_request
                        type: string
                      intersections:
                        description: 'Specifies whether to return intersecting polygons. CUSTOM_KEYS:{''apiDefault'':false}'
                        type: boolean
                      interval:
                        description: Interval of isochrones or equidistants. This is only used if a single range value is given. Value in **seconds** for time and **meters** for distance.
                        example: 30
                        format: double
                        type: number
                      location_type:
                        description: '`start` treats the location(s) as starting point, `destination` as goal. CUSTOM_KEYS:{''apiDefault'':''start''}'
                        enum:
                          - destination
                          - start
                        example: start
                        type: string
                      locations:
                        description: 'The locations to use for the route as an array of `longitude/latitude` pairs in WGS 84 (EPSG:4326)'
                        example:
                          - - 8.681495
                            - 49.41461
                          - - 8.686507
                            - 49.41943
                        items:
                          items:
                            format: double
                            type: number
                          type: array
                        type: array
                      options:
                        description: Additional options for the isochrones request
                        example:
                          avoid_borders: all
                        properties:
                          avoid_borders:
                            description: '`all` for no border crossing. `controlled` to cross open borders but avoid controlled ones. Only for `driving-*` profiles. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-*'']}}'
                            enum:
                              - all
                              - controlled
                              - none
                            example: controlled
                            type: string
                          avoid_countries:
                            description: 'List of countries to exclude from matrix with `driving-*` profiles. Can be used together with `''avoid_borders'': ''controlled''`. `[ 11, 193 ]` would exclude Austria and Switzerland. List of countries and application examples can be found [here](https://GIScience.github.io/openrouteservice/documentation/routing-options/Country-List.html). Also, ISO standard country codes cna be used in place of the numerical ids, for example, DE or DEU for Germany. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-*'']}}'
                            example:
                              - 11
                              - 193
                            items:
                              type: string
                            type: array
                          avoid_features:
                            description: 'List of features to avoid. CUSTOM_KEYS:{''itemRestrictions'':{''ref'':''profile'', ''itemsWhen'':{''driving-*'':[''highways'',''tollways'',''ferries''],''cycling-*'':[''ferries'',''steps'',''fords''],''foot-*'':[''ferries'',''fords'',''steps''],''wheelchair'':[''ferries'',''steps'']}}}'
                            example:
                              - highways
                            items:
                              enum:
                                - ferries
                                - fords
                                - highways
                                - steps
                                - tollways
                              type: string
                            type: array
                          avoid_polygons:
                            additionalProperties:
                              type: object
                            description: Comprises areas to be avoided for the route. Formatted in GeoJSON as either a Polygon or Multipolygon object.
                            type: object
                          profile_params:
                            description: ' Specifies additional matrix parameters.CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''valueNot'':[''driving-car'']}}'
                            properties:
                              allow_unsuitable:
                                description: 'Specifies if ways that might not be suitable (e.g. unknown pedestrian usage) should be included in finding routes - default falseCUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                example: true
                                type: boolean
                              restrictions:
                                description: Describe restrictions to be applied to edges on the routing. any edges that do not match these restrictions are not traversed.
                                properties:
                                  axleload:
                                    description: 'Axleload restriction in tons. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                                    example: 50
                                    format: float
                                    type: number
                                  hazmat:
                                    description: 'Specifies whether to use appropriate routing for delivering hazardous goods and avoiding water protected areas. Default is `false`. CUSTOM_KEYS:{''apiDefault'':false,''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                                    type: boolean
                                  height:
                                    description: 'Height restriction in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                                    example: 4.2
                                    format: float
                                    type: number
                                  length:
                                    description: 'Length restriction in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                                    example: 8.4
                                    format: float
                                    type: number
                                  maximum_incline:
                                    description: 'Specifies the maximum incline as a percentage. `3`, `6` (default), `10`, `15.CUSTOM_KEYS:{''apiDefault'':6,''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                    example: 3
                                    format: int32
                                    type: integer
                                  maximum_sloped_kerb:
                                    description: 'Specifies the maximum height of the sloped curb in metres. Values are `0.03`, `0.06` (default), `0.1`.CUSTOM_KEYS:{''apiDefault'':0.6,''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                    example: 0.03
                                    format: float
                                    type: number
                                  minimum_width:
                                    description: 'Specifies the minimum width of the footway in metres.CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                    example: 2.5
                                    format: float
                                    type: number
                                  smoothness_type:
                                    description: 'Specifies the minimum smoothness of the route. Default is `good`.CUSTOM_KEYS:{''apiDefault'':''good'',''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                    enum:
                                      - bad
                                      - excellent
                                      - good
                                      - horrible
                                      - impassable
                                      - intermediate
                                      - very_bad
                                      - very_horrible
                                    example: best
                                    type: string
                                  surface_type:
                                    description: 'Specifies the minimum surface type. Default is `sett`. CUSTOM_KEYS:{''apiDefault'':''sett'',''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                    example: asphalt
                                    type: string
                                  track_type:
                                    description: 'Specifies the minimum grade of the route. Default is `grade1`. CUSTOM_KEYS:{''apiDefault'':''grade1'',''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                    example: grade2
                                    type: string
                                  weight:
                                    description: 'Weight restriction in tons. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                                    example: 40
                                    format: float
                                    type: number
                                  width:
                                    description: 'Width restriction in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                                    example: 5.6
                                    format: float
                                    type: number
                                title: Restrictions
                                type: object
                              surface_quality_known:
                                description: 'Specifies whether to enforce that only ways with known information on surface quality be taken into account - default falseCUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                example: true
                                type: boolean
                              weightings:
                                description: Describe additional weightings to be applied to edges on the routing.
                                properties:
                                  csvColumn:
                                    type: string
                                  csv_column:
                                    description: Specifies the csv column name
                                    type: string
                                  csv_factor:
                                    description: Specifies the factor of csv-column (range 0 to 1)
                                    format: float
                                    type: number
                                  green:
                                    description: |-
                                      Specifies the Green factor for `foot-*` profiles.

                                      factor: Multiplication factor range from 0 to 1. 0 is the green routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer ways through green areas over a shorter route. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['foot-*']}}
                                    example: 0.4
                                    format: float
                                    type: number
                                  quiet:
                                    description: |-
                                      Specifies the Quiet factor for foot-* profiles.

                                      factor: Multiplication factor range from 0 to 1. 0 is the quiet routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer quiet ways over a shorter route. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['foot-*']}}
                                    example: 0.8
                                    format: float
                                    type: number
                                  shadow:
                                    description: |-
                                      Specifies the shadow factor for `foot-*` profiles.

                                      factor: Multiplication factor range from 0 to 1. 0 is the shadow routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer ways through shadow areas over a shorter route. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['foot-*']}}
                                    example: 0.4
                                    format: float
                                    type: number
                                  steepness_difficulty:
                                    description: |-
                                      Specifies the fitness level for `cycling-*` profiles.

                                       level: 0 = Novice, 1 = Moderate, 2 = Amateur, 3 = Pro. The prefered gradient increases with level. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['cycling-*']}}
                                    example: 2
                                    format: int32
                                    type: integer
                                title: Profile Weightings
                                type: object
                            title: Profile Parameters
                            type: object
                          round_trip:
                            description: Options to be applied on round trip routes.
                            example:
                              length: 10000
                              points: 5
                            properties:
                              length:
                                description: 'The target length of the route in `m` (note that this is a preferred value, but results may be different).'
                                example: 10000
                                format: float
                                type: number
                              points:
                                description: The number of points to use on the route. Larger values create more circular routes.
                                example: 5
                                format: int32
                                type: integer
                              seed:
                                description: A seed to use for adding randomisation to the overall direction of the generated route
                                example: 1
                                format: int64
                                type: integer
                            title: Round Trip Route Options
                            type: object
                          vehicle_type:
                            description: '(for profile=driving-hgv only): hgv,bus,agricultural,delivery,forestry and goods. It is needed for vehicle restrictions to work. CUSTOM_KEYS:{''apiDefault'':''hgv'',''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                            enum:
                              - agricultural
                              - bus
                              - delivery
                              - forestry
                              - goods
                              - hgv
                              - unknown
                            type: string
                        title: Route Options
                        type: object
                      range:
                        description: Maximum range value of the analysis in **seconds** for time and **metres** for distance.Alternatively a comma separated list of specific range values. Ranges will be the same for all locations.
                        example:
                          - 300
                          - 200
                        items:
                          format: double
                          type: number
                        type: array
                      range_type:
                        description: 'Specifies the isochrones reachability type. CUSTOM_KEYS:{''apiDefault'':''time''}'
                        enum:
                          - distance
                          - time
                        example: time
                        type: string
                      smoothing:
                        description: |-
                          Applies a level of generalisation to the isochrone polygons generated as a `smoothing_factor` between `0` and `100.0`.
                          Generalisation is produced by determining a maximum length of a connecting line between two points found on the outside of a containing polygon.
                          If the distance is larger than a threshold value, the line between the two points is removed and a smaller connecting line between other points is used.
                          Note that the minimum length of this connecting line is ~1333m, and so when the `smoothing_factor` results in a distance smaller than this, the minimum value is used.
                          The threshold value is determined as `(maximum_radius_of_isochrone / 100) * smoothing_factor`.
                          Therefore, a value closer to 100 will result in a more generalised shape.
                          The polygon generation algorithm is based on Duckham and al. (2008) `"Efficient generation of simple polygons for characterizing the shape of a set of points in the plane."`
                        example: 25
                        format: double
                        type: number
                      units:
                        description: |-
                          Specifies the distance units only if `range_type` is set to distance.
                          Default: m. CUSTOM_KEYS:{'apiDefault':'m','validWhen':{'ref':'range_type','value':'distance'}}
                        enum:
                          - km
                          - m
                          - mi
                        example: m
                        type: string
                    required:
                      - locations
                      - range
                    title: IsochronesRequest
                    type: object
                  service:
                    description: The service that was requested
                    example: isochrones
                    type: string
                  system_message:
                    description: System message
                    example: A message string configured in the service
                    type: string
                  timestamp:
                    description: Time that the request was made (UNIX Epoch time)
                    example: 1549549847974
                    format: int64
                    type: integer
                title: IsochronesResponseInfo
                type: object
              type:
                type: string
            title: GeoJSONIsochronesResponse
            type: object
        '201':
          description: Created
        '400':
          description: The request is incorrect and therefore can not be processed.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: 'An element could not be found. If possible, a more detailed error code is provided.'
        '405':
          description: 'The specified HTTP method is not supported. For more details, refer to the EndPoint documentation.'
        '413':
          description: 'The request is larger than the server is able to process, the data provided in the request exceeds the capacity limit.'
        '500':
          description: An unexpected error was encountered and a more detailed error code is provided.
        '501':
          description: Indicates that the server does not support the functionality needed to fulfill the request.
        '503':
          description: The server is currently unavailable due to overload or maintenance.
      summary: Isochrones Service
      tags:
        - Isochrones
  '/v2/matrix/{profile}':
    post:
      consumes:
        - application/json
      description: |-
        Returns duration or distance matrix for multiple source and destination points.
        By default a square duration matrix is returned where every point in locations is paired with each other. The result is null if a value can’t be determined.
      operationId: getDefaultUsingPOST_1
      parameters:
        - description: Specifies the matrix profile.
          enum:
            - cycling-electric
            - cycling-mountain
            - cycling-regular
            - cycling-road
            - driving-car
            - driving-hgv
            - foot-hiking
            - foot-walking
            - wheelchair
          in: path
          name: profile
          required: true
          type: string
          x-example: driving-car
        - description: The request payload
          in: body
          name: request
          required: true
          schema:
            description: The JSON body request sent to the matrix service which defines options and parameters regarding the matrix to generate.
            properties:
              destinations:
                description: 'A list of indices that refers to the list of locations (starting with `0`). `{index_1},{index_2}[,{index_N} ...]` or `all` (default). `[0,3]` for the first and fourth locations CUSTOM_KEYS:{''apiDefault'':[''all'']}'
                items:
                  type: string
                type: array
              id:
                description: Arbitrary identification string of the request reflected in the meta information.
                example: centrality_request
                type: string
              locations:
                description: 'List of comma separated lists of `longitude,latitude` coordinates in WGS 84 (EPSG:4326)'
                example:
                  - - 9.70093
                    - 48.477473
                  - - 9.207916
                    - 49.153868
                  - - 37.573242
                    - 55.801281
                  - - 115.663757
                    - 38.106467
                items:
                  items:
                    format: double
                    type: number
                  type: array
                type: array
              metrics:
                description: |-
                  Specifies a list of returned metrics.
                  * `distance` - Returns distance matrix for specified points in defined `units`.
                  * `duration` - Returns duration matrix for specified points in **seconds**. CUSTOM_KEYS:{'apiDefault':'duration'}
                items:
                  enum:
                    - distance
                    - duration
                  type: string
                type: array
              resolve_locations:
                description: 'Specifies whether given locations are resolved or not. If the parameter value set to `true`, every element in `destinations` and `sources` will contain a `name` element that identifies the name of the closest street. Default is `false`. CUSTOM_KEYS:{''apiDefault'':false}'
                type: boolean
              sources:
                description: 'A list of indices that refers to the list of locations (starting with `0`). `{index_1},{index_2}[,{index_N} ...]` or `all` (default). example `[0,3]` for the first and fourth locations CUSTOM_KEYS:{''apiDefault'':[''all'']}'
                items:
                  type: string
                type: array
              units:
                description: |-
                  Specifies the distance unit.
                  Default: m. CUSTOM_KEYS:{'apiDefault':'m','validWhen':{'ref':'metrics','value':'distance'}`}
                enum:
                  - km
                  - m
                  - mi
                type: string
            required:
              - locations
            title: MatrixRequest
            type: object
      produces:
        - application/json
        - application/json;charset=UTF-8
      responses:
        '200':
          description: Standard response for successfully processed requests. Returns JSON.
          schema:
            description: The Matrix Response contains one matrix for each specified `metrics` value.
            properties:
              destinations:
                description: The individual destinations of the matrix calculations.
                items:
                  properties:
                    location:
                      description: '{longitude},{latitude} coordinates of the closest accessible point on the routing graph'
                      example:
                        - 8.678962
                        - 49.40783
                      items:
                        format: double
                        type: number
                      type: array
                    name:
                      description: 'Name of the street the closest accessible point is situated on. Only for `resolve_locations=true` and only if name is available.CUSTOM_KEYS:{''validWhen'':{''ref'':''resolve_locations'',''value'':true}}'
                      example: Bergheimer Straße
                      type: string
                    snapped_distance:
                      description: Distance between the `source/destination` Location and the used point on the routing graph.
                      example: 1.2
                      format: double
                      type: number
                  title: JSON2DDestinations
                  type: object
                type: array
              distances:
                description: The distances of the matrix calculations.
                example:
                  - - 0
                    - 0.25
                  - - 0.25
                    - 0
                items:
                  items:
                    format: double
                    type: number
                  type: array
                type: array
              durations:
                description: The durations of the matrix calculations.
                example:
                  - - 0
                    - 25
                  - - 25
                    - 0
                items:
                  items:
                    format: double
                    type: number
                  type: array
                type: array
              metadata:
                description: Information about the service and request
                properties:
                  attribution:
                    description: Copyright and attribution information
                    example: 'openrouteservice.org, OpenStreetMap contributors'
                    type: string
                  engine:
                    description: Information about the routing service
                    properties:
                      build_date:
                        description: The date that the service was last updated
                        example: '2019-02-07T14:28:11Z'
                        type: string
                      graph_date:
                        description: The date that the graph data was last updated
                        example: '2019-02-07T14:28:11Z'
                        type: string
                      version:
                        description: The backend version of the openrouteservice that was queried
                        example: 5
                        type: string
                    title: EngineInfo
                    type: object
                  id:
                    description: ID of the request (as passed in by the query)
                    example: request123
                    type: string
                  osm_file_md5_hash:
                    description: The MD5 hash of the OSM planet file that was used for generating graphs
                    example: c0327ba6
                    type: string
                  query:
                    description: The information that was used for generating the matrix
                    properties:
                      destinations:
                        description: 'A list of indices that refers to the list of locations (starting with `0`). `{index_1},{index_2}[,{index_N} ...]` or `all` (default). `[0,3]` for the first and fourth locations CUSTOM_KEYS:{''apiDefault'':[''all'']}'
                        items:
                          type: string
                        type: array
                      id:
                        description: Arbitrary identification string of the request reflected in the meta information.
                        example: centrality_request
                        type: string
                      locations:
                        description: 'List of comma separated lists of `longitude,latitude` coordinates in WGS 84 (EPSG:4326)'
                        example:
                          - - 9.70093
                            - 48.477473
                          - - 9.207916
                            - 49.153868
                          - - 37.573242
                            - 55.801281
                          - - 115.663757
                            - 38.106467
                        items:
                          items:
                            format: double
                            type: number
                          type: array
                        type: array
                      metrics:
                        description: |-
                          Specifies a list of returned metrics.
                          * `distance` - Returns distance matrix for specified points in defined `units`.
                          * `duration` - Returns duration matrix for specified points in **seconds**. CUSTOM_KEYS:{'apiDefault':'duration'}
                        items:
                          enum:
                            - distance
                            - duration
                          type: string
                        type: array
                      resolve_locations:
                        description: 'Specifies whether given locations are resolved or not. If the parameter value set to `true`, every element in `destinations` and `sources` will contain a `name` element that identifies the name of the closest street. Default is `false`. CUSTOM_KEYS:{''apiDefault'':false}'
                        type: boolean
                      sources:
                        description: 'A list of indices that refers to the list of locations (starting with `0`). `{index_1},{index_2}[,{index_N} ...]` or `all` (default). example `[0,3]` for the first and fourth locations CUSTOM_KEYS:{''apiDefault'':[''all'']}'
                        items:
                          type: string
                        type: array
                      units:
                        description: |-
                          Specifies the distance unit.
                          Default: m. CUSTOM_KEYS:{'apiDefault':'m','validWhen':{'ref':'metrics','value':'distance'}`}
                        enum:
                          - km
                          - m
                          - mi
                        type: string
                    required:
                      - locations
                    title: MatrixRequest
                    type: object
                  service:
                    description: The service that was requested
                    example: matrix
                    type: string
                  system_message:
                    description: System message
                    example: A message string configured in the service
                    type: string
                  timestamp:
                    description: Time that the request was made (UNIX Epoch time)
                    example: 1549549847974
                    format: int64
                    type: integer
                title: MatrixResponseInfo
                type: object
              sources:
                description: The individual sources of the matrix calculations.
                items:
                  properties:
                    location:
                      description: '{longitude},{latitude} coordinates of the closest accessible point on the routing graph'
                      example:
                        - 8.678962
                        - 49.40783
                      items:
                        format: double
                        type: number
                      type: array
                    name:
                      description: 'Name of the street the closest accessible point is situated on. Only for `resolve_locations=true` and only if name is available.CUSTOM_KEYS:{''validWhen'':{''ref'':''resolve_locations'',''value'':true}}'
                      example: Bergheimer Straße
                      type: string
                    snapped_distance:
                      description: Distance between the `source/destination` Location and the used point on the routing graph.
                      example: 1.2
                      format: double
                      type: number
                  title: JSON2DSources
                  type: object
                type: array
            title: JSONMatrixResponse
            type: object
        '201':
          description: Created
        '400':
          description: The request is incorrect and therefore can not be processed.
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: 'An element could not be found. If possible, a more detailed error code is provided.'
        '405':
          description: 'The specified HTTP method is not supported. For more details, refer to the EndPoint documentation.'
        '413':
          description: 'The request is larger than the server is able to process, the data provided in the request exceeds the capacity limit.'
        '500':
          description: An unexpected error was encountered and a more detailed error code is provided.
        '501':
          description: Indicates that the server does not support the functionality needed to fulfill the request.
        '503':
          description: The server is currently unavailable due to overload or maintenance.
      summary: Matrix Service
      tags:
        - Matrix
  /v2/status:
    get:
      operationId: fetchHealthUsingGET_1
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            properties:
              body:
                type: object
              statusCode:
                enum:
                  - ACCEPTED
                  - ALREADY_REPORTED
                  - BAD_GATEWAY
                  - BAD_REQUEST
                  - BANDWIDTH_LIMIT_EXCEEDED
                  - CHECKPOINT
                  - CONFLICT
                  - CONTINUE
                  - CREATED
                  - DESTINATION_LOCKED
                  - EXPECTATION_FAILED
                  - FAILED_DEPENDENCY
                  - FORBIDDEN
                  - FOUND
                  - GATEWAY_TIMEOUT
                  - GONE
                  - HTTP_VERSION_NOT_SUPPORTED
                  - IM_USED
                  - INSUFFICIENT_SPACE_ON_RESOURCE
                  - INSUFFICIENT_STORAGE
                  - INTERNAL_SERVER_ERROR
                  - I_AM_A_TEAPOT
                  - LENGTH_REQUIRED
                  - LOCKED
                  - LOOP_DETECTED
                  - METHOD_FAILURE
                  - METHOD_NOT_ALLOWED
                  - MOVED_PERMANENTLY
                  - MOVED_TEMPORARILY
                  - MULTIPLE_CHOICES
                  - MULTI_STATUS
                  - NETWORK_AUTHENTICATION_REQUIRED
                  - NON_AUTHORITATIVE_INFORMATION
                  - NOT_ACCEPTABLE
                  - NOT_EXTENDED
                  - NOT_FOUND
                  - NOT_IMPLEMENTED
                  - NOT_MODIFIED
                  - NO_CONTENT
                  - OK
                  - PARTIAL_CONTENT
                  - PAYLOAD_TOO_LARGE
                  - PAYMENT_REQUIRED
                  - PERMANENT_REDIRECT
                  - PRECONDITION_FAILED
                  - PRECONDITION_REQUIRED
                  - PROCESSING
                  - PROXY_AUTHENTICATION_REQUIRED
                  - REQUESTED_RANGE_NOT_SATISFIABLE
                  - REQUEST_ENTITY_TOO_LARGE
                  - REQUEST_HEADER_FIELDS_TOO_LARGE
                  - REQUEST_TIMEOUT
                  - REQUEST_URI_TOO_LONG
                  - RESET_CONTENT
                  - SEE_OTHER
                  - SERVICE_UNAVAILABLE
                  - SWITCHING_PROTOCOLS
                  - TEMPORARY_REDIRECT
                  - TOO_EARLY
                  - TOO_MANY_REQUESTS
                  - UNAUTHORIZED
                  - UNAVAILABLE_FOR_LEGAL_REASONS
                  - UNPROCESSABLE_ENTITY
                  - UNSUPPORTED_MEDIA_TYPE
                  - UPGRADE_REQUIRED
                  - URI_TOO_LONG
                  - USE_PROXY
                  - VARIANT_ALSO_NEGOTIATES
                type: string
              statusCodeValue:
                format: int32
                type: integer
            title: ResponseEntity
            type: object
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      summary: fetchHealth
      tags:
        - status-api
definitions:
  Alternative_Routes:
    description: 'Specifies whether alternative routes are computed, and parameters for the algorithm determining suitable alternatives.'
    properties:
      share_factor:
        description: Maximum fraction of the route that alternatives may share with the optimal route. The default value of 0.6 means alternatives can share up to 60% of path segments with the optimal route.
        example: 0.6
        format: double
        type: number
      target_count:
        description: Target number of alternative routes to compute. Service returns up to this number of routes that fulfill the share-factor and weight-factor constraints.
        example: 2
        format: int32
        type: integer
      weight_factor:
        description: Maximum factor by which route weight may diverge from the optimal route. The default value of 1.4 means alternatives can be up to 1.4 times longer (costly) than the optimal route.
        example: 1.4
        format: double
        type: number
    title: Alternative Routes
    type: object
  Centrality_Service:
    description: The JSON body request sent to the centrality service which defines options and parameters regarding the centrality measure to calculate.
    properties:
      bbox:
        description: 'The bounding box to use for the request as an array of `longitude/latitude` pairs in WGS 84 (EPSG:4326)'
        example:
          - 8.681495
          - 49.41461
          - 8.686507
          - 49.41943
        items:
          items:
            format: double
            type: number
          type: array
        type: array
      excludeNodes:
        description: List of node Ids to exclude when calculating centrality
        example:
          - 1661
          - 1662
          - 1663
        items:
          format: int32
          type: integer
        type: array
      id:
        description: Arbitrary identification string of the request reflected in the meta information.
        example: centrality_request
        type: string
      mode:
        description: 'Specifies the centrality calculation mode. Currently, node-based and edge-based centrality calculation is supported.'
        enum:
          - edges
          - nodes
        example: nodes
        type: string
    required:
      - bbox
    title: Centrality Service
    type: object
  Directions_Service:
    allOf:
      - description: Advanced options for routing
        properties:
          avoid_borders:
            description: '`all` for no border crossing. `controlled` to cross open borders but avoid controlled ones. Only for `driving-*` profiles. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-*'']}}'
            enum:
              - all
              - controlled
              - none
            example: controlled
            type: string
          avoid_countries:
            description: 'List of countries to exclude from matrix with `driving-*` profiles. Can be used together with `''avoid_borders'': ''controlled''`. `[ 11, 193 ]` would exclude Austria and Switzerland. List of countries and application examples can be found [here](https://GIScience.github.io/openrouteservice/documentation/routing-options/Country-List.html). Also, ISO standard country codes cna be used in place of the numerical ids, for example, DE or DEU for Germany. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-*'']}}'
            example:
              - 11
              - 193
            items:
              type: string
            type: array
          avoid_features:
            description: 'List of features to avoid. CUSTOM_KEYS:{''itemRestrictions'':{''ref'':''profile'', ''itemsWhen'':{''driving-*'':[''highways'',''tollways'',''ferries''],''cycling-*'':[''ferries'',''steps'',''fords''],''foot-*'':[''ferries'',''fords'',''steps''],''wheelchair'':[''ferries'',''steps'']}}}'
            example:
              - highways
            items:
              enum:
                - ferries
                - fords
                - highways
                - steps
                - tollways
              type: string
            type: array
          avoid_polygons:
            additionalProperties:
              type: object
            description: Comprises areas to be avoided for the route. Formatted in GeoJSON as either a Polygon or Multipolygon object.
            type: object
          profile_params:
            description: ' Specifies additional matrix parameters.CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''valueNot'':[''driving-car'']}}'
            properties:
              allow_unsuitable:
                description: 'Specifies if ways that might not be suitable (e.g. unknown pedestrian usage) should be included in finding routes - default falseCUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                example: true
                type: boolean
              restrictions:
                description: Describe restrictions to be applied to edges on the routing. any edges that do not match these restrictions are not traversed.
                properties:
                  axleload:
                    description: 'Axleload restriction in tons. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                    example: 50
                    format: float
                    type: number
                  hazmat:
                    description: 'Specifies whether to use appropriate routing for delivering hazardous goods and avoiding water protected areas. Default is `false`. CUSTOM_KEYS:{''apiDefault'':false,''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                    type: boolean
                  height:
                    description: 'Height restriction in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                    example: 4.2
                    format: float
                    type: number
                  length:
                    description: 'Length restriction in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                    example: 8.4
                    format: float
                    type: number
                  maximum_incline:
                    description: 'Specifies the maximum incline as a percentage. `3`, `6` (default), `10`, `15.CUSTOM_KEYS:{''apiDefault'':6,''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                    example: 3
                    format: int32
                    type: integer
                  maximum_sloped_kerb:
                    description: 'Specifies the maximum height of the sloped curb in metres. Values are `0.03`, `0.06` (default), `0.1`.CUSTOM_KEYS:{''apiDefault'':0.6,''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                    example: 0.03
                    format: float
                    type: number
                  minimum_width:
                    description: 'Specifies the minimum width of the footway in metres.CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                    example: 2.5
                    format: float
                    type: number
                  smoothness_type:
                    description: 'Specifies the minimum smoothness of the route. Default is `good`.CUSTOM_KEYS:{''apiDefault'':''good'',''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                    enum:
                      - bad
                      - excellent
                      - good
                      - horrible
                      - impassable
                      - intermediate
                      - very_bad
                      - very_horrible
                    example: best
                    type: string
                  surface_type:
                    description: 'Specifies the minimum surface type. Default is `sett`. CUSTOM_KEYS:{''apiDefault'':''sett'',''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                    example: asphalt
                    type: string
                  track_type:
                    description: 'Specifies the minimum grade of the route. Default is `grade1`. CUSTOM_KEYS:{''apiDefault'':''grade1'',''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                    example: grade2
                    type: string
                  weight:
                    description: 'Weight restriction in tons. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                    example: 40
                    format: float
                    type: number
                  width:
                    description: 'Width restriction in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                    example: 5.6
                    format: float
                    type: number
                title: Restrictions
                type: object
              surface_quality_known:
                description: 'Specifies whether to enforce that only ways with known information on surface quality be taken into account - default falseCUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                example: true
                type: boolean
              weightings:
                description: Describe additional weightings to be applied to edges on the routing.
                properties:
                  csvColumn:
                    type: string
                  csv_column:
                    description: Specifies the csv column name
                    type: string
                  csv_factor:
                    description: Specifies the factor of csv-column (range 0 to 1)
                    format: float
                    type: number
                  green:
                    description: |-
                      Specifies the Green factor for `foot-*` profiles.

                      factor: Multiplication factor range from 0 to 1. 0 is the green routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer ways through green areas over a shorter route. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['foot-*']}}
                    example: 0.4
                    format: float
                    type: number
                  quiet:
                    description: |-
                      Specifies the Quiet factor for foot-* profiles.

                      factor: Multiplication factor range from 0 to 1. 0 is the quiet routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer quiet ways over a shorter route. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['foot-*']}}
                    example: 0.8
                    format: float
                    type: number
                  shadow:
                    description: |-
                      Specifies the shadow factor for `foot-*` profiles.

                      factor: Multiplication factor range from 0 to 1. 0 is the shadow routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer ways through shadow areas over a shorter route. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['foot-*']}}
                    example: 0.4
                    format: float
                    type: number
                  steepness_difficulty:
                    description: |-
                      Specifies the fitness level for `cycling-*` profiles.

                       level: 0 = Novice, 1 = Moderate, 2 = Amateur, 3 = Pro. The prefered gradient increases with level. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['cycling-*']}}
                    example: 2
                    format: int32
                    type: integer
                title: Profile Weightings
                type: object
            title: Profile Parameters
            type: object
          round_trip:
            description: Options to be applied on round trip routes.
            example:
              length: 10000
              points: 5
            properties:
              length:
                description: 'The target length of the route in `m` (note that this is a preferred value, but results may be different).'
                example: 10000
                format: float
                type: number
              points:
                description: The number of points to use on the route. Larger values create more circular routes.
                example: 5
                format: int32
                type: integer
              seed:
                description: A seed to use for adding randomisation to the overall direction of the generated route
                example: 1
                format: int64
                type: integer
            title: Round Trip Route Options
            type: object
          vehicle_type:
            description: '(for profile=driving-hgv only): hgv,bus,agricultural,delivery,forestry and goods. It is needed for vehicle restrictions to work. CUSTOM_KEYS:{''apiDefault'':''hgv'',''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
            enum:
              - agricultural
              - bus
              - delivery
              - forestry
              - goods
              - hgv
              - unknown
            type: string
        title: Route Options
        type: object
      - description: The JSON body request sent to the routing service which defines options and parameters regarding the route to generate.
        properties:
          alternative_routes:
            description: 'Specifies whether alternative routes are computed, and parameters for the algorithm determining suitable alternatives.'
            example:
              target_count: 2
              weight_factor: 1.6
            properties:
              share_factor:
                description: Maximum fraction of the route that alternatives may share with the optimal route. The default value of 0.6 means alternatives can share up to 60% of path segments with the optimal route.
                example: 0.6
                format: double
                type: number
              target_count:
                description: Target number of alternative routes to compute. Service returns up to this number of routes that fulfill the share-factor and weight-factor constraints.
                example: 2
                format: int32
                type: integer
              weight_factor:
                description: Maximum factor by which route weight may diverge from the optimal route. The default value of 1.4 means alternatives can be up to 1.4 times longer (costly) than the optimal route.
                example: 1.4
                format: double
                type: number
            title: Alternative Routes
            type: object
          attributes:
            description: List of route attributes
            example:
              - avgspeed
              - percentage
            items:
              enum:
                - avgspeed
                - detourfactor
                - percentage
              type: string
            type: array
          bearings:
            description: |-
              Specifies a list of pairs (bearings and deviations) to filter the segments of the road network a waypoint can snap to. For example `bearings=[[45,10],[120,20]]`. 
              Each pair is a comma-separated list that can consist of one or two float values, where the first value is the bearing and the second one is the allowed deviation from the bearing. The bearing can take values between `0` and `360` clockwise from true north. If the deviation is not set, then the default value of `100` degrees is used. The number of pairs must correspond to the number of waypoints.
              The number of bearings corresponds to the length of waypoints-1 or waypoints. If the bearing information for the last waypoint is given, then this will control the sector from which the destination waypoint may be reached. You can skip a bearing for a certain waypoint by passing an empty value for an array, e.g. `[30,20],[],[40,20]`. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':'cycling-*'}}
            example:
              - - 30
                - 20
              - []
              - - 40
                - 20
            items:
              items:
                format: double
                type: number
              type: array
            type: array
          continue_straight:
            description: 'Forces the route to keep going straight at waypoints restricting uturns there even if it would be faster.CUSTOM_KEYS:{''apiDefault'':''false''}'
            example: false
            type: boolean
          coordinates:
            description: 'The waypoints to use for the route as an array of `longitude/latitude` pairs in WGS 84 (EPSG:4326)'
            example:
              - - 8.681495
                - 49.41461
              - - 8.686507
                - 49.41943
              - - 8.687872
                - 49.420318
            items:
              items:
                format: double
                type: number
              type: array
            type: array
          elevation:
            description: Specifies whether to return elevation values for points. Please note that elevation also gets encoded for json response encoded polyline.
            example: false
            type: boolean
          extra_info:
            description: The extra info items to include in the response
            example:
              - waytype
              - surface
            items:
              enum:
                - countryinfo
                - csv
                - green
                - noise
                - osmid
                - roadaccessrestrictions
                - shadow
                - steepness
                - suitability
                - surface
                - tollways
                - traildifficulty
                - waycategory
                - waytype
              type: string
            type: array
          geometry:
            description: 'Specifies whether to return geometry. CUSTOM_KEYS:{''apiDefault'':true, ''validWhen'':{''ref'':''format'',''value'':[''json'']}}'
            example: true
            type: boolean
          geometry_simplify:
            description: 'Specifies whether to simplify the geometry. Simplify geometry cannot be applied to routes with more than **one segment** and when `extra_info` is required.CUSTOM_KEYS:{''apiDefault'':false}'
            example: false
            type: boolean
          id:
            description: Arbitrary identification string of the request reflected in the meta information.
            example: centrality_request
            type: string
          instructions:
            description: 'Specifies whether to return instructions. CUSTOM_KEYS:{''apiDefault'':true}'
            example: true
            type: boolean
          instructions_format:
            description: 'Select html for more verbose instructions. CUSTOM_KEYS:{''apiDefault'':''text''}'
            enum:
              - html
              - text
            example: text
            type: string
          language:
            description: 'Language for the route instructions. CUSTOM_KEYS:{''apiDefault'':''en''}'
            enum:
              - cs
              - cs-cz
              - de
              - de-de
              - en
              - en-us
              - eo
              - eo-eo
              - es
              - es-es
              - fr
              - fr-fr
              - gr
              - gr-gr
              - he
              - he-il
              - hu
              - hu-hu
              - id
              - id-id
              - it
              - it-it
              - ja
              - ja-jp
              - ne
              - ne-np
              - nl
              - nl-nl
              - pl
              - pl-pl
              - pt
              - pt-pt
              - ro
              - ro-ro
              - ru
              - ru-ru
              - tr
              - tr-tr
              - zh
              - zh-cn
            example: en
            type: string
          maneuvers:
            description: 'Specifies whether the maneuver object is included into the step object or not. CUSTOM_KEYS:{''apiDefault'':false}'
            example: false
            type: boolean
          maximum_speed:
            description: 'The maximum speed specified by user.CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-*'']}}'
            example: 90
            format: double
            type: number
          options:
            description: 'For advanced options formatted as json object. For structure refer to the [these examples](https://GIScience.github.io/openrouteservice/documentation/routing-options/Examples.html).'
            example:
              avoid_borders: controlled
            properties:
              avoid_borders:
                description: '`all` for no border crossing. `controlled` to cross open borders but avoid controlled ones. Only for `driving-*` profiles. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-*'']}}'
                enum:
                  - all
                  - controlled
                  - none
                example: controlled
                type: string
              avoid_countries:
                description: 'List of countries to exclude from matrix with `driving-*` profiles. Can be used together with `''avoid_borders'': ''controlled''`. `[ 11, 193 ]` would exclude Austria and Switzerland. List of countries and application examples can be found [here](https://GIScience.github.io/openrouteservice/documentation/routing-options/Country-List.html). Also, ISO standard country codes cna be used in place of the numerical ids, for example, DE or DEU for Germany. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-*'']}}'
                example:
                  - 11
                  - 193
                items:
                  type: string
                type: array
              avoid_features:
                description: 'List of features to avoid. CUSTOM_KEYS:{''itemRestrictions'':{''ref'':''profile'', ''itemsWhen'':{''driving-*'':[''highways'',''tollways'',''ferries''],''cycling-*'':[''ferries'',''steps'',''fords''],''foot-*'':[''ferries'',''fords'',''steps''],''wheelchair'':[''ferries'',''steps'']}}}'
                example:
                  - highways
                items:
                  enum:
                    - ferries
                    - fords
                    - highways
                    - steps
                    - tollways
                  type: string
                type: array
              avoid_polygons:
                additionalProperties:
                  type: object
                description: Comprises areas to be avoided for the route. Formatted in GeoJSON as either a Polygon or Multipolygon object.
                type: object
              profile_params:
                description: ' Specifies additional matrix parameters.CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''valueNot'':[''driving-car'']}}'
                properties:
                  allow_unsuitable:
                    description: 'Specifies if ways that might not be suitable (e.g. unknown pedestrian usage) should be included in finding routes - default falseCUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                    example: true
                    type: boolean
                  restrictions:
                    description: Describe restrictions to be applied to edges on the routing. any edges that do not match these restrictions are not traversed.
                    properties:
                      axleload:
                        description: 'Axleload restriction in tons. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                        example: 50
                        format: float
                        type: number
                      hazmat:
                        description: 'Specifies whether to use appropriate routing for delivering hazardous goods and avoiding water protected areas. Default is `false`. CUSTOM_KEYS:{''apiDefault'':false,''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                        type: boolean
                      height:
                        description: 'Height restriction in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                        example: 4.2
                        format: float
                        type: number
                      length:
                        description: 'Length restriction in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                        example: 8.4
                        format: float
                        type: number
                      maximum_incline:
                        description: 'Specifies the maximum incline as a percentage. `3`, `6` (default), `10`, `15.CUSTOM_KEYS:{''apiDefault'':6,''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                        example: 3
                        format: int32
                        type: integer
                      maximum_sloped_kerb:
                        description: 'Specifies the maximum height of the sloped curb in metres. Values are `0.03`, `0.06` (default), `0.1`.CUSTOM_KEYS:{''apiDefault'':0.6,''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                        example: 0.03
                        format: float
                        type: number
                      minimum_width:
                        description: 'Specifies the minimum width of the footway in metres.CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                        example: 2.5
                        format: float
                        type: number
                      smoothness_type:
                        description: 'Specifies the minimum smoothness of the route. Default is `good`.CUSTOM_KEYS:{''apiDefault'':''good'',''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                        enum:
                          - bad
                          - excellent
                          - good
                          - horrible
                          - impassable
                          - intermediate
                          - very_bad
                          - very_horrible
                        example: best
                        type: string
                      surface_type:
                        description: 'Specifies the minimum surface type. Default is `sett`. CUSTOM_KEYS:{''apiDefault'':''sett'',''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                        example: asphalt
                        type: string
                      track_type:
                        description: 'Specifies the minimum grade of the route. Default is `grade1`. CUSTOM_KEYS:{''apiDefault'':''grade1'',''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                        example: grade2
                        type: string
                      weight:
                        description: 'Weight restriction in tons. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                        example: 40
                        format: float
                        type: number
                      width:
                        description: 'Width restriction in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                        example: 5.6
                        format: float
                        type: number
                    title: Restrictions
                    type: object
                  surface_quality_known:
                    description: 'Specifies whether to enforce that only ways with known information on surface quality be taken into account - default falseCUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                    example: true
                    type: boolean
                  weightings:
                    description: Describe additional weightings to be applied to edges on the routing.
                    properties:
                      csvColumn:
                        type: string
                      csv_column:
                        description: Specifies the csv column name
                        type: string
                      csv_factor:
                        description: Specifies the factor of csv-column (range 0 to 1)
                        format: float
                        type: number
                      green:
                        description: |-
                          Specifies the Green factor for `foot-*` profiles.

                          factor: Multiplication factor range from 0 to 1. 0 is the green routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer ways through green areas over a shorter route. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['foot-*']}}
                        example: 0.4
                        format: float
                        type: number
                      quiet:
                        description: |-
                          Specifies the Quiet factor for foot-* profiles.

                          factor: Multiplication factor range from 0 to 1. 0 is the quiet routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer quiet ways over a shorter route. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['foot-*']}}
                        example: 0.8
                        format: float
                        type: number
                      shadow:
                        description: |-
                          Specifies the shadow factor for `foot-*` profiles.

                          factor: Multiplication factor range from 0 to 1. 0 is the shadow routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer ways through shadow areas over a shorter route. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['foot-*']}}
                        example: 0.4
                        format: float
                        type: number
                      steepness_difficulty:
                        description: |-
                          Specifies the fitness level for `cycling-*` profiles.

                           level: 0 = Novice, 1 = Moderate, 2 = Amateur, 3 = Pro. The prefered gradient increases with level. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['cycling-*']}}
                        example: 2
                        format: int32
                        type: integer
                    title: Profile Weightings
                    type: object
                title: Profile Parameters
                type: object
              round_trip:
                description: Options to be applied on round trip routes.
                example:
                  length: 10000
                  points: 5
                properties:
                  length:
                    description: 'The target length of the route in `m` (note that this is a preferred value, but results may be different).'
                    example: 10000
                    format: float
                    type: number
                  points:
                    description: The number of points to use on the route. Larger values create more circular routes.
                    example: 5
                    format: int32
                    type: integer
                  seed:
                    description: A seed to use for adding randomisation to the overall direction of the generated route
                    example: 1
                    format: int64
                    type: integer
                title: Round Trip Route Options
                type: object
              vehicle_type:
                description: '(for profile=driving-hgv only): hgv,bus,agricultural,delivery,forestry and goods. It is needed for vehicle restrictions to work. CUSTOM_KEYS:{''apiDefault'':''hgv'',''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                enum:
                  - agricultural
                  - bus
                  - delivery
                  - forestry
                  - goods
                  - hgv
                  - unknown
                type: string
            title: Route Options
            type: object
          preference:
            description: 'Specifies the route preference. CUSTOM_KEYS:{''apiDefault'':''recommended''}'
            enum:
              - fastest
              - recommended
              - shortest
            example: recommended
            type: string
          radiuses:
            description: 'A list of maximum distances (measured in metres) that limit the search of nearby road segments to every given waypoint. The values must be greater than 0, the value of -1 specifies using the maximum possible search radius. The number of radiuses correspond to the number of waypoints. If only a single value is given, it will be applied to all waypoints.'
            example:
              - 200
              - -1
              - 30
            items:
              format: double
              type: number
            type: array
          roundabout_exits:
            description: 'Provides bearings of the entrance and all passed roundabout exits. Adds the `exit_bearings` array to the step object in the response. CUSTOM_KEYS:{''apiDefault'':false}'
            example: false
            type: boolean
          skip_segments:
            description: Specifies the segments that should be skipped in the route calculation. A segment is the connection between two given coordinates and the counting starts with 1 for the connection between the first and second coordinate.
            example:
              - 2
              - 4
            items:
              format: int32
              type: integer
            type: array
          suppress_warnings:
            description: Suppress warning messages in the response
            example: false
            type: boolean
          units:
            description: 'Specifies the distance unit. CUSTOM_KEYS:{''apiDefault'':''m''}'
            enum:
              - km
              - m
              - mi
            example: m
            type: string
        required:
          - coordinates
        title: Directions Service
        type: object
    description: The JSON body request sent to the routing service which defines options and parameters regarding the route to generate.
    title: Directions Service
  EngineInfo:
    description: Information about the version of the openrouteservice that was used to generate the route
    properties:
      build_date:
        description: The date that the service was last updated
        example: '2019-02-07T14:28:11Z'
        type: string
      graph_date:
        description: The date that the graph data was last updated
        example: '2019-02-07T14:28:11Z'
        type: string
      version:
        description: The backend version of the openrouteservice that was queried
        example: 5
        type: string
    title: EngineInfo
    type: object
  GeoJSONIsochroneBase:
    properties:
      geometry:
        additionalProperties:
          type: object
        type: object
      type:
        type: string
    title: GeoJSONIsochroneBase
    type: object
  GeoJSONIsochronesResponse:
    properties:
      bbox:
        description: Bounding box that covers all returned isochrones
        example:
          - 49.414057
          - 8.680894
          - 49.420514
          - 8.690123
        items:
          format: double
          type: number
        type: array
      features:
        items:
          properties:
            geometry:
              additionalProperties:
                type: object
              type: object
            type:
              type: string
          title: GeoJSONIsochroneBase
          type: object
        type: array
      metadata:
        description: Information about the request
        properties:
          attribution:
            description: Copyright and attribution information
            example: openrouteservice.org | OpenStreetMap contributors
            type: string
          engine:
            description: Information about the isochrones service
            properties:
              build_date:
                description: The date that the service was last updated
                example: '2019-02-07T14:28:11Z'
                type: string
              graph_date:
                description: The date that the graph data was last updated
                example: '2019-02-07T14:28:11Z'
                type: string
              version:
                description: The backend version of the openrouteservice that was queried
                example: 5
                type: string
            title: EngineInfo
            type: object
          id:
            description: ID of the request (as passed in by the query)
            example: request123
            type: string
          osm_file_md5_hash:
            description: The MD5 hash of the OSM planet file that was used for generating graphs
            example: c0327ba6
            type: string
          query:
            description: The information that was used for generating the isochrones
            properties:
              area_units:
                description: |-
                  Specifies the area unit.
                  Default: m. CUSTOM_KEYS:{'apiDefault':'m','validWhen':{'ref':'attributes','value':'area'}}
                enum:
                  - km
                  - m
                  - mi
                type: string
              attributes:
                description: List of isochrones attributes
                example:
                  - area
                items:
                  enum:
                    - area
                    - reachfactor
                    - total_pop
                  type: string
                type: array
              id:
                description: Arbitrary identification string of the request reflected in the meta information.
                example: centrality_request
                type: string
              intersections:
                description: 'Specifies whether to return intersecting polygons. CUSTOM_KEYS:{''apiDefault'':false}'
                type: boolean
              interval:
                description: Interval of isochrones or equidistants. This is only used if a single range value is given. Value in **seconds** for time and **meters** for distance.
                example: 30
                format: double
                type: number
              location_type:
                description: '`start` treats the location(s) as starting point, `destination` as goal. CUSTOM_KEYS:{''apiDefault'':''start''}'
                enum:
                  - destination
                  - start
                example: start
                type: string
              locations:
                description: 'The locations to use for the route as an array of `longitude/latitude` pairs in WGS 84 (EPSG:4326)'
                example:
                  - - 8.681495
                    - 49.41461
                  - - 8.686507
                    - 49.41943
                items:
                  items:
                    format: double
                    type: number
                  type: array
                type: array
              options:
                description: Additional options for the isochrones request
                example:
                  avoid_borders: all
                properties:
                  avoid_borders:
                    description: '`all` for no border crossing. `controlled` to cross open borders but avoid controlled ones. Only for `driving-*` profiles. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-*'']}}'
                    enum:
                      - all
                      - controlled
                      - none
                    example: controlled
                    type: string
                  avoid_countries:
                    description: 'List of countries to exclude from matrix with `driving-*` profiles. Can be used together with `''avoid_borders'': ''controlled''`. `[ 11, 193 ]` would exclude Austria and Switzerland. List of countries and application examples can be found [here](https://GIScience.github.io/openrouteservice/documentation/routing-options/Country-List.html). Also, ISO standard country codes cna be used in place of the numerical ids, for example, DE or DEU for Germany. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-*'']}}'
                    example:
                      - 11
                      - 193
                    items:
                      type: string
                    type: array
                  avoid_features:
                    description: 'List of features to avoid. CUSTOM_KEYS:{''itemRestrictions'':{''ref'':''profile'', ''itemsWhen'':{''driving-*'':[''highways'',''tollways'',''ferries''],''cycling-*'':[''ferries'',''steps'',''fords''],''foot-*'':[''ferries'',''fords'',''steps''],''wheelchair'':[''ferries'',''steps'']}}}'
                    example:
                      - highways
                    items:
                      enum:
                        - ferries
                        - fords
                        - highways
                        - steps
                        - tollways
                      type: string
                    type: array
                  avoid_polygons:
                    additionalProperties:
                      type: object
                    description: Comprises areas to be avoided for the route. Formatted in GeoJSON as either a Polygon or Multipolygon object.
                    type: object
                  profile_params:
                    description: ' Specifies additional matrix parameters.CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''valueNot'':[''driving-car'']}}'
                    properties:
                      allow_unsuitable:
                        description: 'Specifies if ways that might not be suitable (e.g. unknown pedestrian usage) should be included in finding routes - default falseCUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                        example: true
                        type: boolean
                      restrictions:
                        description: Describe restrictions to be applied to edges on the routing. any edges that do not match these restrictions are not traversed.
                        properties:
                          axleload:
                            description: 'Axleload restriction in tons. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                            example: 50
                            format: float
                            type: number
                          hazmat:
                            description: 'Specifies whether to use appropriate routing for delivering hazardous goods and avoiding water protected areas. Default is `false`. CUSTOM_KEYS:{''apiDefault'':false,''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                            type: boolean
                          height:
                            description: 'Height restriction in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                            example: 4.2
                            format: float
                            type: number
                          length:
                            description: 'Length restriction in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                            example: 8.4
                            format: float
                            type: number
                          maximum_incline:
                            description: 'Specifies the maximum incline as a percentage. `3`, `6` (default), `10`, `15.CUSTOM_KEYS:{''apiDefault'':6,''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                            example: 3
                            format: int32
                            type: integer
                          maximum_sloped_kerb:
                            description: 'Specifies the maximum height of the sloped curb in metres. Values are `0.03`, `0.06` (default), `0.1`.CUSTOM_KEYS:{''apiDefault'':0.6,''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                            example: 0.03
                            format: float
                            type: number
                          minimum_width:
                            description: 'Specifies the minimum width of the footway in metres.CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                            example: 2.5
                            format: float
                            type: number
                          smoothness_type:
                            description: 'Specifies the minimum smoothness of the route. Default is `good`.CUSTOM_KEYS:{''apiDefault'':''good'',''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                            enum:
                              - bad
                              - excellent
                              - good
                              - horrible
                              - impassable
                              - intermediate
                              - very_bad
                              - very_horrible
                            example: best
                            type: string
                          surface_type:
                            description: 'Specifies the minimum surface type. Default is `sett`. CUSTOM_KEYS:{''apiDefault'':''sett'',''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                            example: asphalt
                            type: string
                          track_type:
                            description: 'Specifies the minimum grade of the route. Default is `grade1`. CUSTOM_KEYS:{''apiDefault'':''grade1'',''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                            example: grade2
                            type: string
                          weight:
                            description: 'Weight restriction in tons. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                            example: 40
                            format: float
                            type: number
                          width:
                            description: 'Width restriction in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                            example: 5.6
                            format: float
                            type: number
                        title: Restrictions
                        type: object
                      surface_quality_known:
                        description: 'Specifies whether to enforce that only ways with known information on surface quality be taken into account - default falseCUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                        example: true
                        type: boolean
                      weightings:
                        description: Describe additional weightings to be applied to edges on the routing.
                        properties:
                          csvColumn:
                            type: string
                          csv_column:
                            description: Specifies the csv column name
                            type: string
                          csv_factor:
                            description: Specifies the factor of csv-column (range 0 to 1)
                            format: float
                            type: number
                          green:
                            description: |-
                              Specifies the Green factor for `foot-*` profiles.

                              factor: Multiplication factor range from 0 to 1. 0 is the green routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer ways through green areas over a shorter route. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['foot-*']}}
                            example: 0.4
                            format: float
                            type: number
                          quiet:
                            description: |-
                              Specifies the Quiet factor for foot-* profiles.

                              factor: Multiplication factor range from 0 to 1. 0 is the quiet routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer quiet ways over a shorter route. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['foot-*']}}
                            example: 0.8
                            format: float
                            type: number
                          shadow:
                            description: |-
                              Specifies the shadow factor for `foot-*` profiles.

                              factor: Multiplication factor range from 0 to 1. 0 is the shadow routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer ways through shadow areas over a shorter route. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['foot-*']}}
                            example: 0.4
                            format: float
                            type: number
                          steepness_difficulty:
                            description: |-
                              Specifies the fitness level for `cycling-*` profiles.

                               level: 0 = Novice, 1 = Moderate, 2 = Amateur, 3 = Pro. The prefered gradient increases with level. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['cycling-*']}}
                            example: 2
                            format: int32
                            type: integer
                        title: Profile Weightings
                        type: object
                    title: Profile Parameters
                    type: object
                  round_trip:
                    description: Options to be applied on round trip routes.
                    example:
                      length: 10000
                      points: 5
                    properties:
                      length:
                        description: 'The target length of the route in `m` (note that this is a preferred value, but results may be different).'
                        example: 10000
                        format: float
                        type: number
                      points:
                        description: The number of points to use on the route. Larger values create more circular routes.
                        example: 5
                        format: int32
                        type: integer
                      seed:
                        description: A seed to use for adding randomisation to the overall direction of the generated route
                        example: 1
                        format: int64
                        type: integer
                    title: Round Trip Route Options
                    type: object
                  vehicle_type:
                    description: '(for profile=driving-hgv only): hgv,bus,agricultural,delivery,forestry and goods. It is needed for vehicle restrictions to work. CUSTOM_KEYS:{''apiDefault'':''hgv'',''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                    enum:
                      - agricultural
                      - bus
                      - delivery
                      - forestry
                      - goods
                      - hgv
                      - unknown
                    type: string
                title: Route Options
                type: object
              range:
                description: Maximum range value of the analysis in **seconds** for time and **metres** for distance.Alternatively a comma separated list of specific range values. Ranges will be the same for all locations.
                example:
                  - 300
                  - 200
                items:
                  format: double
                  type: number
                type: array
              range_type:
                description: 'Specifies the isochrones reachability type. CUSTOM_KEYS:{''apiDefault'':''time''}'
                enum:
                  - distance
                  - time
                example: time
                type: string
              smoothing:
                description: |-
                  Applies a level of generalisation to the isochrone polygons generated as a `smoothing_factor` between `0` and `100.0`.
                  Generalisation is produced by determining a maximum length of a connecting line between two points found on the outside of a containing polygon.
                  If the distance is larger than a threshold value, the line between the two points is removed and a smaller connecting line between other points is used.
                  Note that the minimum length of this connecting line is ~1333m, and so when the `smoothing_factor` results in a distance smaller than this, the minimum value is used.
                  The threshold value is determined as `(maximum_radius_of_isochrone / 100) * smoothing_factor`.
                  Therefore, a value closer to 100 will result in a more generalised shape.
                  The polygon generation algorithm is based on Duckham and al. (2008) `"Efficient generation of simple polygons for characterizing the shape of a set of points in the plane."`
                example: 25
                format: double
                type: number
              units:
                description: |-
                  Specifies the distance units only if `range_type` is set to distance.
                  Default: m. CUSTOM_KEYS:{'apiDefault':'m','validWhen':{'ref':'range_type','value':'distance'}}
                enum:
                  - km
                  - m
                  - mi
                example: m
                type: string
            required:
              - locations
              - range
            title: IsochronesRequest
            type: object
          service:
            description: The service that was requested
            example: isochrones
            type: string
          system_message:
            description: System message
            example: A message string configured in the service
            type: string
          timestamp:
            description: Time that the request was made (UNIX Epoch time)
            example: 1549549847974
            format: int64
            type: integer
        title: IsochronesResponseInfo
        type: object
      type:
        type: string
    title: GeoJSONIsochronesResponse
    type: object
  GeoJSONRouteResponse:
    properties:
      bbox:
        description: Bounding box that covers all returned routes
        example:
          - 49.414057
          - 8.680894
          - 49.420514
          - 8.690123
        items:
          format: double
          type: number
        type: array
      features:
        items:
          type: object
        type: array
      metadata:
        description: Information about the request
        properties:
          attribution:
            description: Copyright and attribution information
            example: openrouteservice.org | OpenStreetMap contributors
            type: string
          engine:
            description: Information about the routing service
            properties:
              build_date:
                description: The date that the service was last updated
                example: '2019-02-07T14:28:11Z'
                type: string
              graph_date:
                description: The date that the graph data was last updated
                example: '2019-02-07T14:28:11Z'
                type: string
              version:
                description: The backend version of the openrouteservice that was queried
                example: 5
                type: string
            title: EngineInfo
            type: object
          id:
            description: ID of the request (as passed in by the query)
            example: request123
            type: string
          osm_file_md5_hash:
            description: The MD5 hash of the OSM planet file that was used for generating graphs
            example: c0327ba6
            type: string
          query:
            allOf:
              - description: Advanced options for routing
                properties:
                  avoid_borders:
                    description: '`all` for no border crossing. `controlled` to cross open borders but avoid controlled ones. Only for `driving-*` profiles. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-*'']}}'
                    enum:
                      - all
                      - controlled
                      - none
                    example: controlled
                    type: string
                  avoid_countries:
                    description: 'List of countries to exclude from matrix with `driving-*` profiles. Can be used together with `''avoid_borders'': ''controlled''`. `[ 11, 193 ]` would exclude Austria and Switzerland. List of countries and application examples can be found [here](https://GIScience.github.io/openrouteservice/documentation/routing-options/Country-List.html). Also, ISO standard country codes cna be used in place of the numerical ids, for example, DE or DEU for Germany. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-*'']}}'
                    example:
                      - 11
                      - 193
                    items:
                      type: string
                    type: array
                  avoid_features:
                    description: 'List of features to avoid. CUSTOM_KEYS:{''itemRestrictions'':{''ref'':''profile'', ''itemsWhen'':{''driving-*'':[''highways'',''tollways'',''ferries''],''cycling-*'':[''ferries'',''steps'',''fords''],''foot-*'':[''ferries'',''fords'',''steps''],''wheelchair'':[''ferries'',''steps'']}}}'
                    example:
                      - highways
                    items:
                      enum:
                        - ferries
                        - fords
                        - highways
                        - steps
                        - tollways
                      type: string
                    type: array
                  avoid_polygons:
                    additionalProperties:
                      type: object
                    description: Comprises areas to be avoided for the route. Formatted in GeoJSON as either a Polygon or Multipolygon object.
                    type: object
                  profile_params:
                    description: ' Specifies additional matrix parameters.CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''valueNot'':[''driving-car'']}}'
                    properties:
                      allow_unsuitable:
                        description: 'Specifies if ways that might not be suitable (e.g. unknown pedestrian usage) should be included in finding routes - default falseCUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                        example: true
                        type: boolean
                      restrictions:
                        description: Describe restrictions to be applied to edges on the routing. any edges that do not match these restrictions are not traversed.
                        properties:
                          axleload:
                            description: 'Axleload restriction in tons. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                            example: 50
                            format: float
                            type: number
                          hazmat:
                            description: 'Specifies whether to use appropriate routing for delivering hazardous goods and avoiding water protected areas. Default is `false`. CUSTOM_KEYS:{''apiDefault'':false,''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                            type: boolean
                          height:
                            description: 'Height restriction in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                            example: 4.2
                            format: float
                            type: number
                          length:
                            description: 'Length restriction in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                            example: 8.4
                            format: float
                            type: number
                          maximum_incline:
                            description: 'Specifies the maximum incline as a percentage. `3`, `6` (default), `10`, `15.CUSTOM_KEYS:{''apiDefault'':6,''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                            example: 3
                            format: int32
                            type: integer
                          maximum_sloped_kerb:
                            description: 'Specifies the maximum height of the sloped curb in metres. Values are `0.03`, `0.06` (default), `0.1`.CUSTOM_KEYS:{''apiDefault'':0.6,''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                            example: 0.03
                            format: float
                            type: number
                          minimum_width:
                            description: 'Specifies the minimum width of the footway in metres.CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                            example: 2.5
                            format: float
                            type: number
                          smoothness_type:
                            description: 'Specifies the minimum smoothness of the route. Default is `good`.CUSTOM_KEYS:{''apiDefault'':''good'',''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                            enum:
                              - bad
                              - excellent
                              - good
                              - horrible
                              - impassable
                              - intermediate
                              - very_bad
                              - very_horrible
                            example: best
                            type: string
                          surface_type:
                            description: 'Specifies the minimum surface type. Default is `sett`. CUSTOM_KEYS:{''apiDefault'':''sett'',''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                            example: asphalt
                            type: string
                          track_type:
                            description: 'Specifies the minimum grade of the route. Default is `grade1`. CUSTOM_KEYS:{''apiDefault'':''grade1'',''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                            example: grade2
                            type: string
                          weight:
                            description: 'Weight restriction in tons. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                            example: 40
                            format: float
                            type: number
                          width:
                            description: 'Width restriction in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                            example: 5.6
                            format: float
                            type: number
                        title: Restrictions
                        type: object
                      surface_quality_known:
                        description: 'Specifies whether to enforce that only ways with known information on surface quality be taken into account - default falseCUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                        example: true
                        type: boolean
                      weightings:
                        description: Describe additional weightings to be applied to edges on the routing.
                        properties:
                          csvColumn:
                            type: string
                          csv_column:
                            description: Specifies the csv column name
                            type: string
                          csv_factor:
                            description: Specifies the factor of csv-column (range 0 to 1)
                            format: float
                            type: number
                          green:
                            description: |-
                              Specifies the Green factor for `foot-*` profiles.

                              factor: Multiplication factor range from 0 to 1. 0 is the green routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer ways through green areas over a shorter route. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['foot-*']}}
                            example: 0.4
                            format: float
                            type: number
                          quiet:
                            description: |-
                              Specifies the Quiet factor for foot-* profiles.

                              factor: Multiplication factor range from 0 to 1. 0 is the quiet routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer quiet ways over a shorter route. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['foot-*']}}
                            example: 0.8
                            format: float
                            type: number
                          shadow:
                            description: |-
                              Specifies the shadow factor for `foot-*` profiles.

                              factor: Multiplication factor range from 0 to 1. 0 is the shadow routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer ways through shadow areas over a shorter route. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['foot-*']}}
                            example: 0.4
                            format: float
                            type: number
                          steepness_difficulty:
                            description: |-
                              Specifies the fitness level for `cycling-*` profiles.

                               level: 0 = Novice, 1 = Moderate, 2 = Amateur, 3 = Pro. The prefered gradient increases with level. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['cycling-*']}}
                            example: 2
                            format: int32
                            type: integer
                        title: Profile Weightings
                        type: object
                    title: Profile Parameters
                    type: object
                  round_trip:
                    description: Options to be applied on round trip routes.
                    example:
                      length: 10000
                      points: 5
                    properties:
                      length:
                        description: 'The target length of the route in `m` (note that this is a preferred value, but results may be different).'
                        example: 10000
                        format: float
                        type: number
                      points:
                        description: The number of points to use on the route. Larger values create more circular routes.
                        example: 5
                        format: int32
                        type: integer
                      seed:
                        description: A seed to use for adding randomisation to the overall direction of the generated route
                        example: 1
                        format: int64
                        type: integer
                    title: Round Trip Route Options
                    type: object
                  vehicle_type:
                    description: '(for profile=driving-hgv only): hgv,bus,agricultural,delivery,forestry and goods. It is needed for vehicle restrictions to work. CUSTOM_KEYS:{''apiDefault'':''hgv'',''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                    enum:
                      - agricultural
                      - bus
                      - delivery
                      - forestry
                      - goods
                      - hgv
                      - unknown
                    type: string
                title: Route Options
                type: object
              - description: The JSON body request sent to the routing service which defines options and parameters regarding the route to generate.
                properties:
                  alternative_routes:
                    description: 'Specifies whether alternative routes are computed, and parameters for the algorithm determining suitable alternatives.'
                    example:
                      target_count: 2
                      weight_factor: 1.6
                    properties:
                      share_factor:
                        description: Maximum fraction of the route that alternatives may share with the optimal route. The default value of 0.6 means alternatives can share up to 60% of path segments with the optimal route.
                        example: 0.6
                        format: double
                        type: number
                      target_count:
                        description: Target number of alternative routes to compute. Service returns up to this number of routes that fulfill the share-factor and weight-factor constraints.
                        example: 2
                        format: int32
                        type: integer
                      weight_factor:
                        description: Maximum factor by which route weight may diverge from the optimal route. The default value of 1.4 means alternatives can be up to 1.4 times longer (costly) than the optimal route.
                        example: 1.4
                        format: double
                        type: number
                    title: Alternative Routes
                    type: object
                  attributes:
                    description: List of route attributes
                    example:
                      - avgspeed
                      - percentage
                    items:
                      enum:
                        - avgspeed
                        - detourfactor
                        - percentage
                      type: string
                    type: array
                  bearings:
                    description: |-
                      Specifies a list of pairs (bearings and deviations) to filter the segments of the road network a waypoint can snap to. For example `bearings=[[45,10],[120,20]]`. 
                      Each pair is a comma-separated list that can consist of one or two float values, where the first value is the bearing and the second one is the allowed deviation from the bearing. The bearing can take values between `0` and `360` clockwise from true north. If the deviation is not set, then the default value of `100` degrees is used. The number of pairs must correspond to the number of waypoints.
                      The number of bearings corresponds to the length of waypoints-1 or waypoints. If the bearing information for the last waypoint is given, then this will control the sector from which the destination waypoint may be reached. You can skip a bearing for a certain waypoint by passing an empty value for an array, e.g. `[30,20],[],[40,20]`. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':'cycling-*'}}
                    example:
                      - - 30
                        - 20
                      - []
                      - - 40
                        - 20
                    items:
                      items:
                        format: double
                        type: number
                      type: array
                    type: array
                  continue_straight:
                    description: 'Forces the route to keep going straight at waypoints restricting uturns there even if it would be faster.CUSTOM_KEYS:{''apiDefault'':''false''}'
                    example: false
                    type: boolean
                  coordinates:
                    description: 'The waypoints to use for the route as an array of `longitude/latitude` pairs in WGS 84 (EPSG:4326)'
                    example:
                      - - 8.681495
                        - 49.41461
                      - - 8.686507
                        - 49.41943
                      - - 8.687872
                        - 49.420318
                    items:
                      items:
                        format: double
                        type: number
                      type: array
                    type: array
                  elevation:
                    description: Specifies whether to return elevation values for points. Please note that elevation also gets encoded for json response encoded polyline.
                    example: false
                    type: boolean
                  extra_info:
                    description: The extra info items to include in the response
                    example:
                      - waytype
                      - surface
                    items:
                      enum:
                        - countryinfo
                        - csv
                        - green
                        - noise
                        - osmid
                        - roadaccessrestrictions
                        - shadow
                        - steepness
                        - suitability
                        - surface
                        - tollways
                        - traildifficulty
                        - waycategory
                        - waytype
                      type: string
                    type: array
                  geometry:
                    description: 'Specifies whether to return geometry. CUSTOM_KEYS:{''apiDefault'':true, ''validWhen'':{''ref'':''format'',''value'':[''json'']}}'
                    example: true
                    type: boolean
                  geometry_simplify:
                    description: 'Specifies whether to simplify the geometry. Simplify geometry cannot be applied to routes with more than **one segment** and when `extra_info` is required.CUSTOM_KEYS:{''apiDefault'':false}'
                    example: false
                    type: boolean
                  id:
                    description: Arbitrary identification string of the request reflected in the meta information.
                    example: centrality_request
                    type: string
                  instructions:
                    description: 'Specifies whether to return instructions. CUSTOM_KEYS:{''apiDefault'':true}'
                    example: true
                    type: boolean
                  instructions_format:
                    description: 'Select html for more verbose instructions. CUSTOM_KEYS:{''apiDefault'':''text''}'
                    enum:
                      - html
                      - text
                    example: text
                    type: string
                  language:
                    description: 'Language for the route instructions. CUSTOM_KEYS:{''apiDefault'':''en''}'
                    enum:
                      - cs
                      - cs-cz
                      - de
                      - de-de
                      - en
                      - en-us
                      - eo
                      - eo-eo
                      - es
                      - es-es
                      - fr
                      - fr-fr
                      - gr
                      - gr-gr
                      - he
                      - he-il
                      - hu
                      - hu-hu
                      - id
                      - id-id
                      - it
                      - it-it
                      - ja
                      - ja-jp
                      - ne
                      - ne-np
                      - nl
                      - nl-nl
                      - pl
                      - pl-pl
                      - pt
                      - pt-pt
                      - ro
                      - ro-ro
                      - ru
                      - ru-ru
                      - tr
                      - tr-tr
                      - zh
                      - zh-cn
                    example: en
                    type: string
                  maneuvers:
                    description: 'Specifies whether the maneuver object is included into the step object or not. CUSTOM_KEYS:{''apiDefault'':false}'
                    example: false
                    type: boolean
                  maximum_speed:
                    description: 'The maximum speed specified by user.CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-*'']}}'
                    example: 90
                    format: double
                    type: number
                  options:
                    description: 'For advanced options formatted as json object. For structure refer to the [these examples](https://GIScience.github.io/openrouteservice/documentation/routing-options/Examples.html).'
                    example:
                      avoid_borders: controlled
                    properties:
                      avoid_borders:
                        description: '`all` for no border crossing. `controlled` to cross open borders but avoid controlled ones. Only for `driving-*` profiles. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-*'']}}'
                        enum:
                          - all
                          - controlled
                          - none
                        example: controlled
                        type: string
                      avoid_countries:
                        description: 'List of countries to exclude from matrix with `driving-*` profiles. Can be used together with `''avoid_borders'': ''controlled''`. `[ 11, 193 ]` would exclude Austria and Switzerland. List of countries and application examples can be found [here](https://GIScience.github.io/openrouteservice/documentation/routing-options/Country-List.html). Also, ISO standard country codes cna be used in place of the numerical ids, for example, DE or DEU for Germany. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-*'']}}'
                        example:
                          - 11
                          - 193
                        items:
                          type: string
                        type: array
                      avoid_features:
                        description: 'List of features to avoid. CUSTOM_KEYS:{''itemRestrictions'':{''ref'':''profile'', ''itemsWhen'':{''driving-*'':[''highways'',''tollways'',''ferries''],''cycling-*'':[''ferries'',''steps'',''fords''],''foot-*'':[''ferries'',''fords'',''steps''],''wheelchair'':[''ferries'',''steps'']}}}'
                        example:
                          - highways
                        items:
                          enum:
                            - ferries
                            - fords
                            - highways
                            - steps
                            - tollways
                          type: string
                        type: array
                      avoid_polygons:
                        additionalProperties:
                          type: object
                        description: Comprises areas to be avoided for the route. Formatted in GeoJSON as either a Polygon or Multipolygon object.
                        type: object
                      profile_params:
                        description: ' Specifies additional matrix parameters.CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''valueNot'':[''driving-car'']}}'
                        properties:
                          allow_unsuitable:
                            description: 'Specifies if ways that might not be suitable (e.g. unknown pedestrian usage) should be included in finding routes - default falseCUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                            example: true
                            type: boolean
                          restrictions:
                            description: Describe restrictions to be applied to edges on the routing. any edges that do not match these restrictions are not traversed.
                            properties:
                              axleload:
                                description: 'Axleload restriction in tons. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                                example: 50
                                format: float
                                type: number
                              hazmat:
                                description: 'Specifies whether to use appropriate routing for delivering hazardous goods and avoiding water protected areas. Default is `false`. CUSTOM_KEYS:{''apiDefault'':false,''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                                type: boolean
                              height:
                                description: 'Height restriction in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                                example: 4.2
                                format: float
                                type: number
                              length:
                                description: 'Length restriction in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                                example: 8.4
                                format: float
                                type: number
                              maximum_incline:
                                description: 'Specifies the maximum incline as a percentage. `3`, `6` (default), `10`, `15.CUSTOM_KEYS:{''apiDefault'':6,''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                example: 3
                                format: int32
                                type: integer
                              maximum_sloped_kerb:
                                description: 'Specifies the maximum height of the sloped curb in metres. Values are `0.03`, `0.06` (default), `0.1`.CUSTOM_KEYS:{''apiDefault'':0.6,''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                example: 0.03
                                format: float
                                type: number
                              minimum_width:
                                description: 'Specifies the minimum width of the footway in metres.CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                example: 2.5
                                format: float
                                type: number
                              smoothness_type:
                                description: 'Specifies the minimum smoothness of the route. Default is `good`.CUSTOM_KEYS:{''apiDefault'':''good'',''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                enum:
                                  - bad
                                  - excellent
                                  - good
                                  - horrible
                                  - impassable
                                  - intermediate
                                  - very_bad
                                  - very_horrible
                                example: best
                                type: string
                              surface_type:
                                description: 'Specifies the minimum surface type. Default is `sett`. CUSTOM_KEYS:{''apiDefault'':''sett'',''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                example: asphalt
                                type: string
                              track_type:
                                description: 'Specifies the minimum grade of the route. Default is `grade1`. CUSTOM_KEYS:{''apiDefault'':''grade1'',''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                example: grade2
                                type: string
                              weight:
                                description: 'Weight restriction in tons. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                                example: 40
                                format: float
                                type: number
                              width:
                                description: 'Width restriction in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                                example: 5.6
                                format: float
                                type: number
                            title: Restrictions
                            type: object
                          surface_quality_known:
                            description: 'Specifies whether to enforce that only ways with known information on surface quality be taken into account - default falseCUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                            example: true
                            type: boolean
                          weightings:
                            description: Describe additional weightings to be applied to edges on the routing.
                            properties:
                              csvColumn:
                                type: string
                              csv_column:
                                description: Specifies the csv column name
                                type: string
                              csv_factor:
                                description: Specifies the factor of csv-column (range 0 to 1)
                                format: float
                                type: number
                              green:
                                description: |-
                                  Specifies the Green factor for `foot-*` profiles.

                                  factor: Multiplication factor range from 0 to 1. 0 is the green routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer ways through green areas over a shorter route. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['foot-*']}}
                                example: 0.4
                                format: float
                                type: number
                              quiet:
                                description: |-
                                  Specifies the Quiet factor for foot-* profiles.

                                  factor: Multiplication factor range from 0 to 1. 0 is the quiet routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer quiet ways over a shorter route. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['foot-*']}}
                                example: 0.8
                                format: float
                                type: number
                              shadow:
                                description: |-
                                  Specifies the shadow factor for `foot-*` profiles.

                                  factor: Multiplication factor range from 0 to 1. 0 is the shadow routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer ways through shadow areas over a shorter route. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['foot-*']}}
                                example: 0.4
                                format: float
                                type: number
                              steepness_difficulty:
                                description: |-
                                  Specifies the fitness level for `cycling-*` profiles.

                                   level: 0 = Novice, 1 = Moderate, 2 = Amateur, 3 = Pro. The prefered gradient increases with level. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['cycling-*']}}
                                example: 2
                                format: int32
                                type: integer
                            title: Profile Weightings
                            type: object
                        title: Profile Parameters
                        type: object
                      round_trip:
                        description: Options to be applied on round trip routes.
                        example:
                          length: 10000
                          points: 5
                        properties:
                          length:
                            description: 'The target length of the route in `m` (note that this is a preferred value, but results may be different).'
                            example: 10000
                            format: float
                            type: number
                          points:
                            description: The number of points to use on the route. Larger values create more circular routes.
                            example: 5
                            format: int32
                            type: integer
                          seed:
                            description: A seed to use for adding randomisation to the overall direction of the generated route
                            example: 1
                            format: int64
                            type: integer
                        title: Round Trip Route Options
                        type: object
                      vehicle_type:
                        description: '(for profile=driving-hgv only): hgv,bus,agricultural,delivery,forestry and goods. It is needed for vehicle restrictions to work. CUSTOM_KEYS:{''apiDefault'':''hgv'',''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                        enum:
                          - agricultural
                          - bus
                          - delivery
                          - forestry
                          - goods
                          - hgv
                          - unknown
                        type: string
                    title: Route Options
                    type: object
                  preference:
                    description: 'Specifies the route preference. CUSTOM_KEYS:{''apiDefault'':''recommended''}'
                    enum:
                      - fastest
                      - recommended
                      - shortest
                    example: recommended
                    type: string
                  radiuses:
                    description: 'A list of maximum distances (measured in metres) that limit the search of nearby road segments to every given waypoint. The values must be greater than 0, the value of -1 specifies using the maximum possible search radius. The number of radiuses correspond to the number of waypoints. If only a single value is given, it will be applied to all waypoints.'
                    example:
                      - 200
                      - -1
                      - 30
                    items:
                      format: double
                      type: number
                    type: array
                  roundabout_exits:
                    description: 'Provides bearings of the entrance and all passed roundabout exits. Adds the `exit_bearings` array to the step object in the response. CUSTOM_KEYS:{''apiDefault'':false}'
                    example: false
                    type: boolean
                  skip_segments:
                    description: Specifies the segments that should be skipped in the route calculation. A segment is the connection between two given coordinates and the counting starts with 1 for the connection between the first and second coordinate.
                    example:
                      - 2
                      - 4
                    items:
                      format: int32
                      type: integer
                    type: array
                  suppress_warnings:
                    description: Suppress warning messages in the response
                    example: false
                    type: boolean
                  units:
                    description: 'Specifies the distance unit. CUSTOM_KEYS:{''apiDefault'':''m''}'
                    enum:
                      - km
                      - m
                      - mi
                    example: m
                    type: string
                required:
                  - coordinates
                title: Directions Service
                type: object
            description: The information that was used for generating the route
            title: Directions Service
          service:
            description: The service that was requested
            example: routing
            type: string
          system_message:
            description: System message
            example: A message string configured in the service
            type: string
          timestamp:
            description: Time that the request was made (UNIX Epoch time)
            example: 1549549847974
            format: int64
            type: integer
        title: RouteResponseInfo
        type: object
      type:
        type: string
    title: GeoJSONRouteResponse
    type: object
  IsochronesRequest:
    description: The JSON body request sent to the isochrones service which defines options and parameters regarding the isochrones to generate.
    properties:
      area_units:
        description: |-
          Specifies the area unit.
          Default: m. CUSTOM_KEYS:{'apiDefault':'m','validWhen':{'ref':'attributes','value':'area'}}
        enum:
          - km
          - m
          - mi
        type: string
      attributes:
        description: List of isochrones attributes
        example:
          - area
        items:
          enum:
            - area
            - reachfactor
            - total_pop
          type: string
        type: array
      id:
        description: Arbitrary identification string of the request reflected in the meta information.
        example: centrality_request
        type: string
      intersections:
        description: 'Specifies whether to return intersecting polygons. CUSTOM_KEYS:{''apiDefault'':false}'
        type: boolean
      interval:
        description: Interval of isochrones or equidistants. This is only used if a single range value is given. Value in **seconds** for time and **meters** for distance.
        example: 30
        format: double
        type: number
      location_type:
        description: '`start` treats the location(s) as starting point, `destination` as goal. CUSTOM_KEYS:{''apiDefault'':''start''}'
        enum:
          - destination
          - start
        example: start
        type: string
      locations:
        description: 'The locations to use for the route as an array of `longitude/latitude` pairs in WGS 84 (EPSG:4326)'
        example:
          - - 8.681495
            - 49.41461
          - - 8.686507
            - 49.41943
        items:
          items:
            format: double
            type: number
          type: array
        type: array
      options:
        description: Additional options for the isochrones request
        example:
          avoid_borders: all
        properties:
          avoid_borders:
            description: '`all` for no border crossing. `controlled` to cross open borders but avoid controlled ones. Only for `driving-*` profiles. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-*'']}}'
            enum:
              - all
              - controlled
              - none
            example: controlled
            type: string
          avoid_countries:
            description: 'List of countries to exclude from matrix with `driving-*` profiles. Can be used together with `''avoid_borders'': ''controlled''`. `[ 11, 193 ]` would exclude Austria and Switzerland. List of countries and application examples can be found [here](https://GIScience.github.io/openrouteservice/documentation/routing-options/Country-List.html). Also, ISO standard country codes cna be used in place of the numerical ids, for example, DE or DEU for Germany. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-*'']}}'
            example:
              - 11
              - 193
            items:
              type: string
            type: array
          avoid_features:
            description: 'List of features to avoid. CUSTOM_KEYS:{''itemRestrictions'':{''ref'':''profile'', ''itemsWhen'':{''driving-*'':[''highways'',''tollways'',''ferries''],''cycling-*'':[''ferries'',''steps'',''fords''],''foot-*'':[''ferries'',''fords'',''steps''],''wheelchair'':[''ferries'',''steps'']}}}'
            example:
              - highways
            items:
              enum:
                - ferries
                - fords
                - highways
                - steps
                - tollways
              type: string
            type: array
          avoid_polygons:
            additionalProperties:
              type: object
            description: Comprises areas to be avoided for the route. Formatted in GeoJSON as either a Polygon or Multipolygon object.
            type: object
          profile_params:
            description: ' Specifies additional matrix parameters.CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''valueNot'':[''driving-car'']}}'
            properties:
              allow_unsuitable:
                description: 'Specifies if ways that might not be suitable (e.g. unknown pedestrian usage) should be included in finding routes - default falseCUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                example: true
                type: boolean
              restrictions:
                description: Describe restrictions to be applied to edges on the routing. any edges that do not match these restrictions are not traversed.
                properties:
                  axleload:
                    description: 'Axleload restriction in tons. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                    example: 50
                    format: float
                    type: number
                  hazmat:
                    description: 'Specifies whether to use appropriate routing for delivering hazardous goods and avoiding water protected areas. Default is `false`. CUSTOM_KEYS:{''apiDefault'':false,''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                    type: boolean
                  height:
                    description: 'Height restriction in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                    example: 4.2
                    format: float
                    type: number
                  length:
                    description: 'Length restriction in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                    example: 8.4
                    format: float
                    type: number
                  maximum_incline:
                    description: 'Specifies the maximum incline as a percentage. `3`, `6` (default), `10`, `15.CUSTOM_KEYS:{''apiDefault'':6,''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                    example: 3
                    format: int32
                    type: integer
                  maximum_sloped_kerb:
                    description: 'Specifies the maximum height of the sloped curb in metres. Values are `0.03`, `0.06` (default), `0.1`.CUSTOM_KEYS:{''apiDefault'':0.6,''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                    example: 0.03
                    format: float
                    type: number
                  minimum_width:
                    description: 'Specifies the minimum width of the footway in metres.CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                    example: 2.5
                    format: float
                    type: number
                  smoothness_type:
                    description: 'Specifies the minimum smoothness of the route. Default is `good`.CUSTOM_KEYS:{''apiDefault'':''good'',''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                    enum:
                      - bad
                      - excellent
                      - good
                      - horrible
                      - impassable
                      - intermediate
                      - very_bad
                      - very_horrible
                    example: best
                    type: string
                  surface_type:
                    description: 'Specifies the minimum surface type. Default is `sett`. CUSTOM_KEYS:{''apiDefault'':''sett'',''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                    example: asphalt
                    type: string
                  track_type:
                    description: 'Specifies the minimum grade of the route. Default is `grade1`. CUSTOM_KEYS:{''apiDefault'':''grade1'',''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                    example: grade2
                    type: string
                  weight:
                    description: 'Weight restriction in tons. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                    example: 40
                    format: float
                    type: number
                  width:
                    description: 'Width restriction in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                    example: 5.6
                    format: float
                    type: number
                title: Restrictions
                type: object
              surface_quality_known:
                description: 'Specifies whether to enforce that only ways with known information on surface quality be taken into account - default falseCUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                example: true
                type: boolean
              weightings:
                description: Describe additional weightings to be applied to edges on the routing.
                properties:
                  csvColumn:
                    type: string
                  csv_column:
                    description: Specifies the csv column name
                    type: string
                  csv_factor:
                    description: Specifies the factor of csv-column (range 0 to 1)
                    format: float
                    type: number
                  green:
                    description: |-
                      Specifies the Green factor for `foot-*` profiles.

                      factor: Multiplication factor range from 0 to 1. 0 is the green routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer ways through green areas over a shorter route. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['foot-*']}}
                    example: 0.4
                    format: float
                    type: number
                  quiet:
                    description: |-
                      Specifies the Quiet factor for foot-* profiles.

                      factor: Multiplication factor range from 0 to 1. 0 is the quiet routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer quiet ways over a shorter route. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['foot-*']}}
                    example: 0.8
                    format: float
                    type: number
                  shadow:
                    description: |-
                      Specifies the shadow factor for `foot-*` profiles.

                      factor: Multiplication factor range from 0 to 1. 0 is the shadow routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer ways through shadow areas over a shorter route. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['foot-*']}}
                    example: 0.4
                    format: float
                    type: number
                  steepness_difficulty:
                    description: |-
                      Specifies the fitness level for `cycling-*` profiles.

                       level: 0 = Novice, 1 = Moderate, 2 = Amateur, 3 = Pro. The prefered gradient increases with level. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['cycling-*']}}
                    example: 2
                    format: int32
                    type: integer
                title: Profile Weightings
                type: object
            title: Profile Parameters
            type: object
          round_trip:
            description: Options to be applied on round trip routes.
            example:
              length: 10000
              points: 5
            properties:
              length:
                description: 'The target length of the route in `m` (note that this is a preferred value, but results may be different).'
                example: 10000
                format: float
                type: number
              points:
                description: The number of points to use on the route. Larger values create more circular routes.
                example: 5
                format: int32
                type: integer
              seed:
                description: A seed to use for adding randomisation to the overall direction of the generated route
                example: 1
                format: int64
                type: integer
            title: Round Trip Route Options
            type: object
          vehicle_type:
            description: '(for profile=driving-hgv only): hgv,bus,agricultural,delivery,forestry and goods. It is needed for vehicle restrictions to work. CUSTOM_KEYS:{''apiDefault'':''hgv'',''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
            enum:
              - agricultural
              - bus
              - delivery
              - forestry
              - goods
              - hgv
              - unknown
            type: string
        title: Route Options
        type: object
      range:
        description: Maximum range value of the analysis in **seconds** for time and **metres** for distance.Alternatively a comma separated list of specific range values. Ranges will be the same for all locations.
        example:
          - 300
          - 200
        items:
          format: double
          type: number
        type: array
      range_type:
        description: 'Specifies the isochrones reachability type. CUSTOM_KEYS:{''apiDefault'':''time''}'
        enum:
          - distance
          - time
        example: time
        type: string
      smoothing:
        description: |-
          Applies a level of generalisation to the isochrone polygons generated as a `smoothing_factor` between `0` and `100.0`.
          Generalisation is produced by determining a maximum length of a connecting line between two points found on the outside of a containing polygon.
          If the distance is larger than a threshold value, the line between the two points is removed and a smaller connecting line between other points is used.
          Note that the minimum length of this connecting line is ~1333m, and so when the `smoothing_factor` results in a distance smaller than this, the minimum value is used.
          The threshold value is determined as `(maximum_radius_of_isochrone / 100) * smoothing_factor`.
          Therefore, a value closer to 100 will result in a more generalised shape.
          The polygon generation algorithm is based on Duckham and al. (2008) `"Efficient generation of simple polygons for characterizing the shape of a set of points in the plane."`
        example: 25
        format: double
        type: number
      units:
        description: |-
          Specifies the distance units only if `range_type` is set to distance.
          Default: m. CUSTOM_KEYS:{'apiDefault':'m','validWhen':{'ref':'range_type','value':'distance'}}
        enum:
          - km
          - m
          - mi
        example: m
        type: string
    required:
      - locations
      - range
    title: IsochronesRequest
    type: object
  IsochronesResponseInfo:
    description: Information about the request
    properties:
      attribution:
        description: Copyright and attribution information
        example: openrouteservice.org | OpenStreetMap contributors
        type: string
      engine:
        description: Information about the isochrones service
        properties:
          build_date:
            description: The date that the service was last updated
            example: '2019-02-07T14:28:11Z'
            type: string
          graph_date:
            description: The date that the graph data was last updated
            example: '2019-02-07T14:28:11Z'
            type: string
          version:
            description: The backend version of the openrouteservice that was queried
            example: 5
            type: string
        title: EngineInfo
        type: object
      id:
        description: ID of the request (as passed in by the query)
        example: request123
        type: string
      osm_file_md5_hash:
        description: The MD5 hash of the OSM planet file that was used for generating graphs
        example: c0327ba6
        type: string
      query:
        description: The information that was used for generating the isochrones
        properties:
          area_units:
            description: |-
              Specifies the area unit.
              Default: m. CUSTOM_KEYS:{'apiDefault':'m','validWhen':{'ref':'attributes','value':'area'}}
            enum:
              - km
              - m
              - mi
            type: string
          attributes:
            description: List of isochrones attributes
            example:
              - area
            items:
              enum:
                - area
                - reachfactor
                - total_pop
              type: string
            type: array
          id:
            description: Arbitrary identification string of the request reflected in the meta information.
            example: centrality_request
            type: string
          intersections:
            description: 'Specifies whether to return intersecting polygons. CUSTOM_KEYS:{''apiDefault'':false}'
            type: boolean
          interval:
            description: Interval of isochrones or equidistants. This is only used if a single range value is given. Value in **seconds** for time and **meters** for distance.
            example: 30
            format: double
            type: number
          location_type:
            description: '`start` treats the location(s) as starting point, `destination` as goal. CUSTOM_KEYS:{''apiDefault'':''start''}'
            enum:
              - destination
              - start
            example: start
            type: string
          locations:
            description: 'The locations to use for the route as an array of `longitude/latitude` pairs in WGS 84 (EPSG:4326)'
            example:
              - - 8.681495
                - 49.41461
              - - 8.686507
                - 49.41943
            items:
              items:
                format: double
                type: number
              type: array
            type: array
          options:
            description: Additional options for the isochrones request
            example:
              avoid_borders: all
            properties:
              avoid_borders:
                description: '`all` for no border crossing. `controlled` to cross open borders but avoid controlled ones. Only for `driving-*` profiles. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-*'']}}'
                enum:
                  - all
                  - controlled
                  - none
                example: controlled
                type: string
              avoid_countries:
                description: 'List of countries to exclude from matrix with `driving-*` profiles. Can be used together with `''avoid_borders'': ''controlled''`. `[ 11, 193 ]` would exclude Austria and Switzerland. List of countries and application examples can be found [here](https://GIScience.github.io/openrouteservice/documentation/routing-options/Country-List.html). Also, ISO standard country codes cna be used in place of the numerical ids, for example, DE or DEU for Germany. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-*'']}}'
                example:
                  - 11
                  - 193
                items:
                  type: string
                type: array
              avoid_features:
                description: 'List of features to avoid. CUSTOM_KEYS:{''itemRestrictions'':{''ref'':''profile'', ''itemsWhen'':{''driving-*'':[''highways'',''tollways'',''ferries''],''cycling-*'':[''ferries'',''steps'',''fords''],''foot-*'':[''ferries'',''fords'',''steps''],''wheelchair'':[''ferries'',''steps'']}}}'
                example:
                  - highways
                items:
                  enum:
                    - ferries
                    - fords
                    - highways
                    - steps
                    - tollways
                  type: string
                type: array
              avoid_polygons:
                additionalProperties:
                  type: object
                description: Comprises areas to be avoided for the route. Formatted in GeoJSON as either a Polygon or Multipolygon object.
                type: object
              profile_params:
                description: ' Specifies additional matrix parameters.CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''valueNot'':[''driving-car'']}}'
                properties:
                  allow_unsuitable:
                    description: 'Specifies if ways that might not be suitable (e.g. unknown pedestrian usage) should be included in finding routes - default falseCUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                    example: true
                    type: boolean
                  restrictions:
                    description: Describe restrictions to be applied to edges on the routing. any edges that do not match these restrictions are not traversed.
                    properties:
                      axleload:
                        description: 'Axleload restriction in tons. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                        example: 50
                        format: float
                        type: number
                      hazmat:
                        description: 'Specifies whether to use appropriate routing for delivering hazardous goods and avoiding water protected areas. Default is `false`. CUSTOM_KEYS:{''apiDefault'':false,''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                        type: boolean
                      height:
                        description: 'Height restriction in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                        example: 4.2
                        format: float
                        type: number
                      length:
                        description: 'Length restriction in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                        example: 8.4
                        format: float
                        type: number
                      maximum_incline:
                        description: 'Specifies the maximum incline as a percentage. `3`, `6` (default), `10`, `15.CUSTOM_KEYS:{''apiDefault'':6,''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                        example: 3
                        format: int32
                        type: integer
                      maximum_sloped_kerb:
                        description: 'Specifies the maximum height of the sloped curb in metres. Values are `0.03`, `0.06` (default), `0.1`.CUSTOM_KEYS:{''apiDefault'':0.6,''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                        example: 0.03
                        format: float
                        type: number
                      minimum_width:
                        description: 'Specifies the minimum width of the footway in metres.CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                        example: 2.5
                        format: float
                        type: number
                      smoothness_type:
                        description: 'Specifies the minimum smoothness of the route. Default is `good`.CUSTOM_KEYS:{''apiDefault'':''good'',''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                        enum:
                          - bad
                          - excellent
                          - good
                          - horrible
                          - impassable
                          - intermediate
                          - very_bad
                          - very_horrible
                        example: best
                        type: string
                      surface_type:
                        description: 'Specifies the minimum surface type. Default is `sett`. CUSTOM_KEYS:{''apiDefault'':''sett'',''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                        example: asphalt
                        type: string
                      track_type:
                        description: 'Specifies the minimum grade of the route. Default is `grade1`. CUSTOM_KEYS:{''apiDefault'':''grade1'',''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                        example: grade2
                        type: string
                      weight:
                        description: 'Weight restriction in tons. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                        example: 40
                        format: float
                        type: number
                      width:
                        description: 'Width restriction in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                        example: 5.6
                        format: float
                        type: number
                    title: Restrictions
                    type: object
                  surface_quality_known:
                    description: 'Specifies whether to enforce that only ways with known information on surface quality be taken into account - default falseCUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                    example: true
                    type: boolean
                  weightings:
                    description: Describe additional weightings to be applied to edges on the routing.
                    properties:
                      csvColumn:
                        type: string
                      csv_column:
                        description: Specifies the csv column name
                        type: string
                      csv_factor:
                        description: Specifies the factor of csv-column (range 0 to 1)
                        format: float
                        type: number
                      green:
                        description: |-
                          Specifies the Green factor for `foot-*` profiles.

                          factor: Multiplication factor range from 0 to 1. 0 is the green routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer ways through green areas over a shorter route. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['foot-*']}}
                        example: 0.4
                        format: float
                        type: number
                      quiet:
                        description: |-
                          Specifies the Quiet factor for foot-* profiles.

                          factor: Multiplication factor range from 0 to 1. 0 is the quiet routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer quiet ways over a shorter route. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['foot-*']}}
                        example: 0.8
                        format: float
                        type: number
                      shadow:
                        description: |-
                          Specifies the shadow factor for `foot-*` profiles.

                          factor: Multiplication factor range from 0 to 1. 0 is the shadow routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer ways through shadow areas over a shorter route. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['foot-*']}}
                        example: 0.4
                        format: float
                        type: number
                      steepness_difficulty:
                        description: |-
                          Specifies the fitness level for `cycling-*` profiles.

                           level: 0 = Novice, 1 = Moderate, 2 = Amateur, 3 = Pro. The prefered gradient increases with level. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['cycling-*']}}
                        example: 2
                        format: int32
                        type: integer
                    title: Profile Weightings
                    type: object
                title: Profile Parameters
                type: object
              round_trip:
                description: Options to be applied on round trip routes.
                example:
                  length: 10000
                  points: 5
                properties:
                  length:
                    description: 'The target length of the route in `m` (note that this is a preferred value, but results may be different).'
                    example: 10000
                    format: float
                    type: number
                  points:
                    description: The number of points to use on the route. Larger values create more circular routes.
                    example: 5
                    format: int32
                    type: integer
                  seed:
                    description: A seed to use for adding randomisation to the overall direction of the generated route
                    example: 1
                    format: int64
                    type: integer
                title: Round Trip Route Options
                type: object
              vehicle_type:
                description: '(for profile=driving-hgv only): hgv,bus,agricultural,delivery,forestry and goods. It is needed for vehicle restrictions to work. CUSTOM_KEYS:{''apiDefault'':''hgv'',''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                enum:
                  - agricultural
                  - bus
                  - delivery
                  - forestry
                  - goods
                  - hgv
                  - unknown
                type: string
            title: Route Options
            type: object
          range:
            description: Maximum range value of the analysis in **seconds** for time and **metres** for distance.Alternatively a comma separated list of specific range values. Ranges will be the same for all locations.
            example:
              - 300
              - 200
            items:
              format: double
              type: number
            type: array
          range_type:
            description: 'Specifies the isochrones reachability type. CUSTOM_KEYS:{''apiDefault'':''time''}'
            enum:
              - distance
              - time
            example: time
            type: string
          smoothing:
            description: |-
              Applies a level of generalisation to the isochrone polygons generated as a `smoothing_factor` between `0` and `100.0`.
              Generalisation is produced by determining a maximum length of a connecting line between two points found on the outside of a containing polygon.
              If the distance is larger than a threshold value, the line between the two points is removed and a smaller connecting line between other points is used.
              Note that the minimum length of this connecting line is ~1333m, and so when the `smoothing_factor` results in a distance smaller than this, the minimum value is used.
              The threshold value is determined as `(maximum_radius_of_isochrone / 100) * smoothing_factor`.
              Therefore, a value closer to 100 will result in a more generalised shape.
              The polygon generation algorithm is based on Duckham and al. (2008) `"Efficient generation of simple polygons for characterizing the shape of a set of points in the plane."`
            example: 25
            format: double
            type: number
          units:
            description: |-
              Specifies the distance units only if `range_type` is set to distance.
              Default: m. CUSTOM_KEYS:{'apiDefault':'m','validWhen':{'ref':'range_type','value':'distance'}}
            enum:
              - km
              - m
              - mi
            example: m
            type: string
        required:
          - locations
          - range
        title: IsochronesRequest
        type: object
      service:
        description: The service that was requested
        example: isochrones
        type: string
      system_message:
        description: System message
        example: A message string configured in the service
        type: string
      timestamp:
        description: Time that the request was made (UNIX Epoch time)
        example: 1549549847974
        format: int64
        type: integer
    title: IsochronesResponseInfo
    type: object
  JSON2DDestinations:
    properties:
      location:
        description: '{longitude},{latitude} coordinates of the closest accessible point on the routing graph'
        example:
          - 8.678962
          - 49.40783
        items:
          format: double
          type: number
        type: array
      name:
        description: 'Name of the street the closest accessible point is situated on. Only for `resolve_locations=true` and only if name is available.CUSTOM_KEYS:{''validWhen'':{''ref'':''resolve_locations'',''value'':true}}'
        example: Bergheimer Straße
        type: string
      snapped_distance:
        description: Distance between the `source/destination` Location and the used point on the routing graph.
        example: 1.2
        format: double
        type: number
    title: JSON2DDestinations
    type: object
  JSON2DSources:
    properties:
      location:
        description: '{longitude},{latitude} coordinates of the closest accessible point on the routing graph'
        example:
          - 8.678962
          - 49.40783
        items:
          format: double
          type: number
        type: array
      name:
        description: 'Name of the street the closest accessible point is situated on. Only for `resolve_locations=true` and only if name is available.CUSTOM_KEYS:{''validWhen'':{''ref'':''resolve_locations'',''value'':true}}'
        example: Bergheimer Straße
        type: string
      snapped_distance:
        description: Distance between the `source/destination` Location and the used point on the routing graph.
        example: 1.2
        format: double
        type: number
    title: JSON2DSources
    type: object
  JSONExtra:
    description: An object representing one of the extra info items requested
    properties:
      summary:
        description: List representing the summary of the extra info items.
        items:
          properties:
            amount:
              description: Category percentage of the entire route.
              example: 23.8
              format: double
              type: number
            distance:
              description: Cumulative distance of this value.
              example: 123.1
              format: double
              type: number
            value:
              description: '[Value](https://GIScience.github.io/openrouteservice/documentation/extra-info/Extra-Info.html) of a info category.'
              example: 5
              format: double
              type: number
          title: JSONExtraSummary
          type: object
        type: array
      values:
        description: |-
          A list of values representing a section of the route. The individual values are: 
          Value 1: Indice of the staring point of the geometry for this section,
          Value 2: Indice of the end point of the geoemetry for this sections,
          Value 3: [Value](https://GIScience.github.io/openrouteservice/documentation/extra-info/Extra-Info.html) assigned to this section.
        example:
          - - 0
            - 3
            - 26
          - - 3
            - 10
            - 12
        items:
          items:
            format: int64
            type: integer
          type: array
        type: array
    title: JSONExtra
    type: object
  JSONExtraSummary:
    properties:
      amount:
        description: Category percentage of the entire route.
        example: 23.8
        format: double
        type: number
      distance:
        description: Cumulative distance of this value.
        example: 123.1
        format: double
        type: number
      value:
        description: '[Value](https://GIScience.github.io/openrouteservice/documentation/extra-info/Extra-Info.html) of a info category.'
        example: 5
        format: double
        type: number
    title: JSONExtraSummary
    type: object
  JSONIndividualRouteResponse:
    description: An individual JSON based route created by the service
    properties:
      arrival:
        description: 'Arrival date and timeCUSTOM_KEYS:{''validWhen'':{''ref'':''arrival'',''value'':true}}'
        example: '2020-01-31T13:15:00+01:00'
        format: date-time
        type: string
      bbox:
        description: A bounding box which contains the entire route
        example:
          - 49.414057
          - 8.680894
          - 49.420514
          - 8.690123
        items:
          format: double
          type: number
        type: array
      departure:
        description: 'Departure date and timeCUSTOM_KEYS:{''validWhen'':{''ref'':''departure'',''value'':true}}'
        example: '2020-01-31T12:45:00+01:00'
        format: date-time
        type: string
      extras:
        additionalProperties:
          description: An object representing one of the extra info items requested
          properties:
            summary:
              description: List representing the summary of the extra info items.
              items:
                properties:
                  amount:
                    description: Category percentage of the entire route.
                    example: 23.8
                    format: double
                    type: number
                  distance:
                    description: Cumulative distance of this value.
                    example: 123.1
                    format: double
                    type: number
                  value:
                    description: '[Value](https://GIScience.github.io/openrouteservice/documentation/extra-info/Extra-Info.html) of a info category.'
                    example: 5
                    format: double
                    type: number
                title: JSONExtraSummary
                type: object
              type: array
            values:
              description: |-
                A list of values representing a section of the route. The individual values are: 
                Value 1: Indice of the staring point of the geometry for this section,
                Value 2: Indice of the end point of the geoemetry for this sections,
                Value 3: [Value](https://GIScience.github.io/openrouteservice/documentation/extra-info/Extra-Info.html) assigned to this section.
              example:
                - - 0
                  - 3
                  - 26
                - - 3
                  - 10
                  - 12
              items:
                items:
                  format: int64
                  type: integer
                type: array
              type: array
          title: JSONExtra
          type: object
        description: List of extra info objects representing the extra info items that were requested for the route.
        type: object
      segments:
        description: List containing the segments and its corresponding steps which make up the route.
        items:
          description: List containing the segments and its correspoding steps which make up the route.
          properties:
            ascent:
              description: ' Contains ascent of this segment in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''elevation'',value:true}}'
              example: 56.3
              format: double
              type: number
            avgspeed:
              description: 'Contains the average speed of this segment in km/h. CUSTOM_KEYS:{''validWhen'':{''ref'':''attributes'',''valueContains'':''avgspeed''}}'
              example: 56.3
              format: double
              type: number
            descent:
              description: 'Contains descent of this segment in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''elevation'',value:true}}'
              example: 45.2
              format: double
              type: number
            detourfactor:
              description: 'Contains the deviation compared to a straight line that would have the factor `1`. Double the Distance would be a `2`. CUSTOM_KEYS:{''validWhen'':{''ref'':''attributes'',''valueContains'':''detourfactor''}}'
              example: 0.5
              format: double
              type: number
            distance:
              description: Contains the distance of the segment in specified units.
              example: 253
              format: double
              type: number
            duration:
              description: Contains the duration of the segment in seconds.
              example: 37.7
              format: double
              type: number
            percentage:
              description: 'Contains the proportion of the route in percent. CUSTOM_KEYS:{''validWhen'':{''ref'':''attributes'',''valueContains'':''percentage''}}'
              example: 43.2
              format: double
              type: number
            steps:
              description: List containing the specific steps the segment consists of.
              items:
                description: Step of a route segment
                properties:
                  distance:
                    description: The distance for the step in metres.
                    example: 245
                    format: double
                    type: number
                  duration:
                    description: The duration for the step in seconds.
                    example: 96.2
                    format: double
                    type: number
                  exit_bearings:
                    description: 'Contains the bearing of the entrance and all passed exits in a roundabout  CUSTOM_KEYS:{''validWhen'':{''ref'':''roundabout_exits'',value:true}}.'
                    example:
                      - 10
                      - 45
                      - 60
                    items:
                      format: int32
                      type: integer
                    type: array
                  exit_number:
                    description: Only for roundabouts. Contains the number of the exit to take.
                    example: 2
                    format: int32
                    type: integer
                  instruction:
                    description: The routing instruction text for the step.
                    example: Turn right onto Berliner Straße
                    type: string
                  maneuver:
                    description: 'The maneuver to be performed  CUSTOM_KEYS:{''validWhen'':{''ref'':''maneuvers'',value:true}}'
                    properties:
                      bearing_after:
                        description: The azimuth angle (in degrees) of the direction right after the maneuver.
                        example: 96
                        format: int32
                        type: integer
                      bearing_before:
                        description: The azimuth angle (in degrees) of the direction right before the maneuver.
                        example: 24
                        format: int32
                        type: integer
                      location:
                        description: The coordinate of the point where a maneuver takes place.
                        example:
                          - 8.678962
                          - 49.407819
                        items:
                          format: double
                          type: number
                        type: array
                    title: JSONStepManeuver
                    type: object
                  name:
                    description: The name of the next street.
                    example: Berliner Straße
                    type: string
                  type:
                    description: 'The [instruction](https://GIScience.github.io/openrouteservice/documentation/Instruction-Types.html) action for symbolisation purposes.'
                    example: 1
                    format: int32
                    type: integer
                  way_points:
                    description: List containing the indices of the steps start- and endpoint corresponding to the *geometry*.
                    example:
                      - 45
                      - 48
                    items:
                      format: int32
                      type: integer
                    type: array
                title: JSONStep
                type: object
              type: array
          title: JSONSegment
          type: object
        type: array
      summary:
        description: Summary information about the route
        properties:
          ascent:
            description: 'Total ascent in meters.CUSTOM_KEYS:{''validWhen'':{''ref'':''elevation'',''value'':true}}'
            example: 166.3
            format: double
            type: number
          descent:
            description: 'Total descent in meters.CUSTOM_KEYS:{''validWhen'':{''ref'':''elevation'',''value'':true}}'
            example: 201.3
            format: double
            type: number
          distance:
            description: Total route distance in specified units.
            example: 12.6
            format: double
            type: number
          duration:
            description: Total duration in seconds.
            example: 604
            format: double
            type: number
        title: JSONSummary
        type: object
      warnings:
        description: List of warnings that have been generated for the route
        items:
          description: Informs about possible difficulties like access restrictions on the generated route. Generates a corresponding `extras` object with the affected segments.
          properties:
            code:
              description: Identification code for the warning
              example: 1
              format: int32
              type: integer
            message:
              description: The message associated with the warning
              example: This route may go over restricted roads
              type: string
          title: JSONWarning
          type: object
        type: array
      way_points:
        description: List containing the indices of way points corresponding to the *geometry*.
        example:
          - 0
          - 23
        items:
          format: int32
          type: integer
        type: array
    title: JSONIndividualRouteResponse
    type: object
  JSONMatrixResponse:
    description: The Matrix Response contains one matrix for each specified `metrics` value.
    properties:
      destinations:
        description: The individual destinations of the matrix calculations.
        items:
          properties:
            location:
              description: '{longitude},{latitude} coordinates of the closest accessible point on the routing graph'
              example:
                - 8.678962
                - 49.40783
              items:
                format: double
                type: number
              type: array
            name:
              description: 'Name of the street the closest accessible point is situated on. Only for `resolve_locations=true` and only if name is available.CUSTOM_KEYS:{''validWhen'':{''ref'':''resolve_locations'',''value'':true}}'
              example: Bergheimer Straße
              type: string
            snapped_distance:
              description: Distance between the `source/destination` Location and the used point on the routing graph.
              example: 1.2
              format: double
              type: number
          title: JSON2DDestinations
          type: object
        type: array
      distances:
        description: The distances of the matrix calculations.
        example:
          - - 0
            - 0.25
          - - 0.25
            - 0
        items:
          items:
            format: double
            type: number
          type: array
        type: array
      durations:
        description: The durations of the matrix calculations.
        example:
          - - 0
            - 25
          - - 25
            - 0
        items:
          items:
            format: double
            type: number
          type: array
        type: array
      metadata:
        description: Information about the service and request
        properties:
          attribution:
            description: Copyright and attribution information
            example: 'openrouteservice.org, OpenStreetMap contributors'
            type: string
          engine:
            description: Information about the routing service
            properties:
              build_date:
                description: The date that the service was last updated
                example: '2019-02-07T14:28:11Z'
                type: string
              graph_date:
                description: The date that the graph data was last updated
                example: '2019-02-07T14:28:11Z'
                type: string
              version:
                description: The backend version of the openrouteservice that was queried
                example: 5
                type: string
            title: EngineInfo
            type: object
          id:
            description: ID of the request (as passed in by the query)
            example: request123
            type: string
          osm_file_md5_hash:
            description: The MD5 hash of the OSM planet file that was used for generating graphs
            example: c0327ba6
            type: string
          query:
            description: The information that was used for generating the matrix
            properties:
              destinations:
                description: 'A list of indices that refers to the list of locations (starting with `0`). `{index_1},{index_2}[,{index_N} ...]` or `all` (default). `[0,3]` for the first and fourth locations CUSTOM_KEYS:{''apiDefault'':[''all'']}'
                items:
                  type: string
                type: array
              id:
                description: Arbitrary identification string of the request reflected in the meta information.
                example: centrality_request
                type: string
              locations:
                description: 'List of comma separated lists of `longitude,latitude` coordinates in WGS 84 (EPSG:4326)'
                example:
                  - - 9.70093
                    - 48.477473
                  - - 9.207916
                    - 49.153868
                  - - 37.573242
                    - 55.801281
                  - - 115.663757
                    - 38.106467
                items:
                  items:
                    format: double
                    type: number
                  type: array
                type: array
              metrics:
                description: |-
                  Specifies a list of returned metrics.
                  * `distance` - Returns distance matrix for specified points in defined `units`.
                  * `duration` - Returns duration matrix for specified points in **seconds**. CUSTOM_KEYS:{'apiDefault':'duration'}
                items:
                  enum:
                    - distance
                    - duration
                  type: string
                type: array
              resolve_locations:
                description: 'Specifies whether given locations are resolved or not. If the parameter value set to `true`, every element in `destinations` and `sources` will contain a `name` element that identifies the name of the closest street. Default is `false`. CUSTOM_KEYS:{''apiDefault'':false}'
                type: boolean
              sources:
                description: 'A list of indices that refers to the list of locations (starting with `0`). `{index_1},{index_2}[,{index_N} ...]` or `all` (default). example `[0,3]` for the first and fourth locations CUSTOM_KEYS:{''apiDefault'':[''all'']}'
                items:
                  type: string
                type: array
              units:
                description: |-
                  Specifies the distance unit.
                  Default: m. CUSTOM_KEYS:{'apiDefault':'m','validWhen':{'ref':'metrics','value':'distance'}`}
                enum:
                  - km
                  - m
                  - mi
                type: string
            required:
              - locations
            title: MatrixRequest
            type: object
          service:
            description: The service that was requested
            example: matrix
            type: string
          system_message:
            description: System message
            example: A message string configured in the service
            type: string
          timestamp:
            description: Time that the request was made (UNIX Epoch time)
            example: 1549549847974
            format: int64
            type: integer
        title: MatrixResponseInfo
        type: object
      sources:
        description: The individual sources of the matrix calculations.
        items:
          properties:
            location:
              description: '{longitude},{latitude} coordinates of the closest accessible point on the routing graph'
              example:
                - 8.678962
                - 49.40783
              items:
                format: double
                type: number
              type: array
            name:
              description: 'Name of the street the closest accessible point is situated on. Only for `resolve_locations=true` and only if name is available.CUSTOM_KEYS:{''validWhen'':{''ref'':''resolve_locations'',''value'':true}}'
              example: Bergheimer Straße
              type: string
            snapped_distance:
              description: Distance between the `source/destination` Location and the used point on the routing graph.
              example: 1.2
              format: double
              type: number
          title: JSON2DSources
          type: object
        type: array
    title: JSONMatrixResponse
    type: object
  JSONRouteResponse:
    properties:
      bbox:
        description: Bounding box that covers all returned routes
        example:
          - 49.414057
          - 8.680894
          - 49.420514
          - 8.690123
        items:
          format: double
          type: number
        type: array
      metadata:
        description: Information about the service and request
        properties:
          attribution:
            description: Copyright and attribution information
            example: openrouteservice.org | OpenStreetMap contributors
            type: string
          engine:
            description: Information about the routing service
            properties:
              build_date:
                description: The date that the service was last updated
                example: '2019-02-07T14:28:11Z'
                type: string
              graph_date:
                description: The date that the graph data was last updated
                example: '2019-02-07T14:28:11Z'
                type: string
              version:
                description: The backend version of the openrouteservice that was queried
                example: 5
                type: string
            title: EngineInfo
            type: object
          id:
            description: ID of the request (as passed in by the query)
            example: request123
            type: string
          osm_file_md5_hash:
            description: The MD5 hash of the OSM planet file that was used for generating graphs
            example: c0327ba6
            type: string
          query:
            allOf:
              - description: Advanced options for routing
                properties:
                  avoid_borders:
                    description: '`all` for no border crossing. `controlled` to cross open borders but avoid controlled ones. Only for `driving-*` profiles. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-*'']}}'
                    enum:
                      - all
                      - controlled
                      - none
                    example: controlled
                    type: string
                  avoid_countries:
                    description: 'List of countries to exclude from matrix with `driving-*` profiles. Can be used together with `''avoid_borders'': ''controlled''`. `[ 11, 193 ]` would exclude Austria and Switzerland. List of countries and application examples can be found [here](https://GIScience.github.io/openrouteservice/documentation/routing-options/Country-List.html). Also, ISO standard country codes cna be used in place of the numerical ids, for example, DE or DEU for Germany. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-*'']}}'
                    example:
                      - 11
                      - 193
                    items:
                      type: string
                    type: array
                  avoid_features:
                    description: 'List of features to avoid. CUSTOM_KEYS:{''itemRestrictions'':{''ref'':''profile'', ''itemsWhen'':{''driving-*'':[''highways'',''tollways'',''ferries''],''cycling-*'':[''ferries'',''steps'',''fords''],''foot-*'':[''ferries'',''fords'',''steps''],''wheelchair'':[''ferries'',''steps'']}}}'
                    example:
                      - highways
                    items:
                      enum:
                        - ferries
                        - fords
                        - highways
                        - steps
                        - tollways
                      type: string
                    type: array
                  avoid_polygons:
                    additionalProperties:
                      type: object
                    description: Comprises areas to be avoided for the route. Formatted in GeoJSON as either a Polygon or Multipolygon object.
                    type: object
                  profile_params:
                    description: ' Specifies additional matrix parameters.CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''valueNot'':[''driving-car'']}}'
                    properties:
                      allow_unsuitable:
                        description: 'Specifies if ways that might not be suitable (e.g. unknown pedestrian usage) should be included in finding routes - default falseCUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                        example: true
                        type: boolean
                      restrictions:
                        description: Describe restrictions to be applied to edges on the routing. any edges that do not match these restrictions are not traversed.
                        properties:
                          axleload:
                            description: 'Axleload restriction in tons. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                            example: 50
                            format: float
                            type: number
                          hazmat:
                            description: 'Specifies whether to use appropriate routing for delivering hazardous goods and avoiding water protected areas. Default is `false`. CUSTOM_KEYS:{''apiDefault'':false,''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                            type: boolean
                          height:
                            description: 'Height restriction in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                            example: 4.2
                            format: float
                            type: number
                          length:
                            description: 'Length restriction in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                            example: 8.4
                            format: float
                            type: number
                          maximum_incline:
                            description: 'Specifies the maximum incline as a percentage. `3`, `6` (default), `10`, `15.CUSTOM_KEYS:{''apiDefault'':6,''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                            example: 3
                            format: int32
                            type: integer
                          maximum_sloped_kerb:
                            description: 'Specifies the maximum height of the sloped curb in metres. Values are `0.03`, `0.06` (default), `0.1`.CUSTOM_KEYS:{''apiDefault'':0.6,''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                            example: 0.03
                            format: float
                            type: number
                          minimum_width:
                            description: 'Specifies the minimum width of the footway in metres.CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                            example: 2.5
                            format: float
                            type: number
                          smoothness_type:
                            description: 'Specifies the minimum smoothness of the route. Default is `good`.CUSTOM_KEYS:{''apiDefault'':''good'',''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                            enum:
                              - bad
                              - excellent
                              - good
                              - horrible
                              - impassable
                              - intermediate
                              - very_bad
                              - very_horrible
                            example: best
                            type: string
                          surface_type:
                            description: 'Specifies the minimum surface type. Default is `sett`. CUSTOM_KEYS:{''apiDefault'':''sett'',''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                            example: asphalt
                            type: string
                          track_type:
                            description: 'Specifies the minimum grade of the route. Default is `grade1`. CUSTOM_KEYS:{''apiDefault'':''grade1'',''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                            example: grade2
                            type: string
                          weight:
                            description: 'Weight restriction in tons. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                            example: 40
                            format: float
                            type: number
                          width:
                            description: 'Width restriction in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                            example: 5.6
                            format: float
                            type: number
                        title: Restrictions
                        type: object
                      surface_quality_known:
                        description: 'Specifies whether to enforce that only ways with known information on surface quality be taken into account - default falseCUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                        example: true
                        type: boolean
                      weightings:
                        description: Describe additional weightings to be applied to edges on the routing.
                        properties:
                          csvColumn:
                            type: string
                          csv_column:
                            description: Specifies the csv column name
                            type: string
                          csv_factor:
                            description: Specifies the factor of csv-column (range 0 to 1)
                            format: float
                            type: number
                          green:
                            description: |-
                              Specifies the Green factor for `foot-*` profiles.

                              factor: Multiplication factor range from 0 to 1. 0 is the green routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer ways through green areas over a shorter route. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['foot-*']}}
                            example: 0.4
                            format: float
                            type: number
                          quiet:
                            description: |-
                              Specifies the Quiet factor for foot-* profiles.

                              factor: Multiplication factor range from 0 to 1. 0 is the quiet routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer quiet ways over a shorter route. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['foot-*']}}
                            example: 0.8
                            format: float
                            type: number
                          shadow:
                            description: |-
                              Specifies the shadow factor for `foot-*` profiles.

                              factor: Multiplication factor range from 0 to 1. 0 is the shadow routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer ways through shadow areas over a shorter route. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['foot-*']}}
                            example: 0.4
                            format: float
                            type: number
                          steepness_difficulty:
                            description: |-
                              Specifies the fitness level for `cycling-*` profiles.

                               level: 0 = Novice, 1 = Moderate, 2 = Amateur, 3 = Pro. The prefered gradient increases with level. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['cycling-*']}}
                            example: 2
                            format: int32
                            type: integer
                        title: Profile Weightings
                        type: object
                    title: Profile Parameters
                    type: object
                  round_trip:
                    description: Options to be applied on round trip routes.
                    example:
                      length: 10000
                      points: 5
                    properties:
                      length:
                        description: 'The target length of the route in `m` (note that this is a preferred value, but results may be different).'
                        example: 10000
                        format: float
                        type: number
                      points:
                        description: The number of points to use on the route. Larger values create more circular routes.
                        example: 5
                        format: int32
                        type: integer
                      seed:
                        description: A seed to use for adding randomisation to the overall direction of the generated route
                        example: 1
                        format: int64
                        type: integer
                    title: Round Trip Route Options
                    type: object
                  vehicle_type:
                    description: '(for profile=driving-hgv only): hgv,bus,agricultural,delivery,forestry and goods. It is needed for vehicle restrictions to work. CUSTOM_KEYS:{''apiDefault'':''hgv'',''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                    enum:
                      - agricultural
                      - bus
                      - delivery
                      - forestry
                      - goods
                      - hgv
                      - unknown
                    type: string
                title: Route Options
                type: object
              - description: The JSON body request sent to the routing service which defines options and parameters regarding the route to generate.
                properties:
                  alternative_routes:
                    description: 'Specifies whether alternative routes are computed, and parameters for the algorithm determining suitable alternatives.'
                    example:
                      target_count: 2
                      weight_factor: 1.6
                    properties:
                      share_factor:
                        description: Maximum fraction of the route that alternatives may share with the optimal route. The default value of 0.6 means alternatives can share up to 60% of path segments with the optimal route.
                        example: 0.6
                        format: double
                        type: number
                      target_count:
                        description: Target number of alternative routes to compute. Service returns up to this number of routes that fulfill the share-factor and weight-factor constraints.
                        example: 2
                        format: int32
                        type: integer
                      weight_factor:
                        description: Maximum factor by which route weight may diverge from the optimal route. The default value of 1.4 means alternatives can be up to 1.4 times longer (costly) than the optimal route.
                        example: 1.4
                        format: double
                        type: number
                    title: Alternative Routes
                    type: object
                  attributes:
                    description: List of route attributes
                    example:
                      - avgspeed
                      - percentage
                    items:
                      enum:
                        - avgspeed
                        - detourfactor
                        - percentage
                      type: string
                    type: array
                  bearings:
                    description: |-
                      Specifies a list of pairs (bearings and deviations) to filter the segments of the road network a waypoint can snap to. For example `bearings=[[45,10],[120,20]]`. 
                      Each pair is a comma-separated list that can consist of one or two float values, where the first value is the bearing and the second one is the allowed deviation from the bearing. The bearing can take values between `0` and `360` clockwise from true north. If the deviation is not set, then the default value of `100` degrees is used. The number of pairs must correspond to the number of waypoints.
                      The number of bearings corresponds to the length of waypoints-1 or waypoints. If the bearing information for the last waypoint is given, then this will control the sector from which the destination waypoint may be reached. You can skip a bearing for a certain waypoint by passing an empty value for an array, e.g. `[30,20],[],[40,20]`. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':'cycling-*'}}
                    example:
                      - - 30
                        - 20
                      - []
                      - - 40
                        - 20
                    items:
                      items:
                        format: double
                        type: number
                      type: array
                    type: array
                  continue_straight:
                    description: 'Forces the route to keep going straight at waypoints restricting uturns there even if it would be faster.CUSTOM_KEYS:{''apiDefault'':''false''}'
                    example: false
                    type: boolean
                  coordinates:
                    description: 'The waypoints to use for the route as an array of `longitude/latitude` pairs in WGS 84 (EPSG:4326)'
                    example:
                      - - 8.681495
                        - 49.41461
                      - - 8.686507
                        - 49.41943
                      - - 8.687872
                        - 49.420318
                    items:
                      items:
                        format: double
                        type: number
                      type: array
                    type: array
                  elevation:
                    description: Specifies whether to return elevation values for points. Please note that elevation also gets encoded for json response encoded polyline.
                    example: false
                    type: boolean
                  extra_info:
                    description: The extra info items to include in the response
                    example:
                      - waytype
                      - surface
                    items:
                      enum:
                        - countryinfo
                        - csv
                        - green
                        - noise
                        - osmid
                        - roadaccessrestrictions
                        - shadow
                        - steepness
                        - suitability
                        - surface
                        - tollways
                        - traildifficulty
                        - waycategory
                        - waytype
                      type: string
                    type: array
                  geometry:
                    description: 'Specifies whether to return geometry. CUSTOM_KEYS:{''apiDefault'':true, ''validWhen'':{''ref'':''format'',''value'':[''json'']}}'
                    example: true
                    type: boolean
                  geometry_simplify:
                    description: 'Specifies whether to simplify the geometry. Simplify geometry cannot be applied to routes with more than **one segment** and when `extra_info` is required.CUSTOM_KEYS:{''apiDefault'':false}'
                    example: false
                    type: boolean
                  id:
                    description: Arbitrary identification string of the request reflected in the meta information.
                    example: centrality_request
                    type: string
                  instructions:
                    description: 'Specifies whether to return instructions. CUSTOM_KEYS:{''apiDefault'':true}'
                    example: true
                    type: boolean
                  instructions_format:
                    description: 'Select html for more verbose instructions. CUSTOM_KEYS:{''apiDefault'':''text''}'
                    enum:
                      - html
                      - text
                    example: text
                    type: string
                  language:
                    description: 'Language for the route instructions. CUSTOM_KEYS:{''apiDefault'':''en''}'
                    enum:
                      - cs
                      - cs-cz
                      - de
                      - de-de
                      - en
                      - en-us
                      - eo
                      - eo-eo
                      - es
                      - es-es
                      - fr
                      - fr-fr
                      - gr
                      - gr-gr
                      - he
                      - he-il
                      - hu
                      - hu-hu
                      - id
                      - id-id
                      - it
                      - it-it
                      - ja
                      - ja-jp
                      - ne
                      - ne-np
                      - nl
                      - nl-nl
                      - pl
                      - pl-pl
                      - pt
                      - pt-pt
                      - ro
                      - ro-ro
                      - ru
                      - ru-ru
                      - tr
                      - tr-tr
                      - zh
                      - zh-cn
                    example: en
                    type: string
                  maneuvers:
                    description: 'Specifies whether the maneuver object is included into the step object or not. CUSTOM_KEYS:{''apiDefault'':false}'
                    example: false
                    type: boolean
                  maximum_speed:
                    description: 'The maximum speed specified by user.CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-*'']}}'
                    example: 90
                    format: double
                    type: number
                  options:
                    description: 'For advanced options formatted as json object. For structure refer to the [these examples](https://GIScience.github.io/openrouteservice/documentation/routing-options/Examples.html).'
                    example:
                      avoid_borders: controlled
                    properties:
                      avoid_borders:
                        description: '`all` for no border crossing. `controlled` to cross open borders but avoid controlled ones. Only for `driving-*` profiles. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-*'']}}'
                        enum:
                          - all
                          - controlled
                          - none
                        example: controlled
                        type: string
                      avoid_countries:
                        description: 'List of countries to exclude from matrix with `driving-*` profiles. Can be used together with `''avoid_borders'': ''controlled''`. `[ 11, 193 ]` would exclude Austria and Switzerland. List of countries and application examples can be found [here](https://GIScience.github.io/openrouteservice/documentation/routing-options/Country-List.html). Also, ISO standard country codes cna be used in place of the numerical ids, for example, DE or DEU for Germany. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-*'']}}'
                        example:
                          - 11
                          - 193
                        items:
                          type: string
                        type: array
                      avoid_features:
                        description: 'List of features to avoid. CUSTOM_KEYS:{''itemRestrictions'':{''ref'':''profile'', ''itemsWhen'':{''driving-*'':[''highways'',''tollways'',''ferries''],''cycling-*'':[''ferries'',''steps'',''fords''],''foot-*'':[''ferries'',''fords'',''steps''],''wheelchair'':[''ferries'',''steps'']}}}'
                        example:
                          - highways
                        items:
                          enum:
                            - ferries
                            - fords
                            - highways
                            - steps
                            - tollways
                          type: string
                        type: array
                      avoid_polygons:
                        additionalProperties:
                          type: object
                        description: Comprises areas to be avoided for the route. Formatted in GeoJSON as either a Polygon or Multipolygon object.
                        type: object
                      profile_params:
                        description: ' Specifies additional matrix parameters.CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''valueNot'':[''driving-car'']}}'
                        properties:
                          allow_unsuitable:
                            description: 'Specifies if ways that might not be suitable (e.g. unknown pedestrian usage) should be included in finding routes - default falseCUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                            example: true
                            type: boolean
                          restrictions:
                            description: Describe restrictions to be applied to edges on the routing. any edges that do not match these restrictions are not traversed.
                            properties:
                              axleload:
                                description: 'Axleload restriction in tons. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                                example: 50
                                format: float
                                type: number
                              hazmat:
                                description: 'Specifies whether to use appropriate routing for delivering hazardous goods and avoiding water protected areas. Default is `false`. CUSTOM_KEYS:{''apiDefault'':false,''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                                type: boolean
                              height:
                                description: 'Height restriction in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                                example: 4.2
                                format: float
                                type: number
                              length:
                                description: 'Length restriction in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                                example: 8.4
                                format: float
                                type: number
                              maximum_incline:
                                description: 'Specifies the maximum incline as a percentage. `3`, `6` (default), `10`, `15.CUSTOM_KEYS:{''apiDefault'':6,''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                example: 3
                                format: int32
                                type: integer
                              maximum_sloped_kerb:
                                description: 'Specifies the maximum height of the sloped curb in metres. Values are `0.03`, `0.06` (default), `0.1`.CUSTOM_KEYS:{''apiDefault'':0.6,''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                example: 0.03
                                format: float
                                type: number
                              minimum_width:
                                description: 'Specifies the minimum width of the footway in metres.CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                example: 2.5
                                format: float
                                type: number
                              smoothness_type:
                                description: 'Specifies the minimum smoothness of the route. Default is `good`.CUSTOM_KEYS:{''apiDefault'':''good'',''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                enum:
                                  - bad
                                  - excellent
                                  - good
                                  - horrible
                                  - impassable
                                  - intermediate
                                  - very_bad
                                  - very_horrible
                                example: best
                                type: string
                              surface_type:
                                description: 'Specifies the minimum surface type. Default is `sett`. CUSTOM_KEYS:{''apiDefault'':''sett'',''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                example: asphalt
                                type: string
                              track_type:
                                description: 'Specifies the minimum grade of the route. Default is `grade1`. CUSTOM_KEYS:{''apiDefault'':''grade1'',''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                                example: grade2
                                type: string
                              weight:
                                description: 'Weight restriction in tons. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                                example: 40
                                format: float
                                type: number
                              width:
                                description: 'Width restriction in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                                example: 5.6
                                format: float
                                type: number
                            title: Restrictions
                            type: object
                          surface_quality_known:
                            description: 'Specifies whether to enforce that only ways with known information on surface quality be taken into account - default falseCUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                            example: true
                            type: boolean
                          weightings:
                            description: Describe additional weightings to be applied to edges on the routing.
                            properties:
                              csvColumn:
                                type: string
                              csv_column:
                                description: Specifies the csv column name
                                type: string
                              csv_factor:
                                description: Specifies the factor of csv-column (range 0 to 1)
                                format: float
                                type: number
                              green:
                                description: |-
                                  Specifies the Green factor for `foot-*` profiles.

                                  factor: Multiplication factor range from 0 to 1. 0 is the green routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer ways through green areas over a shorter route. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['foot-*']}}
                                example: 0.4
                                format: float
                                type: number
                              quiet:
                                description: |-
                                  Specifies the Quiet factor for foot-* profiles.

                                  factor: Multiplication factor range from 0 to 1. 0 is the quiet routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer quiet ways over a shorter route. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['foot-*']}}
                                example: 0.8
                                format: float
                                type: number
                              shadow:
                                description: |-
                                  Specifies the shadow factor for `foot-*` profiles.

                                  factor: Multiplication factor range from 0 to 1. 0 is the shadow routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer ways through shadow areas over a shorter route. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['foot-*']}}
                                example: 0.4
                                format: float
                                type: number
                              steepness_difficulty:
                                description: |-
                                  Specifies the fitness level for `cycling-*` profiles.

                                   level: 0 = Novice, 1 = Moderate, 2 = Amateur, 3 = Pro. The prefered gradient increases with level. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['cycling-*']}}
                                example: 2
                                format: int32
                                type: integer
                            title: Profile Weightings
                            type: object
                        title: Profile Parameters
                        type: object
                      round_trip:
                        description: Options to be applied on round trip routes.
                        example:
                          length: 10000
                          points: 5
                        properties:
                          length:
                            description: 'The target length of the route in `m` (note that this is a preferred value, but results may be different).'
                            example: 10000
                            format: float
                            type: number
                          points:
                            description: The number of points to use on the route. Larger values create more circular routes.
                            example: 5
                            format: int32
                            type: integer
                          seed:
                            description: A seed to use for adding randomisation to the overall direction of the generated route
                            example: 1
                            format: int64
                            type: integer
                        title: Round Trip Route Options
                        type: object
                      vehicle_type:
                        description: '(for profile=driving-hgv only): hgv,bus,agricultural,delivery,forestry and goods. It is needed for vehicle restrictions to work. CUSTOM_KEYS:{''apiDefault'':''hgv'',''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                        enum:
                          - agricultural
                          - bus
                          - delivery
                          - forestry
                          - goods
                          - hgv
                          - unknown
                        type: string
                    title: Route Options
                    type: object
                  preference:
                    description: 'Specifies the route preference. CUSTOM_KEYS:{''apiDefault'':''recommended''}'
                    enum:
                      - fastest
                      - recommended
                      - shortest
                    example: recommended
                    type: string
                  radiuses:
                    description: 'A list of maximum distances (measured in metres) that limit the search of nearby road segments to every given waypoint. The values must be greater than 0, the value of -1 specifies using the maximum possible search radius. The number of radiuses correspond to the number of waypoints. If only a single value is given, it will be applied to all waypoints.'
                    example:
                      - 200
                      - -1
                      - 30
                    items:
                      format: double
                      type: number
                    type: array
                  roundabout_exits:
                    description: 'Provides bearings of the entrance and all passed roundabout exits. Adds the `exit_bearings` array to the step object in the response. CUSTOM_KEYS:{''apiDefault'':false}'
                    example: false
                    type: boolean
                  skip_segments:
                    description: Specifies the segments that should be skipped in the route calculation. A segment is the connection between two given coordinates and the counting starts with 1 for the connection between the first and second coordinate.
                    example:
                      - 2
                      - 4
                    items:
                      format: int32
                      type: integer
                    type: array
                  suppress_warnings:
                    description: Suppress warning messages in the response
                    example: false
                    type: boolean
                  units:
                    description: 'Specifies the distance unit. CUSTOM_KEYS:{''apiDefault'':''m''}'
                    enum:
                      - km
                      - m
                      - mi
                    example: m
                    type: string
                required:
                  - coordinates
                title: Directions Service
                type: object
            description: The information that was used for generating the route
            title: Directions Service
          service:
            description: The service that was requested
            example: routing
            type: string
          system_message:
            description: System message
            example: A message string configured in the service
            type: string
          timestamp:
            description: Time that the request was made (UNIX Epoch time)
            example: 1549549847974
            format: int64
            type: integer
        title: RouteResponseInfo
        type: object
      routes:
        description: A list of routes returned from the request
        items:
          description: An individual JSON based route created by the service
          properties:
            arrival:
              description: 'Arrival date and timeCUSTOM_KEYS:{''validWhen'':{''ref'':''arrival'',''value'':true}}'
              example: '2020-01-31T13:15:00+01:00'
              format: date-time
              type: string
            bbox:
              description: A bounding box which contains the entire route
              example:
                - 49.414057
                - 8.680894
                - 49.420514
                - 8.690123
              items:
                format: double
                type: number
              type: array
            departure:
              description: 'Departure date and timeCUSTOM_KEYS:{''validWhen'':{''ref'':''departure'',''value'':true}}'
              example: '2020-01-31T12:45:00+01:00'
              format: date-time
              type: string
            extras:
              additionalProperties:
                description: An object representing one of the extra info items requested
                properties:
                  summary:
                    description: List representing the summary of the extra info items.
                    items:
                      properties:
                        amount:
                          description: Category percentage of the entire route.
                          example: 23.8
                          format: double
                          type: number
                        distance:
                          description: Cumulative distance of this value.
                          example: 123.1
                          format: double
                          type: number
                        value:
                          description: '[Value](https://GIScience.github.io/openrouteservice/documentation/extra-info/Extra-Info.html) of a info category.'
                          example: 5
                          format: double
                          type: number
                      title: JSONExtraSummary
                      type: object
                    type: array
                  values:
                    description: |-
                      A list of values representing a section of the route. The individual values are: 
                      Value 1: Indice of the staring point of the geometry for this section,
                      Value 2: Indice of the end point of the geoemetry for this sections,
                      Value 3: [Value](https://GIScience.github.io/openrouteservice/documentation/extra-info/Extra-Info.html) assigned to this section.
                    example:
                      - - 0
                        - 3
                        - 26
                      - - 3
                        - 10
                        - 12
                    items:
                      items:
                        format: int64
                        type: integer
                      type: array
                    type: array
                title: JSONExtra
                type: object
              description: List of extra info objects representing the extra info items that were requested for the route.
              type: object
            segments:
              description: List containing the segments and its corresponding steps which make up the route.
              items:
                description: List containing the segments and its correspoding steps which make up the route.
                properties:
                  ascent:
                    description: ' Contains ascent of this segment in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''elevation'',value:true}}'
                    example: 56.3
                    format: double
                    type: number
                  avgspeed:
                    description: 'Contains the average speed of this segment in km/h. CUSTOM_KEYS:{''validWhen'':{''ref'':''attributes'',''valueContains'':''avgspeed''}}'
                    example: 56.3
                    format: double
                    type: number
                  descent:
                    description: 'Contains descent of this segment in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''elevation'',value:true}}'
                    example: 45.2
                    format: double
                    type: number
                  detourfactor:
                    description: 'Contains the deviation compared to a straight line that would have the factor `1`. Double the Distance would be a `2`. CUSTOM_KEYS:{''validWhen'':{''ref'':''attributes'',''valueContains'':''detourfactor''}}'
                    example: 0.5
                    format: double
                    type: number
                  distance:
                    description: Contains the distance of the segment in specified units.
                    example: 253
                    format: double
                    type: number
                  duration:
                    description: Contains the duration of the segment in seconds.
                    example: 37.7
                    format: double
                    type: number
                  percentage:
                    description: 'Contains the proportion of the route in percent. CUSTOM_KEYS:{''validWhen'':{''ref'':''attributes'',''valueContains'':''percentage''}}'
                    example: 43.2
                    format: double
                    type: number
                  steps:
                    description: List containing the specific steps the segment consists of.
                    items:
                      description: Step of a route segment
                      properties:
                        distance:
                          description: The distance for the step in metres.
                          example: 245
                          format: double
                          type: number
                        duration:
                          description: The duration for the step in seconds.
                          example: 96.2
                          format: double
                          type: number
                        exit_bearings:
                          description: 'Contains the bearing of the entrance and all passed exits in a roundabout  CUSTOM_KEYS:{''validWhen'':{''ref'':''roundabout_exits'',value:true}}.'
                          example:
                            - 10
                            - 45
                            - 60
                          items:
                            format: int32
                            type: integer
                          type: array
                        exit_number:
                          description: Only for roundabouts. Contains the number of the exit to take.
                          example: 2
                          format: int32
                          type: integer
                        instruction:
                          description: The routing instruction text for the step.
                          example: Turn right onto Berliner Straße
                          type: string
                        maneuver:
                          description: 'The maneuver to be performed  CUSTOM_KEYS:{''validWhen'':{''ref'':''maneuvers'',value:true}}'
                          properties:
                            bearing_after:
                              description: The azimuth angle (in degrees) of the direction right after the maneuver.
                              example: 96
                              format: int32
                              type: integer
                            bearing_before:
                              description: The azimuth angle (in degrees) of the direction right before the maneuver.
                              example: 24
                              format: int32
                              type: integer
                            location:
                              description: The coordinate of the point where a maneuver takes place.
                              example:
                                - 8.678962
                                - 49.407819
                              items:
                                format: double
                                type: number
                              type: array
                          title: JSONStepManeuver
                          type: object
                        name:
                          description: The name of the next street.
                          example: Berliner Straße
                          type: string
                        type:
                          description: 'The [instruction](https://GIScience.github.io/openrouteservice/documentation/Instruction-Types.html) action for symbolisation purposes.'
                          example: 1
                          format: int32
                          type: integer
                        way_points:
                          description: List containing the indices of the steps start- and endpoint corresponding to the *geometry*.
                          example:
                            - 45
                            - 48
                          items:
                            format: int32
                            type: integer
                          type: array
                      title: JSONStep
                      type: object
                    type: array
                title: JSONSegment
                type: object
              type: array
            summary:
              description: Summary information about the route
              properties:
                ascent:
                  description: 'Total ascent in meters.CUSTOM_KEYS:{''validWhen'':{''ref'':''elevation'',''value'':true}}'
                  example: 166.3
                  format: double
                  type: number
                descent:
                  description: 'Total descent in meters.CUSTOM_KEYS:{''validWhen'':{''ref'':''elevation'',''value'':true}}'
                  example: 201.3
                  format: double
                  type: number
                distance:
                  description: Total route distance in specified units.
                  example: 12.6
                  format: double
                  type: number
                duration:
                  description: Total duration in seconds.
                  example: 604
                  format: double
                  type: number
              title: JSONSummary
              type: object
            warnings:
              description: List of warnings that have been generated for the route
              items:
                description: Informs about possible difficulties like access restrictions on the generated route. Generates a corresponding `extras` object with the affected segments.
                properties:
                  code:
                    description: Identification code for the warning
                    example: 1
                    format: int32
                    type: integer
                  message:
                    description: The message associated with the warning
                    example: This route may go over restricted roads
                    type: string
                title: JSONWarning
                type: object
              type: array
            way_points:
              description: List containing the indices of way points corresponding to the *geometry*.
              example:
                - 0
                - 23
              items:
                format: int32
                type: integer
              type: array
          title: JSONIndividualRouteResponse
          type: object
        type: array
    title: JSONRouteResponse
    type: object
  JSONSegment:
    description: List containing the segments and its correspoding steps which make up the route.
    properties:
      ascent:
        description: ' Contains ascent of this segment in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''elevation'',value:true}}'
        example: 56.3
        format: double
        type: number
      avgspeed:
        description: 'Contains the average speed of this segment in km/h. CUSTOM_KEYS:{''validWhen'':{''ref'':''attributes'',''valueContains'':''avgspeed''}}'
        example: 56.3
        format: double
        type: number
      descent:
        description: 'Contains descent of this segment in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''elevation'',value:true}}'
        example: 45.2
        format: double
        type: number
      detourfactor:
        description: 'Contains the deviation compared to a straight line that would have the factor `1`. Double the Distance would be a `2`. CUSTOM_KEYS:{''validWhen'':{''ref'':''attributes'',''valueContains'':''detourfactor''}}'
        example: 0.5
        format: double
        type: number
      distance:
        description: Contains the distance of the segment in specified units.
        example: 253
        format: double
        type: number
      duration:
        description: Contains the duration of the segment in seconds.
        example: 37.7
        format: double
        type: number
      percentage:
        description: 'Contains the proportion of the route in percent. CUSTOM_KEYS:{''validWhen'':{''ref'':''attributes'',''valueContains'':''percentage''}}'
        example: 43.2
        format: double
        type: number
      steps:
        description: List containing the specific steps the segment consists of.
        items:
          description: Step of a route segment
          properties:
            distance:
              description: The distance for the step in metres.
              example: 245
              format: double
              type: number
            duration:
              description: The duration for the step in seconds.
              example: 96.2
              format: double
              type: number
            exit_bearings:
              description: 'Contains the bearing of the entrance and all passed exits in a roundabout  CUSTOM_KEYS:{''validWhen'':{''ref'':''roundabout_exits'',value:true}}.'
              example:
                - 10
                - 45
                - 60
              items:
                format: int32
                type: integer
              type: array
            exit_number:
              description: Only for roundabouts. Contains the number of the exit to take.
              example: 2
              format: int32
              type: integer
            instruction:
              description: The routing instruction text for the step.
              example: Turn right onto Berliner Straße
              type: string
            maneuver:
              description: 'The maneuver to be performed  CUSTOM_KEYS:{''validWhen'':{''ref'':''maneuvers'',value:true}}'
              properties:
                bearing_after:
                  description: The azimuth angle (in degrees) of the direction right after the maneuver.
                  example: 96
                  format: int32
                  type: integer
                bearing_before:
                  description: The azimuth angle (in degrees) of the direction right before the maneuver.
                  example: 24
                  format: int32
                  type: integer
                location:
                  description: The coordinate of the point where a maneuver takes place.
                  example:
                    - 8.678962
                    - 49.407819
                  items:
                    format: double
                    type: number
                  type: array
              title: JSONStepManeuver
              type: object
            name:
              description: The name of the next street.
              example: Berliner Straße
              type: string
            type:
              description: 'The [instruction](https://GIScience.github.io/openrouteservice/documentation/Instruction-Types.html) action for symbolisation purposes.'
              example: 1
              format: int32
              type: integer
            way_points:
              description: List containing the indices of the steps start- and endpoint corresponding to the *geometry*.
              example:
                - 45
                - 48
              items:
                format: int32
                type: integer
              type: array
          title: JSONStep
          type: object
        type: array
    title: JSONSegment
    type: object
  JSONStep:
    description: Step of a route segment
    properties:
      distance:
        description: The distance for the step in metres.
        example: 245
        format: double
        type: number
      duration:
        description: The duration for the step in seconds.
        example: 96.2
        format: double
        type: number
      exit_bearings:
        description: 'Contains the bearing of the entrance and all passed exits in a roundabout  CUSTOM_KEYS:{''validWhen'':{''ref'':''roundabout_exits'',value:true}}.'
        example:
          - 10
          - 45
          - 60
        items:
          format: int32
          type: integer
        type: array
      exit_number:
        description: Only for roundabouts. Contains the number of the exit to take.
        example: 2
        format: int32
        type: integer
      instruction:
        description: The routing instruction text for the step.
        example: Turn right onto Berliner Straße
        type: string
      maneuver:
        description: 'The maneuver to be performed  CUSTOM_KEYS:{''validWhen'':{''ref'':''maneuvers'',value:true}}'
        properties:
          bearing_after:
            description: The azimuth angle (in degrees) of the direction right after the maneuver.
            example: 96
            format: int32
            type: integer
          bearing_before:
            description: The azimuth angle (in degrees) of the direction right before the maneuver.
            example: 24
            format: int32
            type: integer
          location:
            description: The coordinate of the point where a maneuver takes place.
            example:
              - 8.678962
              - 49.407819
            items:
              format: double
              type: number
            type: array
        title: JSONStepManeuver
        type: object
      name:
        description: The name of the next street.
        example: Berliner Straße
        type: string
      type:
        description: 'The [instruction](https://GIScience.github.io/openrouteservice/documentation/Instruction-Types.html) action for symbolisation purposes.'
        example: 1
        format: int32
        type: integer
      way_points:
        description: List containing the indices of the steps start- and endpoint corresponding to the *geometry*.
        example:
          - 45
          - 48
        items:
          format: int32
          type: integer
        type: array
    title: JSONStep
    type: object
  JSONStepManeuver:
    description: Maneuver object of the step
    properties:
      bearing_after:
        description: The azimuth angle (in degrees) of the direction right after the maneuver.
        example: 96
        format: int32
        type: integer
      bearing_before:
        description: The azimuth angle (in degrees) of the direction right before the maneuver.
        example: 24
        format: int32
        type: integer
      location:
        description: The coordinate of the point where a maneuver takes place.
        example:
          - 8.678962
          - 49.407819
        items:
          format: double
          type: number
        type: array
    title: JSONStepManeuver
    type: object
  JSONSummary:
    description: 'Contains total sums of duration, route distance and actual distance of the route.'
    properties:
      ascent:
        description: 'Total ascent in meters.CUSTOM_KEYS:{''validWhen'':{''ref'':''elevation'',''value'':true}}'
        example: 166.3
        format: double
        type: number
      descent:
        description: 'Total descent in meters.CUSTOM_KEYS:{''validWhen'':{''ref'':''elevation'',''value'':true}}'
        example: 201.3
        format: double
        type: number
      distance:
        description: Total route distance in specified units.
        example: 12.6
        format: double
        type: number
      duration:
        description: Total duration in seconds.
        example: 604
        format: double
        type: number
    title: JSONSummary
    type: object
  JSONWarning:
    description: Informs about possible difficulties like access restrictions on the generated route. Generates a corresponding `extras` object with the affected segments.
    properties:
      code:
        description: Identification code for the warning
        example: 1
        format: int32
        type: integer
      message:
        description: The message associated with the warning
        example: This route may go over restricted roads
        type: string
    title: JSONWarning
    type: object
  JsonCentralityLocation:
    properties:
      coord:
        description: '{longitude},{latitude} coordinates of the closest accessible point on the routing graph'
        example:
          - 8.678962
          - 49.40783
        items:
          format: double
          type: number
        type: array
      nodeId:
        description: Id of the corresponding node in the graph
        example: 1
        format: int32
        type: integer
    title: JsonCentralityLocation
    type: object
  JsonCentralityResponse:
    description: The Centrality Response contains centrality values for nodes or edges in the requested BBox
    properties:
      edgeScores:
        items:
          properties:
            fromId:
              description: Id of the start point of the edge
              example: 1
              format: int32
              type: integer
            score:
              description: Centrality Score of the corresponding edge in the given bounding box
              example: 123.45
              format: double
              type: number
            toId:
              description: Id of the end point of the edge
              example: 2
              format: int32
              type: integer
          title: JsonEdgeScore
          type: object
        type: array
      locations:
        items:
          properties:
            coord:
              description: '{longitude},{latitude} coordinates of the closest accessible point on the routing graph'
              example:
                - 8.678962
                - 49.40783
              items:
                format: double
                type: number
              type: array
            nodeId:
              description: Id of the corresponding node in the graph
              example: 1
              format: int32
              type: integer
          title: JsonCentralityLocation
          type: object
        type: array
      nodeScores:
        items:
          properties:
            nodeId:
              description: Id of the corresponding node in the graph
              example: 1
              format: int32
              type: integer
            score:
              description: Centrality Score of the corresponding node in the given bounding box
              example: 123.45
              format: double
              type: number
          title: JsonNodeScore
          type: object
        type: array
      warning:
        description: Informs about possible difficulties like access restrictions on the generated route. Generates a corresponding `extras` object with the affected segments.
        properties:
          code:
            description: Identification code for the warning
            example: 1
            format: int32
            type: integer
          message:
            description: The message associated with the warning
            example: This route may go over restricted roads
            type: string
        title: JSONWarning
        type: object
    title: JsonCentralityResponse
    type: object
  JsonEdgeScore:
    properties:
      fromId:
        description: Id of the start point of the edge
        example: 1
        format: int32
        type: integer
      score:
        description: Centrality Score of the corresponding edge in the given bounding box
        example: 123.45
        format: double
        type: number
      toId:
        description: Id of the end point of the edge
        example: 2
        format: int32
        type: integer
    title: JsonEdgeScore
    type: object
  JsonNodeScore:
    properties:
      nodeId:
        description: Id of the corresponding node in the graph
        example: 1
        format: int32
        type: integer
      score:
        description: Centrality Score of the corresponding node in the given bounding box
        example: 123.45
        format: double
        type: number
    title: JsonNodeScore
    type: object
  MatrixRequest:
    description: The JSON body request sent to the matrix service which defines options and parameters regarding the matrix to generate.
    properties:
      destinations:
        description: 'A list of indices that refers to the list of locations (starting with `0`). `{index_1},{index_2}[,{index_N} ...]` or `all` (default). `[0,3]` for the first and fourth locations CUSTOM_KEYS:{''apiDefault'':[''all'']}'
        items:
          type: string
        type: array
      id:
        description: Arbitrary identification string of the request reflected in the meta information.
        example: centrality_request
        type: string
      locations:
        description: 'List of comma separated lists of `longitude,latitude` coordinates in WGS 84 (EPSG:4326)'
        example:
          - - 9.70093
            - 48.477473
          - - 9.207916
            - 49.153868
          - - 37.573242
            - 55.801281
          - - 115.663757
            - 38.106467
        items:
          items:
            format: double
            type: number
          type: array
        type: array
      metrics:
        description: |-
          Specifies a list of returned metrics.
          * `distance` - Returns distance matrix for specified points in defined `units`.
          * `duration` - Returns duration matrix for specified points in **seconds**. CUSTOM_KEYS:{'apiDefault':'duration'}
        items:
          enum:
            - distance
            - duration
          type: string
        type: array
      resolve_locations:
        description: 'Specifies whether given locations are resolved or not. If the parameter value set to `true`, every element in `destinations` and `sources` will contain a `name` element that identifies the name of the closest street. Default is `false`. CUSTOM_KEYS:{''apiDefault'':false}'
        type: boolean
      sources:
        description: 'A list of indices that refers to the list of locations (starting with `0`). `{index_1},{index_2}[,{index_N} ...]` or `all` (default). example `[0,3]` for the first and fourth locations CUSTOM_KEYS:{''apiDefault'':[''all'']}'
        items:
          type: string
        type: array
      units:
        description: |-
          Specifies the distance unit.
          Default: m. CUSTOM_KEYS:{'apiDefault':'m','validWhen':{'ref':'metrics','value':'distance'}`}
        enum:
          - km
          - m
          - mi
        type: string
    required:
      - locations
    title: MatrixRequest
    type: object
  MatrixResponseInfo:
    description: Information about the request
    properties:
      attribution:
        description: Copyright and attribution information
        example: 'openrouteservice.org, OpenStreetMap contributors'
        type: string
      engine:
        description: Information about the routing service
        properties:
          build_date:
            description: The date that the service was last updated
            example: '2019-02-07T14:28:11Z'
            type: string
          graph_date:
            description: The date that the graph data was last updated
            example: '2019-02-07T14:28:11Z'
            type: string
          version:
            description: The backend version of the openrouteservice that was queried
            example: 5
            type: string
        title: EngineInfo
        type: object
      id:
        description: ID of the request (as passed in by the query)
        example: request123
        type: string
      osm_file_md5_hash:
        description: The MD5 hash of the OSM planet file that was used for generating graphs
        example: c0327ba6
        type: string
      query:
        description: The information that was used for generating the matrix
        properties:
          destinations:
            description: 'A list of indices that refers to the list of locations (starting with `0`). `{index_1},{index_2}[,{index_N} ...]` or `all` (default). `[0,3]` for the first and fourth locations CUSTOM_KEYS:{''apiDefault'':[''all'']}'
            items:
              type: string
            type: array
          id:
            description: Arbitrary identification string of the request reflected in the meta information.
            example: centrality_request
            type: string
          locations:
            description: 'List of comma separated lists of `longitude,latitude` coordinates in WGS 84 (EPSG:4326)'
            example:
              - - 9.70093
                - 48.477473
              - - 9.207916
                - 49.153868
              - - 37.573242
                - 55.801281
              - - 115.663757
                - 38.106467
            items:
              items:
                format: double
                type: number
              type: array
            type: array
          metrics:
            description: |-
              Specifies a list of returned metrics.
              * `distance` - Returns distance matrix for specified points in defined `units`.
              * `duration` - Returns duration matrix for specified points in **seconds**. CUSTOM_KEYS:{'apiDefault':'duration'}
            items:
              enum:
                - distance
                - duration
              type: string
            type: array
          resolve_locations:
            description: 'Specifies whether given locations are resolved or not. If the parameter value set to `true`, every element in `destinations` and `sources` will contain a `name` element that identifies the name of the closest street. Default is `false`. CUSTOM_KEYS:{''apiDefault'':false}'
            type: boolean
          sources:
            description: 'A list of indices that refers to the list of locations (starting with `0`). `{index_1},{index_2}[,{index_N} ...]` or `all` (default). example `[0,3]` for the first and fourth locations CUSTOM_KEYS:{''apiDefault'':[''all'']}'
            items:
              type: string
            type: array
          units:
            description: |-
              Specifies the distance unit.
              Default: m. CUSTOM_KEYS:{'apiDefault':'m','validWhen':{'ref':'metrics','value':'distance'}`}
            enum:
              - km
              - m
              - mi
            type: string
        required:
          - locations
        title: MatrixRequest
        type: object
      service:
        description: The service that was requested
        example: matrix
        type: string
      system_message:
        description: System message
        example: A message string configured in the service
        type: string
      timestamp:
        description: Time that the request was made (UNIX Epoch time)
        example: 1549549847974
        format: int64
        type: integer
    title: MatrixResponseInfo
    type: object
  Profile_Parameters:
    description: Specifies additional routing parameters. For all profiles except `driving-car`.
    properties:
      allow_unsuitable:
        description: 'Specifies if ways that might not be suitable (e.g. unknown pedestrian usage) should be included in finding routes - default falseCUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
        example: true
        type: boolean
      restrictions:
        description: Describe restrictions to be applied to edges on the routing. any edges that do not match these restrictions are not traversed.
        properties:
          axleload:
            description: 'Axleload restriction in tons. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
            example: 50
            format: float
            type: number
          hazmat:
            description: 'Specifies whether to use appropriate routing for delivering hazardous goods and avoiding water protected areas. Default is `false`. CUSTOM_KEYS:{''apiDefault'':false,''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
            type: boolean
          height:
            description: 'Height restriction in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
            example: 4.2
            format: float
            type: number
          length:
            description: 'Length restriction in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
            example: 8.4
            format: float
            type: number
          maximum_incline:
            description: 'Specifies the maximum incline as a percentage. `3`, `6` (default), `10`, `15.CUSTOM_KEYS:{''apiDefault'':6,''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
            example: 3
            format: int32
            type: integer
          maximum_sloped_kerb:
            description: 'Specifies the maximum height of the sloped curb in metres. Values are `0.03`, `0.06` (default), `0.1`.CUSTOM_KEYS:{''apiDefault'':0.6,''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
            example: 0.03
            format: float
            type: number
          minimum_width:
            description: 'Specifies the minimum width of the footway in metres.CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
            example: 2.5
            format: float
            type: number
          smoothness_type:
            description: 'Specifies the minimum smoothness of the route. Default is `good`.CUSTOM_KEYS:{''apiDefault'':''good'',''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
            enum:
              - bad
              - excellent
              - good
              - horrible
              - impassable
              - intermediate
              - very_bad
              - very_horrible
            example: best
            type: string
          surface_type:
            description: 'Specifies the minimum surface type. Default is `sett`. CUSTOM_KEYS:{''apiDefault'':''sett'',''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
            example: asphalt
            type: string
          track_type:
            description: 'Specifies the minimum grade of the route. Default is `grade1`. CUSTOM_KEYS:{''apiDefault'':''grade1'',''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
            example: grade2
            type: string
          weight:
            description: 'Weight restriction in tons. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
            example: 40
            format: float
            type: number
          width:
            description: 'Width restriction in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
            example: 5.6
            format: float
            type: number
        title: Restrictions
        type: object
      surface_quality_known:
        description: 'Specifies whether to enforce that only ways with known information on surface quality be taken into account - default falseCUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
        example: true
        type: boolean
      weightings:
        description: Describe additional weightings to be applied to edges on the routing.
        properties:
          csvColumn:
            type: string
          csv_column:
            description: Specifies the csv column name
            type: string
          csv_factor:
            description: Specifies the factor of csv-column (range 0 to 1)
            format: float
            type: number
          green:
            description: |-
              Specifies the Green factor for `foot-*` profiles.

              factor: Multiplication factor range from 0 to 1. 0 is the green routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer ways through green areas over a shorter route. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['foot-*']}}
            example: 0.4
            format: float
            type: number
          quiet:
            description: |-
              Specifies the Quiet factor for foot-* profiles.

              factor: Multiplication factor range from 0 to 1. 0 is the quiet routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer quiet ways over a shorter route. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['foot-*']}}
            example: 0.8
            format: float
            type: number
          shadow:
            description: |-
              Specifies the shadow factor for `foot-*` profiles.

              factor: Multiplication factor range from 0 to 1. 0 is the shadow routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer ways through shadow areas over a shorter route. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['foot-*']}}
            example: 0.4
            format: float
            type: number
          steepness_difficulty:
            description: |-
              Specifies the fitness level for `cycling-*` profiles.

               level: 0 = Novice, 1 = Moderate, 2 = Amateur, 3 = Pro. The prefered gradient increases with level. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['cycling-*']}}
            example: 2
            format: int32
            type: integer
        title: Profile Weightings
        type: object
    title: Profile Parameters
    type: object
  Profile_Weightings:
    description: Describe additional weightings to be applied to edges on the routing.
    properties:
      csvColumn:
        type: string
      csv_column:
        description: Specifies the csv column name
        type: string
      csv_factor:
        description: Specifies the factor of csv-column (range 0 to 1)
        format: float
        type: number
      green:
        description: |-
          Specifies the Green factor for `foot-*` profiles.

          factor: Multiplication factor range from 0 to 1. 0 is the green routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer ways through green areas over a shorter route. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['foot-*']}}
        example: 0.4
        format: float
        type: number
      quiet:
        description: |-
          Specifies the Quiet factor for foot-* profiles.

          factor: Multiplication factor range from 0 to 1. 0 is the quiet routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer quiet ways over a shorter route. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['foot-*']}}
        example: 0.8
        format: float
        type: number
      shadow:
        description: |-
          Specifies the shadow factor for `foot-*` profiles.

          factor: Multiplication factor range from 0 to 1. 0 is the shadow routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer ways through shadow areas over a shorter route. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['foot-*']}}
        example: 0.4
        format: float
        type: number
      steepness_difficulty:
        description: |-
          Specifies the fitness level for `cycling-*` profiles.

           level: 0 = Novice, 1 = Moderate, 2 = Amateur, 3 = Pro. The prefered gradient increases with level. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['cycling-*']}}
        example: 2
        format: int32
        type: integer
    title: Profile Weightings
    type: object
  ResponseEntity:
    properties:
      body:
        type: object
      statusCode:
        enum:
          - ACCEPTED
          - ALREADY_REPORTED
          - BAD_GATEWAY
          - BAD_REQUEST
          - BANDWIDTH_LIMIT_EXCEEDED
          - CHECKPOINT
          - CONFLICT
          - CONTINUE
          - CREATED
          - DESTINATION_LOCKED
          - EXPECTATION_FAILED
          - FAILED_DEPENDENCY
          - FORBIDDEN
          - FOUND
          - GATEWAY_TIMEOUT
          - GONE
          - HTTP_VERSION_NOT_SUPPORTED
          - IM_USED
          - INSUFFICIENT_SPACE_ON_RESOURCE
          - INSUFFICIENT_STORAGE
          - INTERNAL_SERVER_ERROR
          - I_AM_A_TEAPOT
          - LENGTH_REQUIRED
          - LOCKED
          - LOOP_DETECTED
          - METHOD_FAILURE
          - METHOD_NOT_ALLOWED
          - MOVED_PERMANENTLY
          - MOVED_TEMPORARILY
          - MULTIPLE_CHOICES
          - MULTI_STATUS
          - NETWORK_AUTHENTICATION_REQUIRED
          - NON_AUTHORITATIVE_INFORMATION
          - NOT_ACCEPTABLE
          - NOT_EXTENDED
          - NOT_FOUND
          - NOT_IMPLEMENTED
          - NOT_MODIFIED
          - NO_CONTENT
          - OK
          - PARTIAL_CONTENT
          - PAYLOAD_TOO_LARGE
          - PAYMENT_REQUIRED
          - PERMANENT_REDIRECT
          - PRECONDITION_FAILED
          - PRECONDITION_REQUIRED
          - PROCESSING
          - PROXY_AUTHENTICATION_REQUIRED
          - REQUESTED_RANGE_NOT_SATISFIABLE
          - REQUEST_ENTITY_TOO_LARGE
          - REQUEST_HEADER_FIELDS_TOO_LARGE
          - REQUEST_TIMEOUT
          - REQUEST_URI_TOO_LONG
          - RESET_CONTENT
          - SEE_OTHER
          - SERVICE_UNAVAILABLE
          - SWITCHING_PROTOCOLS
          - TEMPORARY_REDIRECT
          - TOO_EARLY
          - TOO_MANY_REQUESTS
          - UNAUTHORIZED
          - UNAVAILABLE_FOR_LEGAL_REASONS
          - UNPROCESSABLE_ENTITY
          - UNSUPPORTED_MEDIA_TYPE
          - UPGRADE_REQUIRED
          - URI_TOO_LONG
          - USE_PROXY
          - VARIANT_ALSO_NEGOTIATES
        type: string
      statusCodeValue:
        format: int32
        type: integer
    title: ResponseEntity
    type: object
  Restrictions:
    description: Describe restrictions to be applied to edges on the routing. any edges that do not match these restrictions are not traversed.
    properties:
      axleload:
        description: 'Axleload restriction in tons. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
        example: 50
        format: float
        type: number
      hazmat:
        description: 'Specifies whether to use appropriate routing for delivering hazardous goods and avoiding water protected areas. Default is `false`. CUSTOM_KEYS:{''apiDefault'':false,''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
        type: boolean
      height:
        description: 'Height restriction in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
        example: 4.2
        format: float
        type: number
      length:
        description: 'Length restriction in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
        example: 8.4
        format: float
        type: number
      maximum_incline:
        description: 'Specifies the maximum incline as a percentage. `3`, `6` (default), `10`, `15.CUSTOM_KEYS:{''apiDefault'':6,''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
        example: 3
        format: int32
        type: integer
      maximum_sloped_kerb:
        description: 'Specifies the maximum height of the sloped curb in metres. Values are `0.03`, `0.06` (default), `0.1`.CUSTOM_KEYS:{''apiDefault'':0.6,''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
        example: 0.03
        format: float
        type: number
      minimum_width:
        description: 'Specifies the minimum width of the footway in metres.CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
        example: 2.5
        format: float
        type: number
      smoothness_type:
        description: 'Specifies the minimum smoothness of the route. Default is `good`.CUSTOM_KEYS:{''apiDefault'':''good'',''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
        enum:
          - bad
          - excellent
          - good
          - horrible
          - impassable
          - intermediate
          - very_bad
          - very_horrible
        example: best
        type: string
      surface_type:
        description: 'Specifies the minimum surface type. Default is `sett`. CUSTOM_KEYS:{''apiDefault'':''sett'',''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
        example: asphalt
        type: string
      track_type:
        description: 'Specifies the minimum grade of the route. Default is `grade1`. CUSTOM_KEYS:{''apiDefault'':''grade1'',''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
        example: grade2
        type: string
      weight:
        description: 'Weight restriction in tons. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
        example: 40
        format: float
        type: number
      width:
        description: 'Width restriction in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
        example: 5.6
        format: float
        type: number
    title: Restrictions
    type: object
  Round_Trip_Route_Options:
    description: Specifies the parameters for generating round trip routes.
    properties:
      length:
        description: 'The target length of the route in `m` (note that this is a preferred value, but results may be different).'
        example: 10000
        format: float
        type: number
      points:
        description: The number of points to use on the route. Larger values create more circular routes.
        example: 5
        format: int32
        type: integer
      seed:
        description: A seed to use for adding randomisation to the overall direction of the generated route
        example: 1
        format: int64
        type: integer
    title: Round Trip Route Options
    type: object
  RouteResponseInfo:
    description: Information about the request
    properties:
      attribution:
        description: Copyright and attribution information
        example: openrouteservice.org | OpenStreetMap contributors
        type: string
      engine:
        description: Information about the routing service
        properties:
          build_date:
            description: The date that the service was last updated
            example: '2019-02-07T14:28:11Z'
            type: string
          graph_date:
            description: The date that the graph data was last updated
            example: '2019-02-07T14:28:11Z'
            type: string
          version:
            description: The backend version of the openrouteservice that was queried
            example: 5
            type: string
        title: EngineInfo
        type: object
      id:
        description: ID of the request (as passed in by the query)
        example: request123
        type: string
      osm_file_md5_hash:
        description: The MD5 hash of the OSM planet file that was used for generating graphs
        example: c0327ba6
        type: string
      query:
        allOf:
          - description: Advanced options for routing
            properties:
              avoid_borders:
                description: '`all` for no border crossing. `controlled` to cross open borders but avoid controlled ones. Only for `driving-*` profiles. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-*'']}}'
                enum:
                  - all
                  - controlled
                  - none
                example: controlled
                type: string
              avoid_countries:
                description: 'List of countries to exclude from matrix with `driving-*` profiles. Can be used together with `''avoid_borders'': ''controlled''`. `[ 11, 193 ]` would exclude Austria and Switzerland. List of countries and application examples can be found [here](https://GIScience.github.io/openrouteservice/documentation/routing-options/Country-List.html). Also, ISO standard country codes cna be used in place of the numerical ids, for example, DE or DEU for Germany. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-*'']}}'
                example:
                  - 11
                  - 193
                items:
                  type: string
                type: array
              avoid_features:
                description: 'List of features to avoid. CUSTOM_KEYS:{''itemRestrictions'':{''ref'':''profile'', ''itemsWhen'':{''driving-*'':[''highways'',''tollways'',''ferries''],''cycling-*'':[''ferries'',''steps'',''fords''],''foot-*'':[''ferries'',''fords'',''steps''],''wheelchair'':[''ferries'',''steps'']}}}'
                example:
                  - highways
                items:
                  enum:
                    - ferries
                    - fords
                    - highways
                    - steps
                    - tollways
                  type: string
                type: array
              avoid_polygons:
                additionalProperties:
                  type: object
                description: Comprises areas to be avoided for the route. Formatted in GeoJSON as either a Polygon or Multipolygon object.
                type: object
              profile_params:
                description: ' Specifies additional matrix parameters.CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''valueNot'':[''driving-car'']}}'
                properties:
                  allow_unsuitable:
                    description: 'Specifies if ways that might not be suitable (e.g. unknown pedestrian usage) should be included in finding routes - default falseCUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                    example: true
                    type: boolean
                  restrictions:
                    description: Describe restrictions to be applied to edges on the routing. any edges that do not match these restrictions are not traversed.
                    properties:
                      axleload:
                        description: 'Axleload restriction in tons. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                        example: 50
                        format: float
                        type: number
                      hazmat:
                        description: 'Specifies whether to use appropriate routing for delivering hazardous goods and avoiding water protected areas. Default is `false`. CUSTOM_KEYS:{''apiDefault'':false,''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                        type: boolean
                      height:
                        description: 'Height restriction in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                        example: 4.2
                        format: float
                        type: number
                      length:
                        description: 'Length restriction in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                        example: 8.4
                        format: float
                        type: number
                      maximum_incline:
                        description: 'Specifies the maximum incline as a percentage. `3`, `6` (default), `10`, `15.CUSTOM_KEYS:{''apiDefault'':6,''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                        example: 3
                        format: int32
                        type: integer
                      maximum_sloped_kerb:
                        description: 'Specifies the maximum height of the sloped curb in metres. Values are `0.03`, `0.06` (default), `0.1`.CUSTOM_KEYS:{''apiDefault'':0.6,''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                        example: 0.03
                        format: float
                        type: number
                      minimum_width:
                        description: 'Specifies the minimum width of the footway in metres.CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                        example: 2.5
                        format: float
                        type: number
                      smoothness_type:
                        description: 'Specifies the minimum smoothness of the route. Default is `good`.CUSTOM_KEYS:{''apiDefault'':''good'',''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                        enum:
                          - bad
                          - excellent
                          - good
                          - horrible
                          - impassable
                          - intermediate
                          - very_bad
                          - very_horrible
                        example: best
                        type: string
                      surface_type:
                        description: 'Specifies the minimum surface type. Default is `sett`. CUSTOM_KEYS:{''apiDefault'':''sett'',''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                        example: asphalt
                        type: string
                      track_type:
                        description: 'Specifies the minimum grade of the route. Default is `grade1`. CUSTOM_KEYS:{''apiDefault'':''grade1'',''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                        example: grade2
                        type: string
                      weight:
                        description: 'Weight restriction in tons. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                        example: 40
                        format: float
                        type: number
                      width:
                        description: 'Width restriction in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                        example: 5.6
                        format: float
                        type: number
                    title: Restrictions
                    type: object
                  surface_quality_known:
                    description: 'Specifies whether to enforce that only ways with known information on surface quality be taken into account - default falseCUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                    example: true
                    type: boolean
                  weightings:
                    description: Describe additional weightings to be applied to edges on the routing.
                    properties:
                      csvColumn:
                        type: string
                      csv_column:
                        description: Specifies the csv column name
                        type: string
                      csv_factor:
                        description: Specifies the factor of csv-column (range 0 to 1)
                        format: float
                        type: number
                      green:
                        description: |-
                          Specifies the Green factor for `foot-*` profiles.

                          factor: Multiplication factor range from 0 to 1. 0 is the green routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer ways through green areas over a shorter route. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['foot-*']}}
                        example: 0.4
                        format: float
                        type: number
                      quiet:
                        description: |-
                          Specifies the Quiet factor for foot-* profiles.

                          factor: Multiplication factor range from 0 to 1. 0 is the quiet routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer quiet ways over a shorter route. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['foot-*']}}
                        example: 0.8
                        format: float
                        type: number
                      shadow:
                        description: |-
                          Specifies the shadow factor for `foot-*` profiles.

                          factor: Multiplication factor range from 0 to 1. 0 is the shadow routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer ways through shadow areas over a shorter route. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['foot-*']}}
                        example: 0.4
                        format: float
                        type: number
                      steepness_difficulty:
                        description: |-
                          Specifies the fitness level for `cycling-*` profiles.

                           level: 0 = Novice, 1 = Moderate, 2 = Amateur, 3 = Pro. The prefered gradient increases with level. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['cycling-*']}}
                        example: 2
                        format: int32
                        type: integer
                    title: Profile Weightings
                    type: object
                title: Profile Parameters
                type: object
              round_trip:
                description: Options to be applied on round trip routes.
                example:
                  length: 10000
                  points: 5
                properties:
                  length:
                    description: 'The target length of the route in `m` (note that this is a preferred value, but results may be different).'
                    example: 10000
                    format: float
                    type: number
                  points:
                    description: The number of points to use on the route. Larger values create more circular routes.
                    example: 5
                    format: int32
                    type: integer
                  seed:
                    description: A seed to use for adding randomisation to the overall direction of the generated route
                    example: 1
                    format: int64
                    type: integer
                title: Round Trip Route Options
                type: object
              vehicle_type:
                description: '(for profile=driving-hgv only): hgv,bus,agricultural,delivery,forestry and goods. It is needed for vehicle restrictions to work. CUSTOM_KEYS:{''apiDefault'':''hgv'',''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                enum:
                  - agricultural
                  - bus
                  - delivery
                  - forestry
                  - goods
                  - hgv
                  - unknown
                type: string
            title: Route Options
            type: object
          - description: The JSON body request sent to the routing service which defines options and parameters regarding the route to generate.
            properties:
              alternative_routes:
                description: 'Specifies whether alternative routes are computed, and parameters for the algorithm determining suitable alternatives.'
                example:
                  target_count: 2
                  weight_factor: 1.6
                properties:
                  share_factor:
                    description: Maximum fraction of the route that alternatives may share with the optimal route. The default value of 0.6 means alternatives can share up to 60% of path segments with the optimal route.
                    example: 0.6
                    format: double
                    type: number
                  target_count:
                    description: Target number of alternative routes to compute. Service returns up to this number of routes that fulfill the share-factor and weight-factor constraints.
                    example: 2
                    format: int32
                    type: integer
                  weight_factor:
                    description: Maximum factor by which route weight may diverge from the optimal route. The default value of 1.4 means alternatives can be up to 1.4 times longer (costly) than the optimal route.
                    example: 1.4
                    format: double
                    type: number
                title: Alternative Routes
                type: object
              attributes:
                description: List of route attributes
                example:
                  - avgspeed
                  - percentage
                items:
                  enum:
                    - avgspeed
                    - detourfactor
                    - percentage
                  type: string
                type: array
              bearings:
                description: |-
                  Specifies a list of pairs (bearings and deviations) to filter the segments of the road network a waypoint can snap to. For example `bearings=[[45,10],[120,20]]`. 
                  Each pair is a comma-separated list that can consist of one or two float values, where the first value is the bearing and the second one is the allowed deviation from the bearing. The bearing can take values between `0` and `360` clockwise from true north. If the deviation is not set, then the default value of `100` degrees is used. The number of pairs must correspond to the number of waypoints.
                  The number of bearings corresponds to the length of waypoints-1 or waypoints. If the bearing information for the last waypoint is given, then this will control the sector from which the destination waypoint may be reached. You can skip a bearing for a certain waypoint by passing an empty value for an array, e.g. `[30,20],[],[40,20]`. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':'cycling-*'}}
                example:
                  - - 30
                    - 20
                  - []
                  - - 40
                    - 20
                items:
                  items:
                    format: double
                    type: number
                  type: array
                type: array
              continue_straight:
                description: 'Forces the route to keep going straight at waypoints restricting uturns there even if it would be faster.CUSTOM_KEYS:{''apiDefault'':''false''}'
                example: false
                type: boolean
              coordinates:
                description: 'The waypoints to use for the route as an array of `longitude/latitude` pairs in WGS 84 (EPSG:4326)'
                example:
                  - - 8.681495
                    - 49.41461
                  - - 8.686507
                    - 49.41943
                  - - 8.687872
                    - 49.420318
                items:
                  items:
                    format: double
                    type: number
                  type: array
                type: array
              elevation:
                description: Specifies whether to return elevation values for points. Please note that elevation also gets encoded for json response encoded polyline.
                example: false
                type: boolean
              extra_info:
                description: The extra info items to include in the response
                example:
                  - waytype
                  - surface
                items:
                  enum:
                    - countryinfo
                    - csv
                    - green
                    - noise
                    - osmid
                    - roadaccessrestrictions
                    - shadow
                    - steepness
                    - suitability
                    - surface
                    - tollways
                    - traildifficulty
                    - waycategory
                    - waytype
                  type: string
                type: array
              geometry:
                description: 'Specifies whether to return geometry. CUSTOM_KEYS:{''apiDefault'':true, ''validWhen'':{''ref'':''format'',''value'':[''json'']}}'
                example: true
                type: boolean
              geometry_simplify:
                description: 'Specifies whether to simplify the geometry. Simplify geometry cannot be applied to routes with more than **one segment** and when `extra_info` is required.CUSTOM_KEYS:{''apiDefault'':false}'
                example: false
                type: boolean
              id:
                description: Arbitrary identification string of the request reflected in the meta information.
                example: centrality_request
                type: string
              instructions:
                description: 'Specifies whether to return instructions. CUSTOM_KEYS:{''apiDefault'':true}'
                example: true
                type: boolean
              instructions_format:
                description: 'Select html for more verbose instructions. CUSTOM_KEYS:{''apiDefault'':''text''}'
                enum:
                  - html
                  - text
                example: text
                type: string
              language:
                description: 'Language for the route instructions. CUSTOM_KEYS:{''apiDefault'':''en''}'
                enum:
                  - cs
                  - cs-cz
                  - de
                  - de-de
                  - en
                  - en-us
                  - eo
                  - eo-eo
                  - es
                  - es-es
                  - fr
                  - fr-fr
                  - gr
                  - gr-gr
                  - he
                  - he-il
                  - hu
                  - hu-hu
                  - id
                  - id-id
                  - it
                  - it-it
                  - ja
                  - ja-jp
                  - ne
                  - ne-np
                  - nl
                  - nl-nl
                  - pl
                  - pl-pl
                  - pt
                  - pt-pt
                  - ro
                  - ro-ro
                  - ru
                  - ru-ru
                  - tr
                  - tr-tr
                  - zh
                  - zh-cn
                example: en
                type: string
              maneuvers:
                description: 'Specifies whether the maneuver object is included into the step object or not. CUSTOM_KEYS:{''apiDefault'':false}'
                example: false
                type: boolean
              maximum_speed:
                description: 'The maximum speed specified by user.CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-*'']}}'
                example: 90
                format: double
                type: number
              options:
                description: 'For advanced options formatted as json object. For structure refer to the [these examples](https://GIScience.github.io/openrouteservice/documentation/routing-options/Examples.html).'
                example:
                  avoid_borders: controlled
                properties:
                  avoid_borders:
                    description: '`all` for no border crossing. `controlled` to cross open borders but avoid controlled ones. Only for `driving-*` profiles. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-*'']}}'
                    enum:
                      - all
                      - controlled
                      - none
                    example: controlled
                    type: string
                  avoid_countries:
                    description: 'List of countries to exclude from matrix with `driving-*` profiles. Can be used together with `''avoid_borders'': ''controlled''`. `[ 11, 193 ]` would exclude Austria and Switzerland. List of countries and application examples can be found [here](https://GIScience.github.io/openrouteservice/documentation/routing-options/Country-List.html). Also, ISO standard country codes cna be used in place of the numerical ids, for example, DE or DEU for Germany. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-*'']}}'
                    example:
                      - 11
                      - 193
                    items:
                      type: string
                    type: array
                  avoid_features:
                    description: 'List of features to avoid. CUSTOM_KEYS:{''itemRestrictions'':{''ref'':''profile'', ''itemsWhen'':{''driving-*'':[''highways'',''tollways'',''ferries''],''cycling-*'':[''ferries'',''steps'',''fords''],''foot-*'':[''ferries'',''fords'',''steps''],''wheelchair'':[''ferries'',''steps'']}}}'
                    example:
                      - highways
                    items:
                      enum:
                        - ferries
                        - fords
                        - highways
                        - steps
                        - tollways
                      type: string
                    type: array
                  avoid_polygons:
                    additionalProperties:
                      type: object
                    description: Comprises areas to be avoided for the route. Formatted in GeoJSON as either a Polygon or Multipolygon object.
                    type: object
                  profile_params:
                    description: ' Specifies additional matrix parameters.CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''valueNot'':[''driving-car'']}}'
                    properties:
                      allow_unsuitable:
                        description: 'Specifies if ways that might not be suitable (e.g. unknown pedestrian usage) should be included in finding routes - default falseCUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                        example: true
                        type: boolean
                      restrictions:
                        description: Describe restrictions to be applied to edges on the routing. any edges that do not match these restrictions are not traversed.
                        properties:
                          axleload:
                            description: 'Axleload restriction in tons. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                            example: 50
                            format: float
                            type: number
                          hazmat:
                            description: 'Specifies whether to use appropriate routing for delivering hazardous goods and avoiding water protected areas. Default is `false`. CUSTOM_KEYS:{''apiDefault'':false,''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                            type: boolean
                          height:
                            description: 'Height restriction in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                            example: 4.2
                            format: float
                            type: number
                          length:
                            description: 'Length restriction in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                            example: 8.4
                            format: float
                            type: number
                          maximum_incline:
                            description: 'Specifies the maximum incline as a percentage. `3`, `6` (default), `10`, `15.CUSTOM_KEYS:{''apiDefault'':6,''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                            example: 3
                            format: int32
                            type: integer
                          maximum_sloped_kerb:
                            description: 'Specifies the maximum height of the sloped curb in metres. Values are `0.03`, `0.06` (default), `0.1`.CUSTOM_KEYS:{''apiDefault'':0.6,''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                            example: 0.03
                            format: float
                            type: number
                          minimum_width:
                            description: 'Specifies the minimum width of the footway in metres.CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                            example: 2.5
                            format: float
                            type: number
                          smoothness_type:
                            description: 'Specifies the minimum smoothness of the route. Default is `good`.CUSTOM_KEYS:{''apiDefault'':''good'',''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                            enum:
                              - bad
                              - excellent
                              - good
                              - horrible
                              - impassable
                              - intermediate
                              - very_bad
                              - very_horrible
                            example: best
                            type: string
                          surface_type:
                            description: 'Specifies the minimum surface type. Default is `sett`. CUSTOM_KEYS:{''apiDefault'':''sett'',''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                            example: asphalt
                            type: string
                          track_type:
                            description: 'Specifies the minimum grade of the route. Default is `grade1`. CUSTOM_KEYS:{''apiDefault'':''grade1'',''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                            example: grade2
                            type: string
                          weight:
                            description: 'Weight restriction in tons. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                            example: 40
                            format: float
                            type: number
                          width:
                            description: 'Width restriction in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                            example: 5.6
                            format: float
                            type: number
                        title: Restrictions
                        type: object
                      surface_quality_known:
                        description: 'Specifies whether to enforce that only ways with known information on surface quality be taken into account - default falseCUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                        example: true
                        type: boolean
                      weightings:
                        description: Describe additional weightings to be applied to edges on the routing.
                        properties:
                          csvColumn:
                            type: string
                          csv_column:
                            description: Specifies the csv column name
                            type: string
                          csv_factor:
                            description: Specifies the factor of csv-column (range 0 to 1)
                            format: float
                            type: number
                          green:
                            description: |-
                              Specifies the Green factor for `foot-*` profiles.

                              factor: Multiplication factor range from 0 to 1. 0 is the green routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer ways through green areas over a shorter route. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['foot-*']}}
                            example: 0.4
                            format: float
                            type: number
                          quiet:
                            description: |-
                              Specifies the Quiet factor for foot-* profiles.

                              factor: Multiplication factor range from 0 to 1. 0 is the quiet routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer quiet ways over a shorter route. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['foot-*']}}
                            example: 0.8
                            format: float
                            type: number
                          shadow:
                            description: |-
                              Specifies the shadow factor for `foot-*` profiles.

                              factor: Multiplication factor range from 0 to 1. 0 is the shadow routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer ways through shadow areas over a shorter route. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['foot-*']}}
                            example: 0.4
                            format: float
                            type: number
                          steepness_difficulty:
                            description: |-
                              Specifies the fitness level for `cycling-*` profiles.

                               level: 0 = Novice, 1 = Moderate, 2 = Amateur, 3 = Pro. The prefered gradient increases with level. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['cycling-*']}}
                            example: 2
                            format: int32
                            type: integer
                        title: Profile Weightings
                        type: object
                    title: Profile Parameters
                    type: object
                  round_trip:
                    description: Options to be applied on round trip routes.
                    example:
                      length: 10000
                      points: 5
                    properties:
                      length:
                        description: 'The target length of the route in `m` (note that this is a preferred value, but results may be different).'
                        example: 10000
                        format: float
                        type: number
                      points:
                        description: The number of points to use on the route. Larger values create more circular routes.
                        example: 5
                        format: int32
                        type: integer
                      seed:
                        description: A seed to use for adding randomisation to the overall direction of the generated route
                        example: 1
                        format: int64
                        type: integer
                    title: Round Trip Route Options
                    type: object
                  vehicle_type:
                    description: '(for profile=driving-hgv only): hgv,bus,agricultural,delivery,forestry and goods. It is needed for vehicle restrictions to work. CUSTOM_KEYS:{''apiDefault'':''hgv'',''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                    enum:
                      - agricultural
                      - bus
                      - delivery
                      - forestry
                      - goods
                      - hgv
                      - unknown
                    type: string
                title: Route Options
                type: object
              preference:
                description: 'Specifies the route preference. CUSTOM_KEYS:{''apiDefault'':''recommended''}'
                enum:
                  - fastest
                  - recommended
                  - shortest
                example: recommended
                type: string
              radiuses:
                description: 'A list of maximum distances (measured in metres) that limit the search of nearby road segments to every given waypoint. The values must be greater than 0, the value of -1 specifies using the maximum possible search radius. The number of radiuses correspond to the number of waypoints. If only a single value is given, it will be applied to all waypoints.'
                example:
                  - 200
                  - -1
                  - 30
                items:
                  format: double
                  type: number
                type: array
              roundabout_exits:
                description: 'Provides bearings of the entrance and all passed roundabout exits. Adds the `exit_bearings` array to the step object in the response. CUSTOM_KEYS:{''apiDefault'':false}'
                example: false
                type: boolean
              skip_segments:
                description: Specifies the segments that should be skipped in the route calculation. A segment is the connection between two given coordinates and the counting starts with 1 for the connection between the first and second coordinate.
                example:
                  - 2
                  - 4
                items:
                  format: int32
                  type: integer
                type: array
              suppress_warnings:
                description: Suppress warning messages in the response
                example: false
                type: boolean
              units:
                description: 'Specifies the distance unit. CUSTOM_KEYS:{''apiDefault'':''m''}'
                enum:
                  - km
                  - m
                  - mi
                example: m
                type: string
            required:
              - coordinates
            title: Directions Service
            type: object
        description: The information that was used for generating the route
        title: Directions Service
      service:
        description: The service that was requested
        example: routing
        type: string
      system_message:
        description: System message
        example: A message string configured in the service
        type: string
      timestamp:
        description: Time that the request was made (UNIX Epoch time)
        example: 1549549847974
        format: int64
        type: integer
    title: RouteResponseInfo
    type: object
  Route_Options:
    description: Advanced options for routing
    properties:
      avoid_borders:
        description: '`all` for no border crossing. `controlled` to cross open borders but avoid controlled ones. Only for `driving-*` profiles. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-*'']}}'
        enum:
          - all
          - controlled
          - none
        example: controlled
        type: string
      avoid_countries:
        description: 'List of countries to exclude from matrix with `driving-*` profiles. Can be used together with `''avoid_borders'': ''controlled''`. `[ 11, 193 ]` would exclude Austria and Switzerland. List of countries and application examples can be found [here](https://GIScience.github.io/openrouteservice/documentation/routing-options/Country-List.html). Also, ISO standard country codes cna be used in place of the numerical ids, for example, DE or DEU for Germany. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-*'']}}'
        example:
          - 11
          - 193
        items:
          type: string
        type: array
      avoid_features:
        description: 'List of features to avoid. CUSTOM_KEYS:{''itemRestrictions'':{''ref'':''profile'', ''itemsWhen'':{''driving-*'':[''highways'',''tollways'',''ferries''],''cycling-*'':[''ferries'',''steps'',''fords''],''foot-*'':[''ferries'',''fords'',''steps''],''wheelchair'':[''ferries'',''steps'']}}}'
        example:
          - highways
        items:
          enum:
            - ferries
            - fords
            - highways
            - steps
            - tollways
          type: string
        type: array
      avoid_polygons:
        additionalProperties:
          type: object
        description: Comprises areas to be avoided for the route. Formatted in GeoJSON as either a Polygon or Multipolygon object.
        type: object
      profile_params:
        description: ' Specifies additional matrix parameters.CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''valueNot'':[''driving-car'']}}'
        properties:
          allow_unsuitable:
            description: 'Specifies if ways that might not be suitable (e.g. unknown pedestrian usage) should be included in finding routes - default falseCUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
            example: true
            type: boolean
          restrictions:
            description: Describe restrictions to be applied to edges on the routing. any edges that do not match these restrictions are not traversed.
            properties:
              axleload:
                description: 'Axleload restriction in tons. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                example: 50
                format: float
                type: number
              hazmat:
                description: 'Specifies whether to use appropriate routing for delivering hazardous goods and avoiding water protected areas. Default is `false`. CUSTOM_KEYS:{''apiDefault'':false,''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                type: boolean
              height:
                description: 'Height restriction in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                example: 4.2
                format: float
                type: number
              length:
                description: 'Length restriction in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                example: 8.4
                format: float
                type: number
              maximum_incline:
                description: 'Specifies the maximum incline as a percentage. `3`, `6` (default), `10`, `15.CUSTOM_KEYS:{''apiDefault'':6,''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                example: 3
                format: int32
                type: integer
              maximum_sloped_kerb:
                description: 'Specifies the maximum height of the sloped curb in metres. Values are `0.03`, `0.06` (default), `0.1`.CUSTOM_KEYS:{''apiDefault'':0.6,''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                example: 0.03
                format: float
                type: number
              minimum_width:
                description: 'Specifies the minimum width of the footway in metres.CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                example: 2.5
                format: float
                type: number
              smoothness_type:
                description: 'Specifies the minimum smoothness of the route. Default is `good`.CUSTOM_KEYS:{''apiDefault'':''good'',''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                enum:
                  - bad
                  - excellent
                  - good
                  - horrible
                  - impassable
                  - intermediate
                  - very_bad
                  - very_horrible
                example: best
                type: string
              surface_type:
                description: 'Specifies the minimum surface type. Default is `sett`. CUSTOM_KEYS:{''apiDefault'':''sett'',''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                example: asphalt
                type: string
              track_type:
                description: 'Specifies the minimum grade of the route. Default is `grade1`. CUSTOM_KEYS:{''apiDefault'':''grade1'',''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
                example: grade2
                type: string
              weight:
                description: 'Weight restriction in tons. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                example: 40
                format: float
                type: number
              width:
                description: 'Width restriction in metres. CUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
                example: 5.6
                format: float
                type: number
            title: Restrictions
            type: object
          surface_quality_known:
            description: 'Specifies whether to enforce that only ways with known information on surface quality be taken into account - default falseCUSTOM_KEYS:{''validWhen'':{''ref'':''profile'',''value'':[''wheelchair'']}}'
            example: true
            type: boolean
          weightings:
            description: Describe additional weightings to be applied to edges on the routing.
            properties:
              csvColumn:
                type: string
              csv_column:
                description: Specifies the csv column name
                type: string
              csv_factor:
                description: Specifies the factor of csv-column (range 0 to 1)
                format: float
                type: number
              green:
                description: |-
                  Specifies the Green factor for `foot-*` profiles.

                  factor: Multiplication factor range from 0 to 1. 0 is the green routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer ways through green areas over a shorter route. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['foot-*']}}
                example: 0.4
                format: float
                type: number
              quiet:
                description: |-
                  Specifies the Quiet factor for foot-* profiles.

                  factor: Multiplication factor range from 0 to 1. 0 is the quiet routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer quiet ways over a shorter route. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['foot-*']}}
                example: 0.8
                format: float
                type: number
              shadow:
                description: |-
                  Specifies the shadow factor for `foot-*` profiles.

                  factor: Multiplication factor range from 0 to 1. 0 is the shadow routing base factor without multiplying it by the manual factor and is already different from normal routing. 1 will prefer ways through shadow areas over a shorter route. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['foot-*']}}
                example: 0.4
                format: float
                type: number
              steepness_difficulty:
                description: |-
                  Specifies the fitness level for `cycling-*` profiles.

                   level: 0 = Novice, 1 = Moderate, 2 = Amateur, 3 = Pro. The prefered gradient increases with level. CUSTOM_KEYS:{'validWhen':{'ref':'profile','value':['cycling-*']}}
                example: 2
                format: int32
                type: integer
            title: Profile Weightings
            type: object
        title: Profile Parameters
        type: object
      round_trip:
        description: Options to be applied on round trip routes.
        example:
          length: 10000
          points: 5
        properties:
          length:
            description: 'The target length of the route in `m` (note that this is a preferred value, but results may be different).'
            example: 10000
            format: float
            type: number
          points:
            description: The number of points to use on the route. Larger values create more circular routes.
            example: 5
            format: int32
            type: integer
          seed:
            description: A seed to use for adding randomisation to the overall direction of the generated route
            example: 1
            format: int64
            type: integer
        title: Round Trip Route Options
        type: object
      vehicle_type:
        description: '(for profile=driving-hgv only): hgv,bus,agricultural,delivery,forestry and goods. It is needed for vehicle restrictions to work. CUSTOM_KEYS:{''apiDefault'':''hgv'',''validWhen'':{''ref'':''profile'',''value'':[''driving-hgv'']}}'
        enum:
          - agricultural
          - bus
          - delivery
          - forestry
          - goods
          - hgv
          - unknown
        type: string
    title: Route Options
    type: object
  gpx:
    properties:
      gpxRouteElements:
        items:
          title: rte
          type: object
          xml:
            attribute: false
            name: rte
            wrapped: false
        type: array
    title: gpx
    type: object
    xml:
      attribute: false
      name: gpx
      wrapped: false
  rte:
    title: rte
    type: object
    xml:
      attribute: false
      name: rte
      wrapped: false
